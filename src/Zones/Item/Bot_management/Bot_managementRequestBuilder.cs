// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management
{
    /// <summary>
    /// Builds and executes requests for operations under \zones\{zone_identifier-id}\bot_management
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Bot_managementRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management.Bot_managementRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Bot_managementRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zones/{zone_identifier%2Did}/bot_management", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management.Bot_managementRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Bot_managementRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zones/{zone_identifier%2Did}/bot_management", rawUrl)
        {
        }
        /// <summary>
        /// Retrieve a zone&apos;s Bot Management Config
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Bot_management_for_a_zone_get_config_4XX">When receiving a 4XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "4XX", global::Soenneker.Cloudflare.OpenApiClient.Models.Bot_management_for_a_zone_get_config_4XX.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body>(requestInfo, global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the Bot Management configuration for a zone.This API is used to update:- **Bot Fight Mode**- **Super Bot Fight Mode**- **Bot Management for Enterprise**See [Bot Plans](https://developers.cloudflare.com/bots/plans/) for more information on the different plans \If you recently upgraded or downgraded your plan, refer to the following examples to clean up old configurations. Copy and paste the example body to remove old zone configurations based on your current plan.#### Clean up configuration for Bot Fight Mode plan```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_definitely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_verified_bots&quot;: &quot;allow&quot;,   &quot;sbfm_static_resource_protection&quot;: false,   &quot;optimize_wordpress&quot;: false,   &quot;suppress_session_score&quot;: false }```#### Clean up configuration for SBFM Pro plan```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;fight_mode&quot;: false }```#### Clean up configuration for SBFM Biz plan```json{  &quot;fight_mode&quot;: false}```#### Clean up configuration for BM Enterprise Subscription planIt is strongly recommended that you ensure you have [custom rules](https://developers.cloudflare.com/waf/custom-rules/) in place to protect your zone before disabling the SBFM rules. Without these protections, your zone is vulnerable to attacks.```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_definitely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_verified_bots&quot;: &quot;allow&quot;,   &quot;sbfm_static_resource_protection&quot;: false,   &quot;optimize_wordpress&quot;: false,   &quot;fight_mode&quot;: false}```
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Bot_management_for_a_zone_update_config_4XX">When receiving a 4XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body?> PutAsync(global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_config_single body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body> PutAsync(global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_config_single body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "4XX", global::Soenneker.Cloudflare.OpenApiClient.Models.Bot_management_for_a_zone_update_config_4XX.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body>(requestInfo, global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_bot_management_response_body.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieve a zone&apos;s Bot Management Config
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Updates the Bot Management configuration for a zone.This API is used to update:- **Bot Fight Mode**- **Super Bot Fight Mode**- **Bot Management for Enterprise**See [Bot Plans](https://developers.cloudflare.com/bots/plans/) for more information on the different plans \If you recently upgraded or downgraded your plan, refer to the following examples to clean up old configurations. Copy and paste the example body to remove old zone configurations based on your current plan.#### Clean up configuration for Bot Fight Mode plan```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_definitely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_verified_bots&quot;: &quot;allow&quot;,   &quot;sbfm_static_resource_protection&quot;: false,   &quot;optimize_wordpress&quot;: false,   &quot;suppress_session_score&quot;: false }```#### Clean up configuration for SBFM Pro plan```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;fight_mode&quot;: false }```#### Clean up configuration for SBFM Biz plan```json{  &quot;fight_mode&quot;: false}```#### Clean up configuration for BM Enterprise Subscription planIt is strongly recommended that you ensure you have [custom rules](https://developers.cloudflare.com/waf/custom-rules/) in place to protect your zone before disabling the SBFM rules. Without these protections, your zone is vulnerable to attacks.```json{  &quot;sbfm_likely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_definitely_automated&quot;: &quot;allow&quot;,   &quot;sbfm_verified_bots&quot;: &quot;allow&quot;,   &quot;sbfm_static_resource_protection&quot;: false,   &quot;optimize_wordpress&quot;: false,   &quot;fight_mode&quot;: false}```
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_config_single body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(global::Soenneker.Cloudflare.OpenApiClient.Models.BotManagement_config_single body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management.Bot_managementRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management.Bot_managementRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Bot_management.Bot_managementRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Bot_managementRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Bot_managementRequestBuilderPutRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
