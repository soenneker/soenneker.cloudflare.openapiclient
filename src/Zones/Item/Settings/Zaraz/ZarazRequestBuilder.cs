// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Config;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Default;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Export;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.History;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Publish;
using Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Workflow;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz
{
    /// <summary>
    /// Builds and executes requests for operations under \zones\{identifier-id}\settings\zaraz
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ZarazRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The config property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Config.ConfigRequestBuilder Config
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Config.ConfigRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The default property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Default.DefaultRequestBuilder Default
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Default.DefaultRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The export property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Export.ExportRequestBuilder Export
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Export.ExportRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The history property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.History.HistoryRequestBuilder History
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.History.HistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The publish property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Publish.PublishRequestBuilder Publish
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Publish.PublishRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The workflow property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Workflow.WorkflowRequestBuilder Workflow
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.Workflow.WorkflowRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.ZarazRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ZarazRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zones/{identifier%2Did}/settings/zaraz", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Zones.Item.Settings.Zaraz.ZarazRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ZarazRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zones/{identifier%2Did}/settings/zaraz", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
