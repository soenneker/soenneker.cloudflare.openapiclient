// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit
{
    /// <summary>
    /// Builds and executes requests for operations under \accounts\{account_identifier-id}\logs\audit
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AuditRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuditRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/logs/audit?before={before}&since={since}{&account_name*,account_name%2Enot*,action_result*,action_result%2Enot*,action_type*,action_type%2Enot*,actor_context*,actor_context%2Enot*,actor_email*,actor_email%2Enot*,actor_id*,actor_id%2Enot*,actor_ip_address*,actor_ip_address%2Enot*,actor_token_id*,actor_token_id%2Enot*,actor_token_name*,actor_token_name%2Enot*,actor_type*,actor_type%2Enot*,audit_log_id*,audit_log_id%2Enot*,cursor*,direction*,limit*,raw_cf_ray_id*,raw_cf_ray_id%2Enot*,raw_method*,raw_method%2Enot*,raw_status_code*,raw_status_code%2Enot*,raw_uri*,raw_uri%2Enot*,resource_id*,resource_id%2Enot*,resource_product*,resource_product%2Enot*,resource_scope*,resource_scope%2Enot*,resource_type*,resource_type%2Enot*,zone_id*,zone_id%2Enot*,zone_name*,zone_name%2Enot*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuditRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/logs/audit?before={before}&since={since}{&account_name*,account_name%2Enot*,action_result*,action_result%2Enot*,action_type*,action_type%2Enot*,actor_context*,actor_context%2Enot*,actor_email*,actor_email%2Enot*,actor_id*,actor_id%2Enot*,actor_ip_address*,actor_ip_address%2Enot*,actor_token_id*,actor_token_id%2Enot*,actor_token_name*,actor_token_name%2Enot*,actor_type*,actor_type%2Enot*,audit_log_id*,audit_log_id%2Enot*,cursor*,direction*,limit*,raw_cf_ray_id*,raw_cf_ray_id%2Enot*,raw_method*,raw_method%2Enot*,raw_status_code*,raw_status_code%2Enot*,raw_uri*,raw_uri%2Enot*,resource_id*,resource_id%2Enot*,resource_product*,resource_product%2Enot*,resource_scope*,resource_scope%2Enot*,resource_type*,resource_type%2Enot*,zone_id*,zone_id%2Enot*,zone_name*,zone_name%2Enot*}", rawUrl)
        {
        }
        /// <summary>
        /// Gets a list of audit logs for an account. &lt;br /&gt;  &lt;br /&gt; This is the beta release of Audit Logs Version 2. Since this is a beta version, there may be gaps or missing entries in the available audit logs. Be aware of the following limitations.  &lt;br /&gt; &lt;ul&gt; &lt;li&gt;Audit logs are available only for the past 30 days. &lt;br /&gt;&lt;/li&gt; &lt;li&gt;Error handling is not yet implemented.  &lt;br /&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2ResponseCollection"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasApiResponseCommonFailure">When receiving a 4XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2ResponseCollection?> GetAsync(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder.AuditRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2ResponseCollection> GetAsync(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder.AuditRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "4XX", global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasApiResponseCommonFailure.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2ResponseCollection>(requestInfo, global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2ResponseCollection.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Gets a list of audit logs for an account. &lt;br /&gt;  &lt;br /&gt; This is the beta release of Audit Logs Version 2. Since this is a beta version, there may be gaps or missing entries in the available audit logs. Be aware of the following limitations.  &lt;br /&gt; &lt;ul&gt; &lt;li&gt;Audit logs are available only for the past 30 days. &lt;br /&gt;&lt;/li&gt; &lt;li&gt;Error handling is not yet implemented.  &lt;br /&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder.AuditRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder.AuditRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Gets a list of audit logs for an account. &lt;br /&gt;  &lt;br /&gt; This is the beta release of Audit Logs Version 2. Since this is a beta version, there may be gaps or missing entries in the available audit logs. Be aware of the following limitations.  &lt;br /&gt; &lt;ul&gt; &lt;li&gt;Audit logs are available only for the past 30 days. &lt;br /&gt;&lt;/li&gt; &lt;li&gt;Error handling is not yet implemented.  &lt;br /&gt; &lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AuditRequestBuilderGetQueryParameters 
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("account_name")]
            public string[]? AccountName { get; set; }
#nullable restore
#else
            [QueryParameter("account_name")]
            public string[] AccountName { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("account_name%2Enot")]
            public string[]? AccountNameNot { get; set; }
#nullable restore
#else
            [QueryParameter("account_name%2Enot")]
            public string[] AccountNameNot { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActionResultAsGetActionResultQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_result")]
            public string[]? ActionResult { get; set; }
#nullable restore
#else
            [QueryParameter("action_result")]
            public string[] ActionResult { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_result")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_resultQueryParameterType[]? ActionResultAsGetActionResultQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("action_result")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_resultQueryParameterType[] ActionResultAsGetActionResultQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActionResultNotAsGetActionResultNotQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_result%2Enot")]
            public string[]? ActionResultNot { get; set; }
#nullable restore
#else
            [QueryParameter("action_result%2Enot")]
            public string[] ActionResultNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_result%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_resultNotQueryParameterType[]? ActionResultNotAsGetActionResultNotQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("action_result%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_resultNotQueryParameterType[] ActionResultNotAsGetActionResultNotQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActionTypeAsGetActionTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_type")]
            public string[]? ActionType { get; set; }
#nullable restore
#else
            [QueryParameter("action_type")]
            public string[] ActionType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_type")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_typeQueryParameterType[]? ActionTypeAsGetActionTypeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("action_type")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_typeQueryParameterType[] ActionTypeAsGetActionTypeQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActionTypeNotAsGetActionTypeNotQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_type%2Enot")]
            public string[]? ActionTypeNot { get; set; }
#nullable restore
#else
            [QueryParameter("action_type%2Enot")]
            public string[] ActionTypeNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("action_type%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_typeNotQueryParameterType[]? ActionTypeNotAsGetActionTypeNotQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("action_type%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetAction_typeNotQueryParameterType[] ActionTypeNotAsGetActionTypeNotQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActorContextAsGetActorContextQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_context")]
            public string[]? ActorContext { get; set; }
#nullable restore
#else
            [QueryParameter("actor_context")]
            public string[] ActorContext { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_context")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_contextQueryParameterType[]? ActorContextAsGetActorContextQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("actor_context")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_contextQueryParameterType[] ActorContextAsGetActorContextQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActorContextNotAsGetActorContextNotQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_context%2Enot")]
            public string[]? ActorContextNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_context%2Enot")]
            public string[] ActorContextNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_context%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_contextNotQueryParameterType[]? ActorContextNotAsGetActorContextNotQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("actor_context%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_contextNotQueryParameterType[] ActorContextNotAsGetActorContextNotQueryParameterType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_email")]
            public string[]? ActorEmail { get; set; }
#nullable restore
#else
            [QueryParameter("actor_email")]
            public string[] ActorEmail { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_email%2Enot")]
            public string[]? ActorEmailNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_email%2Enot")]
            public string[] ActorEmailNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_id")]
            public string[]? ActorId { get; set; }
#nullable restore
#else
            [QueryParameter("actor_id")]
            public string[] ActorId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_id%2Enot")]
            public string[]? ActorIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_id%2Enot")]
            public string[] ActorIdNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_ip_address")]
            public string[]? ActorIpAddress { get; set; }
#nullable restore
#else
            [QueryParameter("actor_ip_address")]
            public string[] ActorIpAddress { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_ip_address%2Enot")]
            public string[]? ActorIpAddressNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_ip_address%2Enot")]
            public string[] ActorIpAddressNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_token_id")]
            public string[]? ActorTokenId { get; set; }
#nullable restore
#else
            [QueryParameter("actor_token_id")]
            public string[] ActorTokenId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_token_id%2Enot")]
            public string[]? ActorTokenIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_token_id%2Enot")]
            public string[] ActorTokenIdNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_token_name")]
            public string[]? ActorTokenName { get; set; }
#nullable restore
#else
            [QueryParameter("actor_token_name")]
            public string[] ActorTokenName { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_token_name%2Enot")]
            public string[]? ActorTokenNameNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_token_name%2Enot")]
            public string[] ActorTokenNameNot { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActorTypeAsGetActorTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_type")]
            public string[]? ActorType { get; set; }
#nullable restore
#else
            [QueryParameter("actor_type")]
            public string[] ActorType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_type")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_typeQueryParameterType[]? ActorTypeAsGetActorTypeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("actor_type")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_typeQueryParameterType[] ActorTypeAsGetActorTypeQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ActorTypeNotAsGetActorTypeNotQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_type%2Enot")]
            public string[]? ActorTypeNot { get; set; }
#nullable restore
#else
            [QueryParameter("actor_type%2Enot")]
            public string[] ActorTypeNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actor_type%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_typeNotQueryParameterType[]? ActorTypeNotAsGetActorTypeNotQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("actor_type%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetActor_typeNotQueryParameterType[] ActorTypeNotAsGetActorTypeNotQueryParameterType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("audit_log_id")]
            public string[]? AuditLogId { get; set; }
#nullable restore
#else
            [QueryParameter("audit_log_id")]
            public string[] AuditLogId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("audit_log_id%2Enot")]
            public string[]? AuditLogIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("audit_log_id%2Enot")]
            public string[] AuditLogIdNot { get; set; }
#endif
            /// <summary>Limits the returned results to logs older than the specified date. This can be a date string 2019-04-30 (interpreted in UTC) or an absolute timestamp that conforms to RFC3339.</summary>
            [QueryParameter("before")]
            public Date? Before { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("cursor")]
            public string? Cursor { get; set; }
#nullable restore
#else
            [QueryParameter("cursor")]
            public string Cursor { get; set; }
#endif
            [Obsolete("This property is deprecated, use DirectionAsGetDirectionQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("direction")]
            public string? Direction { get; set; }
#nullable restore
#else
            [QueryParameter("direction")]
            public string Direction { get; set; }
#endif
            [QueryParameter("direction")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetDirectionQueryParameterType? DirectionAsGetDirectionQueryParameterType { get; set; }
            [QueryParameter("limit")]
            public double? Limit { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_cf_ray_id")]
            public string[]? RawCfRayId { get; set; }
#nullable restore
#else
            [QueryParameter("raw_cf_ray_id")]
            public string[] RawCfRayId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_cf_ray_id%2Enot")]
            public string[]? RawCfRayIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("raw_cf_ray_id%2Enot")]
            public string[] RawCfRayIdNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_method")]
            public string[]? RawMethod { get; set; }
#nullable restore
#else
            [QueryParameter("raw_method")]
            public string[] RawMethod { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_method%2Enot")]
            public string[]? RawMethodNot { get; set; }
#nullable restore
#else
            [QueryParameter("raw_method%2Enot")]
            public string[] RawMethodNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_status_code")]
            public int?[]? RawStatusCode { get; set; }
#nullable restore
#else
            [QueryParameter("raw_status_code")]
            public int?[] RawStatusCode { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_status_code%2Enot")]
            public int?[]? RawStatusCodeNot { get; set; }
#nullable restore
#else
            [QueryParameter("raw_status_code%2Enot")]
            public int?[] RawStatusCodeNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_uri")]
            public string[]? RawUri { get; set; }
#nullable restore
#else
            [QueryParameter("raw_uri")]
            public string[] RawUri { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("raw_uri%2Enot")]
            public string[]? RawUriNot { get; set; }
#nullable restore
#else
            [QueryParameter("raw_uri%2Enot")]
            public string[] RawUriNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_id")]
            public string[]? ResourceId { get; set; }
#nullable restore
#else
            [QueryParameter("resource_id")]
            public string[] ResourceId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_id%2Enot")]
            public string[]? ResourceIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("resource_id%2Enot")]
            public string[] ResourceIdNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_product")]
            public string[]? ResourceProduct { get; set; }
#nullable restore
#else
            [QueryParameter("resource_product")]
            public string[] ResourceProduct { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_product%2Enot")]
            public string[]? ResourceProductNot { get; set; }
#nullable restore
#else
            [QueryParameter("resource_product%2Enot")]
            public string[] ResourceProductNot { get; set; }
#endif
            [Obsolete("This property is deprecated, use ResourceScopeAsGetResourceScopeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_scope")]
            public string[]? ResourceScope { get; set; }
#nullable restore
#else
            [QueryParameter("resource_scope")]
            public string[] ResourceScope { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_scope")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetResource_scopeQueryParameterType[]? ResourceScopeAsGetResourceScopeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("resource_scope")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetResource_scopeQueryParameterType[] ResourceScopeAsGetResourceScopeQueryParameterType { get; set; }
#endif
            [Obsolete("This property is deprecated, use ResourceScopeNotAsGetResourceScopeNotQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_scope%2Enot")]
            public string[]? ResourceScopeNot { get; set; }
#nullable restore
#else
            [QueryParameter("resource_scope%2Enot")]
            public string[] ResourceScopeNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_scope%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetResource_scopeNotQueryParameterType[]? ResourceScopeNotAsGetResourceScopeNotQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("resource_scope%2Enot")]
            public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.GetResource_scopeNotQueryParameterType[] ResourceScopeNotAsGetResourceScopeNotQueryParameterType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_type")]
            public string[]? ResourceType { get; set; }
#nullable restore
#else
            [QueryParameter("resource_type")]
            public string[] ResourceType { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("resource_type%2Enot")]
            public string[]? ResourceTypeNot { get; set; }
#nullable restore
#else
            [QueryParameter("resource_type%2Enot")]
            public string[] ResourceTypeNot { get; set; }
#endif
            /// <summary>Limits the returned results to logs newer than the specified date. This can be a date string 2019-04-30 (interpreted in UTC) or an absolute timestamp that conforms to RFC3339.</summary>
            [QueryParameter("since")]
            public Date? Since { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zone_id")]
            public string[]? ZoneId { get; set; }
#nullable restore
#else
            [QueryParameter("zone_id")]
            public string[] ZoneId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zone_id%2Enot")]
            public string[]? ZoneIdNot { get; set; }
#nullable restore
#else
            [QueryParameter("zone_id%2Enot")]
            public string[] ZoneIdNot { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zone_name")]
            public string[]? ZoneName { get; set; }
#nullable restore
#else
            [QueryParameter("zone_name")]
            public string[] ZoneName { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zone_name%2Enot")]
            public string[]? ZoneNameNot { get; set; }
#nullable restore
#else
            [QueryParameter("zone_name%2Enot")]
            public string[] ZoneNameNot { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AuditRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Logs.Audit.AuditRequestBuilder.AuditRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
