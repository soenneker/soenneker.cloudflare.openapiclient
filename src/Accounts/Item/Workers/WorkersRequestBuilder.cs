// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.AccountSettings;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Assets;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Dispatch;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Domains;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Durable_objects;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Observability;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Scripts;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Services;
using Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Subdomain;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers
{
    /// <summary>
    /// Builds and executes requests for operations under \accounts\{account_identifier-id}\workers
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WorkersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The accountSettings property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.AccountSettings.AccountSettingsRequestBuilder AccountSettings
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.AccountSettings.AccountSettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The assets property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Assets.AssetsRequestBuilder Assets
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Assets.AssetsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The dispatch property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Dispatch.DispatchRequestBuilder Dispatch
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Dispatch.DispatchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The domains property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Domains.DomainsRequestBuilder Domains
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Domains.DomainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The durable_objects property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Durable_objects.Durable_objectsRequestBuilder Durable_objects
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Durable_objects.Durable_objectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The observability property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Observability.ObservabilityRequestBuilder Observability
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Observability.ObservabilityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scripts property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Scripts.ScriptsRequestBuilder Scripts
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Scripts.ScriptsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The services property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Services.ServicesRequestBuilder Services
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Services.ServicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subdomain property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Subdomain.SubdomainRequestBuilder Subdomain
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Subdomain.SubdomainRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The workers property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Workers.WorkersRequestBuilder Workers
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.Workers.WorkersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.WorkersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WorkersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/workers", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Workers.WorkersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WorkersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/workers", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
