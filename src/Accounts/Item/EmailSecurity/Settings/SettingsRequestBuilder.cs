// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Allow_policies;
using Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Block_senders;
using Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Domains;
using Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Impersonation_registry;
using Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Trusted_domains;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings
{
    /// <summary>
    /// Builds and executes requests for operations under \accounts\{account_identifier-id}\email-security\settings
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SettingsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The allow_policies property</summary>
        public global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Allow_policies.Allow_policiesRequestBuilder Allow_policies
        {
            get => new global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Allow_policies.Allow_policiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The block_senders property</summary>
        public global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Block_senders.Block_sendersRequestBuilder Block_senders
        {
            get => new global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Block_senders.Block_sendersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The domains property</summary>
        public global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Domains.DomainsRequestBuilder Domains
        {
            get => new global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Domains.DomainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The impersonation_registry property</summary>
        public global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Impersonation_registry.Impersonation_registryRequestBuilder Impersonation_registry
        {
            get => new global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Impersonation_registry.Impersonation_registryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The trusted_domains property</summary>
        public global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Trusted_domains.Trusted_domainsRequestBuilder Trusted_domains
        {
            get => new global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.Trusted_domains.Trusted_domainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.SettingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/email-security/settings", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.Accounts.Item.EmailSecurity.Settings.SettingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/accounts/{account_identifier%2Did}/email-security/settings", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
