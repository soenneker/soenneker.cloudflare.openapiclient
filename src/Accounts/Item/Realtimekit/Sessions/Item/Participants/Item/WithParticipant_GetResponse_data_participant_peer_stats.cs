// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithParticipant_GetResponse_data_participant_peer_stats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The config property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Config { get; set; }
#nullable restore
#else
        public string Config { get; set; }
#endif
        /// <summary>The device_info property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_device_info? DeviceInfo { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_device_info DeviceInfo { get; set; }
#endif
        /// <summary>The events property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_events>? Events { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_events> Events { get; set; }
#endif
        /// <summary>The ip_information property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_ip_information? IpInformation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_ip_information IpInformation { get; set; }
#endif
        /// <summary>The precall_network_information property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_precall_network_information? PrecallNetworkInformation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_precall_network_information PrecallNetworkInformation { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats"/> and sets the default values.
        /// </summary>
        public WithParticipant_GetResponse_data_participant_peer_stats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "config", n => { Config = n.GetStringValue(); } },
                { "device_info", n => { DeviceInfo = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_device_info>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_device_info.CreateFromDiscriminatorValue); } },
                { "events", n => { Events = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_events>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_events.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ip_information", n => { IpInformation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_ip_information>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_ip_information.CreateFromDiscriminatorValue); } },
                { "precall_network_information", n => { PrecallNetworkInformation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_precall_network_information>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_precall_network_information.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("config", Config);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_device_info>("device_info", DeviceInfo);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_events>("events", Events);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_ip_information>("ip_information", IpInformation);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_peer_stats_precall_network_information>("precall_network_information", PrecallNetworkInformation);
            writer.WriteStringValue("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
