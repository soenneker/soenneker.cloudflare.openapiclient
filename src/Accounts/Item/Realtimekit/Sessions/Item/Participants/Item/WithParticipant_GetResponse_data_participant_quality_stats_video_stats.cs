// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithParticipant_GetResponse_data_participant_quality_stats_video_stats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The frame_height property</summary>
        public double? FrameHeight { get; set; }
        /// <summary>The frames_dropped property</summary>
        public double? FramesDropped { get; set; }
        /// <summary>The frames_per_second property</summary>
        public double? FramesPerSecond { get; set; }
        /// <summary>The frame_width property</summary>
        public double? FrameWidth { get; set; }
        /// <summary>The jitter property</summary>
        public double? Jitter { get; set; }
        /// <summary>The packets_lost property</summary>
        public double? PacketsLost { get; set; }
        /// <summary>The quality property</summary>
        public double? Quality { get; set; }
        /// <summary>The timestamp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timestamp { get; set; }
#nullable restore
#else
        public string Timestamp { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_quality_stats_video_stats"/> and sets the default values.
        /// </summary>
        public WithParticipant_GetResponse_data_participant_quality_stats_video_stats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_quality_stats_video_stats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_quality_stats_video_stats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.Item.Participants.Item.WithParticipant_GetResponse_data_participant_quality_stats_video_stats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "frame_height", n => { FrameHeight = n.GetDoubleValue(); } },
                { "frame_width", n => { FrameWidth = n.GetDoubleValue(); } },
                { "frames_dropped", n => { FramesDropped = n.GetDoubleValue(); } },
                { "frames_per_second", n => { FramesPerSecond = n.GetDoubleValue(); } },
                { "jitter", n => { Jitter = n.GetDoubleValue(); } },
                { "packets_lost", n => { PacketsLost = n.GetDoubleValue(); } },
                { "quality", n => { Quality = n.GetDoubleValue(); } },
                { "timestamp", n => { Timestamp = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("frame_height", FrameHeight);
            writer.WriteDoubleValue("frames_dropped", FramesDropped);
            writer.WriteDoubleValue("frames_per_second", FramesPerSecond);
            writer.WriteDoubleValue("frame_width", FrameWidth);
            writer.WriteDoubleValue("jitter", Jitter);
            writer.WriteDoubleValue("packets_lost", PacketsLost);
            writer.WriteDoubleValue("quality", Quality);
            writer.WriteStringValue("timestamp", Timestamp);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
