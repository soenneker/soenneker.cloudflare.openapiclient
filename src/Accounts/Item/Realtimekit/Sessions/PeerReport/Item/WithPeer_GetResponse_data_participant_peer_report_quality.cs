// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithPeer_GetResponse_data_participant_peer_report_quality : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The audio_consumer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer>? AudioConsumer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer> AudioConsumer { get; set; }
#endif
        /// <summary>The audio_consumer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer_cumulative? AudioConsumerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer_cumulative AudioConsumerCumulative { get; set; }
#endif
        /// <summary>The audio_producer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer>? AudioProducer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer> AudioProducer { get; set; }
#endif
        /// <summary>The audio_producer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer_cumulative? AudioProducerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer_cumulative AudioProducerCumulative { get; set; }
#endif
        /// <summary>The screenshare_audio_consumer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer>? ScreenshareAudioConsumer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer> ScreenshareAudioConsumer { get; set; }
#endif
        /// <summary>The screenshare_audio_consumer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer_cumulative? ScreenshareAudioConsumerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer_cumulative ScreenshareAudioConsumerCumulative { get; set; }
#endif
        /// <summary>The screenshare_audio_producer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer>? ScreenshareAudioProducer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer> ScreenshareAudioProducer { get; set; }
#endif
        /// <summary>The screenshare_audio_producer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer_cumulative? ScreenshareAudioProducerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer_cumulative ScreenshareAudioProducerCumulative { get; set; }
#endif
        /// <summary>The screenshare_video_consumer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer>? ScreenshareVideoConsumer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer> ScreenshareVideoConsumer { get; set; }
#endif
        /// <summary>The screenshare_video_consumer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer_cumulative? ScreenshareVideoConsumerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer_cumulative ScreenshareVideoConsumerCumulative { get; set; }
#endif
        /// <summary>The screenshare_video_producer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer>? ScreenshareVideoProducer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer> ScreenshareVideoProducer { get; set; }
#endif
        /// <summary>The screenshare_video_producer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer_cumulative? ScreenshareVideoProducerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer_cumulative ScreenshareVideoProducerCumulative { get; set; }
#endif
        /// <summary>The video_consumer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer>? VideoConsumer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer> VideoConsumer { get; set; }
#endif
        /// <summary>The video_consumer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer_cumulative? VideoConsumerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer_cumulative VideoConsumerCumulative { get; set; }
#endif
        /// <summary>The video_producer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer>? VideoProducer { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer> VideoProducer { get; set; }
#endif
        /// <summary>The video_producer_cumulative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer_cumulative? VideoProducerCumulative { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer_cumulative VideoProducerCumulative { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality"/> and sets the default values.
        /// </summary>
        public WithPeer_GetResponse_data_participant_peer_report_quality()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "audio_consumer", n => { AudioConsumer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "audio_consumer_cumulative", n => { AudioConsumerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer_cumulative.CreateFromDiscriminatorValue); } },
                { "audio_producer", n => { AudioProducer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "audio_producer_cumulative", n => { AudioProducerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer_cumulative.CreateFromDiscriminatorValue); } },
                { "screenshare_audio_consumer", n => { ScreenshareAudioConsumer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "screenshare_audio_consumer_cumulative", n => { ScreenshareAudioConsumerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer_cumulative.CreateFromDiscriminatorValue); } },
                { "screenshare_audio_producer", n => { ScreenshareAudioProducer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "screenshare_audio_producer_cumulative", n => { ScreenshareAudioProducerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer_cumulative.CreateFromDiscriminatorValue); } },
                { "screenshare_video_consumer", n => { ScreenshareVideoConsumer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "screenshare_video_consumer_cumulative", n => { ScreenshareVideoConsumerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer_cumulative.CreateFromDiscriminatorValue); } },
                { "screenshare_video_producer", n => { ScreenshareVideoProducer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "screenshare_video_producer_cumulative", n => { ScreenshareVideoProducerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer_cumulative.CreateFromDiscriminatorValue); } },
                { "video_consumer", n => { VideoConsumer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "video_consumer_cumulative", n => { VideoConsumerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer_cumulative.CreateFromDiscriminatorValue); } },
                { "video_producer", n => { VideoProducer = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "video_producer_cumulative", n => { VideoProducerCumulative = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer_cumulative>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer_cumulative.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer>("audio_consumer", AudioConsumer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_consumer_cumulative>("audio_consumer_cumulative", AudioConsumerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer>("audio_producer", AudioProducer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_audio_producer_cumulative>("audio_producer_cumulative", AudioProducerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer>("screenshare_audio_consumer", ScreenshareAudioConsumer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_consumer_cumulative>("screenshare_audio_consumer_cumulative", ScreenshareAudioConsumerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer>("screenshare_audio_producer", ScreenshareAudioProducer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_audio_producer_cumulative>("screenshare_audio_producer_cumulative", ScreenshareAudioProducerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer>("screenshare_video_consumer", ScreenshareVideoConsumer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_consumer_cumulative>("screenshare_video_consumer_cumulative", ScreenshareVideoConsumerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer>("screenshare_video_producer", ScreenshareVideoProducer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_screenshare_video_producer_cumulative>("screenshare_video_producer_cumulative", ScreenshareVideoProducerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer>("video_consumer", VideoConsumer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_consumer_cumulative>("video_consumer_cumulative", VideoConsumerCumulative);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer>("video_producer", VideoProducer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_quality_video_producer_cumulative>("video_producer_cumulative", VideoProducerCumulative);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
