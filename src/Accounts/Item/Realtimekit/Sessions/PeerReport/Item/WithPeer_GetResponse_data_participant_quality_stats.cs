// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithPeer_GetResponse_data_participant_quality_stats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The audio_bandwidth property</summary>
        public int? AudioBandwidth { get; set; }
        /// <summary>The audio_stats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_audio_stats>? AudioStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_audio_stats> AudioStats { get; set; }
#endif
        /// <summary>The average_quality property</summary>
        public int? AverageQuality { get; set; }
        /// <summary>The end property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? End { get; set; }
#nullable restore
#else
        public string End { get; set; }
#endif
        /// <summary>The first_audio_packet_received property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstAudioPacketReceived { get; set; }
#nullable restore
#else
        public string FirstAudioPacketReceived { get; set; }
#endif
        /// <summary>The first_video_packet_received property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstVideoPacketReceived { get; set; }
#nullable restore
#else
        public string FirstVideoPacketReceived { get; set; }
#endif
        /// <summary>The last_audio_packet_received property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastAudioPacketReceived { get; set; }
#nullable restore
#else
        public string LastAudioPacketReceived { get; set; }
#endif
        /// <summary>The last_video_packet_received property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastVideoPacketReceived { get; set; }
#nullable restore
#else
        public string LastVideoPacketReceived { get; set; }
#endif
        /// <summary>The peer_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PeerIds { get; set; }
#nullable restore
#else
        public List<string> PeerIds { get; set; }
#endif
        /// <summary>The start property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Start { get; set; }
#nullable restore
#else
        public string Start { get; set; }
#endif
        /// <summary>The total_audio_packets property</summary>
        public int? TotalAudioPackets { get; set; }
        /// <summary>The total_audio_packets_lost property</summary>
        public int? TotalAudioPacketsLost { get; set; }
        /// <summary>The total_video_packets property</summary>
        public int? TotalVideoPackets { get; set; }
        /// <summary>The total_video_packets_lost property</summary>
        public int? TotalVideoPacketsLost { get; set; }
        /// <summary>The video_bandwidth property</summary>
        public int? VideoBandwidth { get; set; }
        /// <summary>The video_stats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_video_stats>? VideoStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_video_stats> VideoStats { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats"/> and sets the default values.
        /// </summary>
        public WithPeer_GetResponse_data_participant_quality_stats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "audio_bandwidth", n => { AudioBandwidth = n.GetIntValue(); } },
                { "audio_stats", n => { AudioStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_audio_stats>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_audio_stats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "average_quality", n => { AverageQuality = n.GetIntValue(); } },
                { "end", n => { End = n.GetStringValue(); } },
                { "first_audio_packet_received", n => { FirstAudioPacketReceived = n.GetStringValue(); } },
                { "first_video_packet_received", n => { FirstVideoPacketReceived = n.GetStringValue(); } },
                { "last_audio_packet_received", n => { LastAudioPacketReceived = n.GetStringValue(); } },
                { "last_video_packet_received", n => { LastVideoPacketReceived = n.GetStringValue(); } },
                { "peer_ids", n => { PeerIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "start", n => { Start = n.GetStringValue(); } },
                { "total_audio_packets", n => { TotalAudioPackets = n.GetIntValue(); } },
                { "total_audio_packets_lost", n => { TotalAudioPacketsLost = n.GetIntValue(); } },
                { "total_video_packets", n => { TotalVideoPackets = n.GetIntValue(); } },
                { "total_video_packets_lost", n => { TotalVideoPacketsLost = n.GetIntValue(); } },
                { "video_bandwidth", n => { VideoBandwidth = n.GetIntValue(); } },
                { "video_stats", n => { VideoStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_video_stats>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_video_stats.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("audio_bandwidth", AudioBandwidth);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_audio_stats>("audio_stats", AudioStats);
            writer.WriteIntValue("average_quality", AverageQuality);
            writer.WriteStringValue("end", End);
            writer.WriteStringValue("first_audio_packet_received", FirstAudioPacketReceived);
            writer.WriteStringValue("first_video_packet_received", FirstVideoPacketReceived);
            writer.WriteStringValue("last_audio_packet_received", LastAudioPacketReceived);
            writer.WriteStringValue("last_video_packet_received", LastVideoPacketReceived);
            writer.WriteCollectionOfPrimitiveValues<string>("peer_ids", PeerIds);
            writer.WriteStringValue("start", Start);
            writer.WriteIntValue("total_audio_packets", TotalAudioPackets);
            writer.WriteIntValue("total_audio_packets_lost", TotalAudioPacketsLost);
            writer.WriteIntValue("total_video_packets", TotalVideoPackets);
            writer.WriteIntValue("total_video_packets_lost", TotalVideoPacketsLost);
            writer.WriteIntValue("video_bandwidth", VideoBandwidth);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_quality_stats_video_stats>("video_stats", VideoStats);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
