// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithPeer_GetResponse_data_participant_peer_report_metadata : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The audio_devices_updates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_audio_devices_updates>? AudioDevicesUpdates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_audio_devices_updates> AudioDevicesUpdates { get; set; }
#endif
        /// <summary>The browser_metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_browser_metadata? BrowserMetadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_browser_metadata BrowserMetadata { get; set; }
#endif
        /// <summary>The candidate_pairs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_candidate_pairs? CandidatePairs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_candidate_pairs CandidatePairs { get; set; }
#endif
        /// <summary>The device_info property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_device_info? DeviceInfo { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_device_info DeviceInfo { get; set; }
#endif
        /// <summary>The events property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_events>? Events { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_events> Events { get; set; }
#endif
        /// <summary>The ip_information property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_ip_information? IpInformation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_ip_information IpInformation { get; set; }
#endif
        /// <summary>The pc_metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_pc_metadata>? PcMetadata { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_pc_metadata> PcMetadata { get; set; }
#endif
        /// <summary>The room_view_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RoomViewType { get; set; }
#nullable restore
#else
        public string RoomViewType { get; set; }
#endif
        /// <summary>The sdk_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SdkName { get; set; }
#nullable restore
#else
        public string SdkName { get; set; }
#endif
        /// <summary>The sdk_version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SdkVersion { get; set; }
#nullable restore
#else
        public string SdkVersion { get; set; }
#endif
        /// <summary>The selected_device_updates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_selected_device_updates>? SelectedDeviceUpdates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_selected_device_updates> SelectedDeviceUpdates { get; set; }
#endif
        /// <summary>The speaker_devices_updates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_speaker_devices_updates>? SpeakerDevicesUpdates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_speaker_devices_updates> SpeakerDevicesUpdates { get; set; }
#endif
        /// <summary>The video_devices_updates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_video_devices_updates>? VideoDevicesUpdates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_video_devices_updates> VideoDevicesUpdates { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata"/> and sets the default values.
        /// </summary>
        public WithPeer_GetResponse_data_participant_peer_report_metadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "audio_devices_updates", n => { AudioDevicesUpdates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_audio_devices_updates>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_audio_devices_updates.CreateFromDiscriminatorValue)?.AsList(); } },
                { "browser_metadata", n => { BrowserMetadata = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_browser_metadata>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_browser_metadata.CreateFromDiscriminatorValue); } },
                { "candidate_pairs", n => { CandidatePairs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_candidate_pairs>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_candidate_pairs.CreateFromDiscriminatorValue); } },
                { "device_info", n => { DeviceInfo = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_device_info>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_device_info.CreateFromDiscriminatorValue); } },
                { "events", n => { Events = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_events>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_events.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ip_information", n => { IpInformation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_ip_information>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_ip_information.CreateFromDiscriminatorValue); } },
                { "pc_metadata", n => { PcMetadata = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_pc_metadata>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_pc_metadata.CreateFromDiscriminatorValue)?.AsList(); } },
                { "room_view_type", n => { RoomViewType = n.GetStringValue(); } },
                { "sdk_name", n => { SdkName = n.GetStringValue(); } },
                { "sdk_version", n => { SdkVersion = n.GetStringValue(); } },
                { "selected_device_updates", n => { SelectedDeviceUpdates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_selected_device_updates>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_selected_device_updates.CreateFromDiscriminatorValue)?.AsList(); } },
                { "speaker_devices_updates", n => { SpeakerDevicesUpdates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_speaker_devices_updates>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_speaker_devices_updates.CreateFromDiscriminatorValue)?.AsList(); } },
                { "video_devices_updates", n => { VideoDevicesUpdates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_video_devices_updates>(global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_video_devices_updates.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_audio_devices_updates>("audio_devices_updates", AudioDevicesUpdates);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_browser_metadata>("browser_metadata", BrowserMetadata);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_candidate_pairs>("candidate_pairs", CandidatePairs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_device_info>("device_info", DeviceInfo);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_events>("events", Events);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_ip_information>("ip_information", IpInformation);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_pc_metadata>("pc_metadata", PcMetadata);
            writer.WriteStringValue("room_view_type", RoomViewType);
            writer.WriteStringValue("sdk_name", SdkName);
            writer.WriteStringValue("sdk_version", SdkVersion);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_selected_device_updates>("selected_device_updates", SelectedDeviceUpdates);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_speaker_devices_updates>("speaker_devices_updates", SpeakerDevicesUpdates);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Accounts.Item.Realtimekit.Sessions.PeerReport.Item.WithPeer_GetResponse_data_participant_peer_report_metadata_video_devices_updates>("video_devices_updates", VideoDevicesUpdates);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
