// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target
{
    /// <summary>
    /// Builds and executes requests for operations under \radar\attacks\layer7\top\locations\target
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TargetRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TargetRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/attacks/layer7/top/locations/target{?continent*,dateEnd*,dateRange*,dateStart*,format*,limit*,mitigationProduct*,name*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TargetRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/attacks/layer7/top/locations/target{?continent*,dateEnd*,dateRange*,dateStart*,format*,limit*,mitigationProduct*,name*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves the top target locations of and by layer 7 attacks. Values are a percentage out of the total layer 7 attacks. The target location is determined by the attacked zone&apos;s billing country, when available.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_200_application_json"/></returns>
        /// <param name="body">Fallback request body schema</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_404_application_json">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_200_application_json?> GetAsync(global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_RequestBody_application_json body, Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder.TargetRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_200_application_json> GetAsync(global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_RequestBody_application_json body, Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder.TargetRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_404_application_json.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_200_application_json>(requestInfo, global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Response_200_application_json.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves the top target locations of and by layer 7 attacks. Values are a percentage out of the total layer 7 attacks. The target location is determined by the attacked zone&apos;s billing country, when available.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Fallback request body schema</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_RequestBody_application_json body, Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder.TargetRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_RequestBody_application_json body, Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder.TargetRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves the top target locations of and by layer 7 attacks. Values are a percentage out of the total layer 7 attacks. The target location is determined by the attacked zone&apos;s billing country, when available.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TargetRequestBuilderGetQueryParameters 
        {
            /// <summary>Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("continent")]
            public string[]? Continent { get; set; }
#nullable restore
#else
            [QueryParameter("continent")]
            public string[] Continent { get; set; }
#endif
            /// <summary>End of the date range (inclusive).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateEnd")]
            public DateTimeOffset?[]? DateEnd { get; set; }
#nullable restore
#else
            [QueryParameter("dateEnd")]
            public DateTimeOffset?[] DateEnd { get; set; }
#endif
            /// <summary>Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateRange")]
            public string[]? DateRange { get; set; }
#nullable restore
#else
            [QueryParameter("dateRange")]
            public string[] DateRange { get; set; }
#endif
            /// <summary>Start of the date range.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateStart")]
            public DateTimeOffset?[]? DateStart { get; set; }
#nullable restore
#else
            [QueryParameter("dateStart")]
            public DateTimeOffset?[] DateStart { get; set; }
#endif
            /// <summary>Format in which results will be returned.</summary>
            [Obsolete("This property is deprecated, use FormatAsRadarGetAttacksLayer7TopTargetLocationParamFormat instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("format")]
            public string? Format { get; set; }
#nullable restore
#else
            [QueryParameter("format")]
            public string Format { get; set; }
#endif
            /// <summary>Format in which results will be returned.</summary>
            [QueryParameter("format")]
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_target_location_Param_format? FormatAsRadarGetAttacksLayer7TopTargetLocationParamFormat { get; set; }
            /// <summary>Limits the number of objects returned in the response.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Filters the results by layer 7 mitigation product.</summary>
            [Obsolete("This property is deprecated, use MitigationProductAsGetMitigationProductQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("mitigationProduct")]
            public string[]? MitigationProduct { get; set; }
#nullable restore
#else
            [QueryParameter("mitigationProduct")]
            public string[] MitigationProduct { get; set; }
#endif
            /// <summary>Filters the results by layer 7 mitigation product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("mitigationProduct")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.GetMitigationProductQueryParameterType[]? MitigationProductAsGetMitigationProductQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("mitigationProduct")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.GetMitigationProductQueryParameterType[] MitigationProductAsGetMitigationProductQueryParameterType { get; set; }
#endif
            /// <summary>Array of names used to label the series in the response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("name")]
            public string[]? Name { get; set; }
#nullable restore
#else
            [QueryParameter("name")]
            public string[] Name { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TargetRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Locations.Target.TargetRequestBuilder.TargetRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
