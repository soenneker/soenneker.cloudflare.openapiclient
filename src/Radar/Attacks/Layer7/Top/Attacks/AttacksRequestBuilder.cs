// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks
{
    /// <summary>
    /// Builds and executes requests for operations under \radar\attacks\layer7\top\attacks
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AttacksRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AttacksRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/attacks/layer7/top/attacks{?asn*,continent*,dateEnd*,dateRange*,dateStart*,format*,limit*,limitDirection*,limitPerLocation*,location*,magnitude*,mitigationProduct*,name*,normalization*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AttacksRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/attacks/layer7/top/attacks{?asn*,continent*,dateEnd*,dateRange*,dateStart*,format*,limit*,limitDirection*,limitPerLocation*,location*,magnitude*,mitigationProduct*,name*,normalization*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves the top attacks from origin to target location. Values are percentages of the total layer 7 attacks (with billing country). The attack magnitude can be defined by the number of mitigated requests or by the number of zones affected. You can optionally limit the number of attacks by origin/target location (useful if all the top attacks are from or to the same location).
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_200_application_json"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_404_application_json">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_200_application_json?> GetAsync(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder.AttacksRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_200_application_json> GetAsync(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder.AttacksRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_404_application_json.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_200_application_json>(requestInfo, global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_attacks_layer7_top_attacks_Response_200_application_json.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves the top attacks from origin to target location. Values are percentages of the total layer 7 attacks (with billing country). The attack magnitude can be defined by the number of mitigated requests or by the number of zones affected. You can optionally limit the number of attacks by origin/target location (useful if all the top attacks are from or to the same location).
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder.AttacksRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder.AttacksRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves the top attacks from origin to target location. Values are percentages of the total layer 7 attacks (with billing country). The attack magnitude can be defined by the number of mitigated requests or by the number of zones affected. You can optionally limit the number of attacks by origin/target location (useful if all the top attacks are from or to the same location).
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AttacksRequestBuilderGetQueryParameters 
        {
            /// <summary>Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("asn")]
            public string[]? Asn { get; set; }
#nullable restore
#else
            [QueryParameter("asn")]
            public string[] Asn { get; set; }
#endif
            /// <summary>Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("continent")]
            public string[]? Continent { get; set; }
#nullable restore
#else
            [QueryParameter("continent")]
            public string[] Continent { get; set; }
#endif
            /// <summary>End of the date range (inclusive).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateEnd")]
            public DateTimeOffset?[]? DateEnd { get; set; }
#nullable restore
#else
            [QueryParameter("dateEnd")]
            public DateTimeOffset?[] DateEnd { get; set; }
#endif
            /// <summary>Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateRange")]
            public string[]? DateRange { get; set; }
#nullable restore
#else
            [QueryParameter("dateRange")]
            public string[] DateRange { get; set; }
#endif
            /// <summary>Start of the date range.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateStart")]
            public DateTimeOffset?[]? DateStart { get; set; }
#nullable restore
#else
            [QueryParameter("dateStart")]
            public DateTimeOffset?[] DateStart { get; set; }
#endif
            /// <summary>Format in which results will be returned.</summary>
            [Obsolete("This property is deprecated, use FormatAsGetFormatQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("format")]
            public string? Format { get; set; }
#nullable restore
#else
            [QueryParameter("format")]
            public string Format { get; set; }
#endif
            /// <summary>Format in which results will be returned.</summary>
            [QueryParameter("format")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetFormatQueryParameterType? FormatAsGetFormatQueryParameterType { get; set; }
            /// <summary>Limits the number of objects returned in the response.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Specifies whether the `limitPerLocation` applies to the source or target location.</summary>
            [Obsolete("This property is deprecated, use LimitDirectionAsGetLimitDirectionQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("limitDirection")]
            public string? LimitDirection { get; set; }
#nullable restore
#else
            [QueryParameter("limitDirection")]
            public string LimitDirection { get; set; }
#endif
            /// <summary>Specifies whether the `limitPerLocation` applies to the source or target location.</summary>
            [QueryParameter("limitDirection")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetLimitDirectionQueryParameterType? LimitDirectionAsGetLimitDirectionQueryParameterType { get; set; }
            /// <summary>Limits the number of attacks per origin/target (refer to `limitDirection` parameter) location.</summary>
            [QueryParameter("limitPerLocation")]
            public int? LimitPerLocation { get; set; }
            /// <summary>Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("location")]
            public string[]? Location { get; set; }
#nullable restore
#else
            [QueryParameter("location")]
            public string[] Location { get; set; }
#endif
            /// <summary>Deprecated parameter. Future support includes only attack magnitude defined by total mitigated requests (MITIGATED_REQUESTS).</summary>
            [Obsolete("This property is deprecated, use MagnitudeAsGetMagnitudeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("magnitude")]
            public string? Magnitude { get; set; }
#nullable restore
#else
            [QueryParameter("magnitude")]
            public string Magnitude { get; set; }
#endif
            /// <summary>Deprecated parameter. Future support includes only attack magnitude defined by total mitigated requests (MITIGATED_REQUESTS).</summary>
            [QueryParameter("magnitude")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetMagnitudeQueryParameterType? MagnitudeAsGetMagnitudeQueryParameterType { get; set; }
            /// <summary>Filters the results by layer 7 mitigation product.</summary>
            [Obsolete("This property is deprecated, use MitigationProductAsGetMitigationProductQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("mitigationProduct")]
            public string[]? MitigationProduct { get; set; }
#nullable restore
#else
            [QueryParameter("mitigationProduct")]
            public string[] MitigationProduct { get; set; }
#endif
            /// <summary>Filters the results by layer 7 mitigation product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("mitigationProduct")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetMitigationProductQueryParameterType[]? MitigationProductAsGetMitigationProductQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("mitigationProduct")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetMitigationProductQueryParameterType[] MitigationProductAsGetMitigationProductQueryParameterType { get; set; }
#endif
            /// <summary>Array of names used to label the series in the response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("name")]
            public string[]? Name { get; set; }
#nullable restore
#else
            [QueryParameter("name")]
            public string[] Name { get; set; }
#endif
            /// <summary>Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).</summary>
            [Obsolete("This property is deprecated, use NormalizationAsGetNormalizationQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("normalization")]
            public string? Normalization { get; set; }
#nullable restore
#else
            [QueryParameter("normalization")]
            public string Normalization { get; set; }
#endif
            /// <summary>Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).</summary>
            [QueryParameter("normalization")]
            public global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.GetNormalizationQueryParameterType? NormalizationAsGetNormalizationQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AttacksRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Cloudflare.OpenApiClient.Radar.Attacks.Layer7.Top.Attacks.AttacksRequestBuilder.AttacksRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
