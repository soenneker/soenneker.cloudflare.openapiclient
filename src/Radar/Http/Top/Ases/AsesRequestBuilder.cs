// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Bot_class;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Browser_family;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Device_type;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_protocol;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_version;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Ip_version;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Os;
using Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Tls_version;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases
{
    /// <summary>
    /// Builds and executes requests for operations under \radar\http\top\ases
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AsesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The bot_class property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Bot_class.Bot_classRequestBuilder Bot_class
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Bot_class.Bot_classRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The browser_family property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Browser_family.Browser_familyRequestBuilder Browser_family
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Browser_family.Browser_familyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The device_type property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Device_type.Device_typeRequestBuilder Device_type
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Device_type.Device_typeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The http_protocol property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_protocol.Http_protocolRequestBuilder Http_protocol
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_protocol.Http_protocolRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The http_version property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_version.Http_versionRequestBuilder Http_version
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Http_version.Http_versionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ip_version property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Ip_version.Ip_versionRequestBuilder Ip_version
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Ip_version.Ip_versionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The os property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Os.OsRequestBuilder Os
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Os.OsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tls_version property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Tls_version.Tls_versionRequestBuilder Tls_version
        {
            get => new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.Tls_version.Tls_versionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.AsesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AsesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/http/top/ases", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.AsesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AsesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/radar/http/top/ases", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves the top autonomous systems by HTTP requests.
        /// </summary>
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves the top autonomous systems by HTTP requests.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.AsesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.AsesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Cloudflare.OpenApiClient.Radar.Http.Top.Ases.AsesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AsesRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
