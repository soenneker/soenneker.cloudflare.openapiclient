// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Devices_update_device_settings_policy : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The allowed_to_leave property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllowedToLeave { get; set; }
#nullable restore
#else
        public string AllowedToLeave { get; set; }
#endif
        /// <summary>The allow_mode_switch property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllowModeSwitch { get; set; }
#nullable restore
#else
        public string AllowModeSwitch { get; set; }
#endif
        /// <summary>The allow_updates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllowUpdates { get; set; }
#nullable restore
#else
        public string AllowUpdates { get; set; }
#endif
        /// <summary>The auto_connect property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutoConnect { get; set; }
#nullable restore
#else
        public string AutoConnect { get; set; }
#endif
        /// <summary>The captive_portal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CaptivePortal { get; set; }
#nullable restore
#else
        public string CaptivePortal { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The disable_auto_fallback property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisableAutoFallback { get; set; }
#nullable restore
#else
        public string DisableAutoFallback { get; set; }
#endif
        /// <summary>Whether the policy will be applied to matching devices.</summary>
        public bool? Enabled { get; set; }
        /// <summary>List of routes excluded in the WARP client&apos;s tunnel. Both &apos;exclude&apos; and &apos;include&apos; cannot be set in the same request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel>? Exclude { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel> Exclude { get; set; }
#endif
        /// <summary>The exclude_office_ips property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExcludeOfficeIps { get; set; }
#nullable restore
#else
        public string ExcludeOfficeIps { get; set; }
#endif
        /// <summary>List of routes included in the WARP client&apos;s tunnel. Both &apos;exclude&apos; and &apos;include&apos; cannot be set in the same request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel_include>? Include { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel_include> Include { get; set; }
#endif
        /// <summary>The lan_allow_minutes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LanAllowMinutes { get; set; }
#nullable restore
#else
        public string LanAllowMinutes { get; set; }
#endif
        /// <summary>The lan_allow_subnet_size property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LanAllowSubnetSize { get; set; }
#nullable restore
#else
        public string LanAllowSubnetSize { get; set; }
#endif
        /// <summary>The match property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Match { get; set; }
#nullable restore
#else
        public string Match { get; set; }
#endif
        /// <summary>The name of the device settings profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The precedence property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Precedence { get; set; }
#nullable restore
#else
        public string Precedence { get; set; }
#endif
        /// <summary>The register_interface_ip_with_dns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegisterInterfaceIpWithDns { get; set; }
#nullable restore
#else
        public string RegisterInterfaceIpWithDns { get; set; }
#endif
        /// <summary>The sccm_vpn_boundary_support property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SccmVpnBoundarySupport { get; set; }
#nullable restore
#else
        public string SccmVpnBoundarySupport { get; set; }
#endif
        /// <summary>The service_mode_v2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_service_mode_v2? ServiceModeV2 { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_service_mode_v2 ServiceModeV2 { get; set; }
#endif
        /// <summary>The support_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SupportUrl { get; set; }
#nullable restore
#else
        public string SupportUrl { get; set; }
#endif
        /// <summary>The switch_locked property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SwitchLocked { get; set; }
#nullable restore
#else
        public string SwitchLocked { get; set; }
#endif
        /// <summary>The tunnel_protocol property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TunnelProtocol { get; set; }
#nullable restore
#else
        public string TunnelProtocol { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Devices_update_device_settings_policy"/> and sets the default values.
        /// </summary>
        public Devices_update_device_settings_policy()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Devices_update_device_settings_policy"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Devices_update_device_settings_policy CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Devices_update_device_settings_policy();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allow_mode_switch", n => { AllowModeSwitch = n.GetStringValue(); } },
                { "allow_updates", n => { AllowUpdates = n.GetStringValue(); } },
                { "allowed_to_leave", n => { AllowedToLeave = n.GetStringValue(); } },
                { "auto_connect", n => { AutoConnect = n.GetStringValue(); } },
                { "captive_portal", n => { CaptivePortal = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "disable_auto_fallback", n => { DisableAutoFallback = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "exclude", n => { Exclude = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "exclude_office_ips", n => { ExcludeOfficeIps = n.GetStringValue(); } },
                { "include", n => { Include = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel_include>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel_include.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lan_allow_minutes", n => { LanAllowMinutes = n.GetStringValue(); } },
                { "lan_allow_subnet_size", n => { LanAllowSubnetSize = n.GetStringValue(); } },
                { "match", n => { Match = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "precedence", n => { Precedence = n.GetStringValue(); } },
                { "register_interface_ip_with_dns", n => { RegisterInterfaceIpWithDns = n.GetStringValue(); } },
                { "sccm_vpn_boundary_support", n => { SccmVpnBoundarySupport = n.GetStringValue(); } },
                { "service_mode_v2", n => { ServiceModeV2 = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_service_mode_v2>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_service_mode_v2.CreateFromDiscriminatorValue); } },
                { "support_url", n => { SupportUrl = n.GetStringValue(); } },
                { "switch_locked", n => { SwitchLocked = n.GetStringValue(); } },
                { "tunnel_protocol", n => { TunnelProtocol = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("allowed_to_leave", AllowedToLeave);
            writer.WriteStringValue("allow_mode_switch", AllowModeSwitch);
            writer.WriteStringValue("allow_updates", AllowUpdates);
            writer.WriteStringValue("auto_connect", AutoConnect);
            writer.WriteStringValue("captive_portal", CaptivePortal);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("disable_auto_fallback", DisableAutoFallback);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel>("exclude", Exclude);
            writer.WriteStringValue("exclude_office_ips", ExcludeOfficeIps);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_split_tunnel_include>("include", Include);
            writer.WriteStringValue("lan_allow_minutes", LanAllowMinutes);
            writer.WriteStringValue("lan_allow_subnet_size", LanAllowSubnetSize);
            writer.WriteStringValue("match", Match);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("precedence", Precedence);
            writer.WriteStringValue("register_interface_ip_with_dns", RegisterInterfaceIpWithDns);
            writer.WriteStringValue("sccm_vpn_boundary_support", SccmVpnBoundarySupport);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_service_mode_v2>("service_mode_v2", ServiceModeV2);
            writer.WriteStringValue("support_url", SupportUrl);
            writer.WriteStringValue("switch_locked", SwitchLocked);
            writer.WriteStringValue("tunnel_protocol", TunnelProtocol);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
