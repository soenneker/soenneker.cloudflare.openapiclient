// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Zone_level_access_policies_create_an_access_policy_RequestBody_application_json : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Administrators who can approve a temporary authentication request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_group>? ApprovalGroups { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_group> ApprovalGroups { get; set; }
#endif
        /// <summary>Requires the user to request access from an administrator at the start of each session.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_required? ApprovalRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_required ApprovalRequired { get; set; }
#endif
        /// <summary>The action Access will take if a user matches this policy.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasDecision? Decision { get; set; }
        /// <summary>Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>? Exclude { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule> Exclude { get; set; }
#endif
        /// <summary>Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>? Include { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule> Include { get; set; }
#endif
        /// <summary>Require this application to be served in an isolated browser for users matching this policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIsolation_required? IsolationRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIsolation_required IsolationRequired { get; set; }
#endif
        /// <summary>The name of the Access policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policies_componentsSchemasName? Name { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policies_componentsSchemasName Name { get; set; }
#endif
        /// <summary>The order of execution for this policy. Must be unique for each policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPrecedence? Precedence { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPrecedence Precedence { get; set; }
#endif
        /// <summary>A custom message that will appear on the purpose justification screen.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt? PurposeJustificationPrompt { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt PurposeJustificationPrompt { get; set; }
#endif
        /// <summary>Require users to enter a justification when they log in to the application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPurpose_justification_required? PurposeJustificationRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPurpose_justification_required PurposeJustificationRequired { get; set; }
#endif
        /// <summary>Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>? Require { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule> Require { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_level_access_policies_create_an_access_policy_RequestBody_application_json"/> and sets the default values.
        /// </summary>
        public Zone_level_access_policies_create_an_access_policy_RequestBody_application_json()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_level_access_policies_create_an_access_policy_RequestBody_application_json"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_level_access_policies_create_an_access_policy_RequestBody_application_json CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_level_access_policies_create_an_access_policy_RequestBody_application_json();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approval_groups", n => { ApprovalGroups = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_group>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_group.CreateFromDiscriminatorValue)?.AsList(); } },
                { "approval_required", n => { ApprovalRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_required.CreateFromDiscriminatorValue); } },
                { "decision", n => { Decision = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasDecision>(); } },
                { "exclude", n => { Exclude = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "include", n => { Include = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "isolation_required", n => { IsolationRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIsolation_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIsolation_required.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policies_componentsSchemasName>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policies_componentsSchemasName.CreateFromDiscriminatorValue); } },
                { "precedence", n => { Precedence = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPrecedence>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPrecedence.CreateFromDiscriminatorValue); } },
                { "purpose_justification_prompt", n => { PurposeJustificationPrompt = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt.CreateFromDiscriminatorValue); } },
                { "purpose_justification_required", n => { PurposeJustificationRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPurpose_justification_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPurpose_justification_required.CreateFromDiscriminatorValue); } },
                { "require", n => { Require = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_group>("approval_groups", ApprovalGroups);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasApproval_required>("approval_required", ApprovalRequired);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasDecision>("decision", Decision);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>("exclude", Exclude);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>("include", Include);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIsolation_required>("isolation_required", IsolationRequired);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policies_componentsSchemasName>("name", Name);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPrecedence>("precedence", Precedence);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt>("purpose_justification_prompt", PurposeJustificationPrompt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasPurpose_justification_required>("purpose_justification_required", PurposeJustificationRequired);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_rule>("require", Require);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
