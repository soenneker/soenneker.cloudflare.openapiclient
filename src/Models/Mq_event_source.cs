// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Mq_event_source : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images? MqEventSourceImages { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images MqEventSourceImages { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv? MqEventSourceKv { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv MqEventSourceKv { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2? MqEventSourceR2 { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2 MqEventSourceR2 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper? MqEventSourceSuperSlurper { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper MqEventSourceSuperSlurper { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize? MqEventSourceVectorize { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize MqEventSourceVectorize { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model? MqEventSourceWorkersAiModel { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model MqEventSourceWorkersAiModel { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker? MqEventSourceWorkersBuildsWorker { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker MqEventSourceWorkersBuildsWorker { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow? MqEventSourceWorkflowsWorkflow { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow MqEventSourceWorkflowsWorkflow { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source();
            if("mq_event_source_images".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceImages = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images();
            }
            else if("mq_event_source_kv".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceKv = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv();
            }
            else if("mq_event_source_r2".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceR2 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2();
            }
            else if("mq_event_source_super_slurper".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceSuperSlurper = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper();
            }
            else if("mq_event_source_vectorize".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceVectorize = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize();
            }
            else if("mq_event_source_workers_ai_model".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceWorkersAiModel = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model();
            }
            else if("mq_event_source_workers_builds_worker".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceWorkersBuildsWorker = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker();
            }
            else if("mq_event_source_workflows_workflow".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.MqEventSourceWorkflowsWorkflow = new global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(MqEventSourceImages != null)
            {
                return MqEventSourceImages.GetFieldDeserializers();
            }
            else if(MqEventSourceKv != null)
            {
                return MqEventSourceKv.GetFieldDeserializers();
            }
            else if(MqEventSourceR2 != null)
            {
                return MqEventSourceR2.GetFieldDeserializers();
            }
            else if(MqEventSourceSuperSlurper != null)
            {
                return MqEventSourceSuperSlurper.GetFieldDeserializers();
            }
            else if(MqEventSourceVectorize != null)
            {
                return MqEventSourceVectorize.GetFieldDeserializers();
            }
            else if(MqEventSourceWorkersAiModel != null)
            {
                return MqEventSourceWorkersAiModel.GetFieldDeserializers();
            }
            else if(MqEventSourceWorkersBuildsWorker != null)
            {
                return MqEventSourceWorkersBuildsWorker.GetFieldDeserializers();
            }
            else if(MqEventSourceWorkflowsWorkflow != null)
            {
                return MqEventSourceWorkflowsWorkflow.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(MqEventSourceImages != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_images>(null, MqEventSourceImages);
            }
            else if(MqEventSourceKv != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_kv>(null, MqEventSourceKv);
            }
            else if(MqEventSourceR2 != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_r2>(null, MqEventSourceR2);
            }
            else if(MqEventSourceSuperSlurper != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_super_slurper>(null, MqEventSourceSuperSlurper);
            }
            else if(MqEventSourceVectorize != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_vectorize>(null, MqEventSourceVectorize);
            }
            else if(MqEventSourceWorkersAiModel != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_ai_model>(null, MqEventSourceWorkersAiModel);
            }
            else if(MqEventSourceWorkersBuildsWorker != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workers_builds_worker>(null, MqEventSourceWorkersBuildsWorker);
            }
            else if(MqEventSourceWorkflowsWorkflow != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mq_event_source_workflows_workflow>(null, MqEventSourceWorkflowsWorkflow);
            }
        }
    }
}
#pragma warning restore CS0618
