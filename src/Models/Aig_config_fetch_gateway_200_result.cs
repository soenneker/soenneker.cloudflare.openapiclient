// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Aig_config_fetch_gateway_200_result : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>The account_tag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountTag { get; set; }
#nullable restore
#else
        public string AccountTag { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The authentication property</summary>
        public bool? Authentication { get; set; }
        /// <summary>The cache_invalidate_on_update property</summary>
        public bool? CacheInvalidateOnUpdate { get; set; }
        /// <summary>The cache_ttl property</summary>
        public int? CacheTtl { get; set; }
        /// <summary>The collect_logs property</summary>
        public bool? CollectLogs { get; set; }
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The dlp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp? Dlp { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp Dlp { get; set; }
#endif
        /// <summary>gateway id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The internal_id property</summary>
        public Guid? InternalId { get; set; }
        /// <summary>The log_management property</summary>
        public int? LogManagement { get; set; }
        /// <summary>The log_management_strategy property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_log_management_strategy? LogManagementStrategy { get; set; }
        /// <summary>The logpush property</summary>
        public bool? Logpush { get; set; }
        /// <summary>The logpush_public_key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogpushPublicKey { get; set; }
#nullable restore
#else
        public string LogpushPublicKey { get; set; }
#endif
        /// <summary>The modified_at property</summary>
        public DateTimeOffset? ModifiedAt { get; set; }
        /// <summary>The otel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_otel>? Otel { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_otel> Otel { get; set; }
#endif
        /// <summary>The rate_limiting_interval property</summary>
        public int? RateLimitingInterval { get; set; }
        /// <summary>The rate_limiting_limit property</summary>
        public int? RateLimitingLimit { get; set; }
        /// <summary>The rate_limiting_technique property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_rate_limiting_technique? RateLimitingTechnique { get; set; }
        /// <summary>The store_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreId { get; set; }
#nullable restore
#else
        public string StoreId { get; set; }
#endif
        /// <summary>The stripe property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_stripe? Stripe { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_stripe Stripe { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result"/> and sets the default values.
        /// </summary>
        public Aig_config_fetch_gateway_200_result()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_id", n => { AccountId = n.GetStringValue(); } },
                { "account_tag", n => { AccountTag = n.GetStringValue(); } },
                { "authentication", n => { Authentication = n.GetBoolValue(); } },
                { "cache_invalidate_on_update", n => { CacheInvalidateOnUpdate = n.GetBoolValue(); } },
                { "cache_ttl", n => { CacheTtl = n.GetIntValue(); } },
                { "collect_logs", n => { CollectLogs = n.GetBoolValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "dlp", n => { Dlp = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "internal_id", n => { InternalId = n.GetGuidValue(); } },
                { "log_management", n => { LogManagement = n.GetIntValue(); } },
                { "log_management_strategy", n => { LogManagementStrategy = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_log_management_strategy>(); } },
                { "logpush", n => { Logpush = n.GetBoolValue(); } },
                { "logpush_public_key", n => { LogpushPublicKey = n.GetStringValue(); } },
                { "modified_at", n => { ModifiedAt = n.GetDateTimeOffsetValue(); } },
                { "otel", n => { Otel = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_otel>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_otel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "rate_limiting_interval", n => { RateLimitingInterval = n.GetIntValue(); } },
                { "rate_limiting_limit", n => { RateLimitingLimit = n.GetIntValue(); } },
                { "rate_limiting_technique", n => { RateLimitingTechnique = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_rate_limiting_technique>(); } },
                { "store_id", n => { StoreId = n.GetStringValue(); } },
                { "stripe", n => { Stripe = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_stripe>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_stripe.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_id", AccountId);
            writer.WriteStringValue("account_tag", AccountTag);
            writer.WriteBoolValue("authentication", Authentication);
            writer.WriteBoolValue("cache_invalidate_on_update", CacheInvalidateOnUpdate);
            writer.WriteIntValue("cache_ttl", CacheTtl);
            writer.WriteBoolValue("collect_logs", CollectLogs);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp>("dlp", Dlp);
            writer.WriteStringValue("id", Id);
            writer.WriteGuidValue("internal_id", InternalId);
            writer.WriteIntValue("log_management", LogManagement);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_log_management_strategy>("log_management_strategy", LogManagementStrategy);
            writer.WriteBoolValue("logpush", Logpush);
            writer.WriteStringValue("logpush_public_key", LogpushPublicKey);
            writer.WriteDateTimeOffsetValue("modified_at", ModifiedAt);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_otel>("otel", Otel);
            writer.WriteIntValue("rate_limiting_interval", RateLimitingInterval);
            writer.WriteIntValue("rate_limiting_limit", RateLimitingLimit);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_rate_limiting_technique>("rate_limiting_technique", RateLimitingTechnique);
            writer.WriteStringValue("store_id", StoreId);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_stripe>("stripe", Stripe);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember2"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Aig_config_fetch_gateway_200_result_dlp : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1? AigConfigFetchGateway200ResultDlpMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1 AigConfigFetchGateway200ResultDlpMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember2? AigConfigFetchGateway200ResultDlpMember2 { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember2 AigConfigFetchGateway200ResultDlpMember2 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result.Aig_config_fetch_gateway_200_result_dlp();
                result.AigConfigFetchGateway200ResultDlpMember1 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1();
                result.AigConfigFetchGateway200ResultDlpMember2 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember2();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AigConfigFetchGateway200ResultDlpMember1 != null || AigConfigFetchGateway200ResultDlpMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(AigConfigFetchGateway200ResultDlpMember1, AigConfigFetchGateway200ResultDlpMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_fetch_gateway_200_result_dlpMember1>(null, AigConfigFetchGateway200ResultDlpMember1, AigConfigFetchGateway200ResultDlpMember2);
            }
        }
    }
}
#pragma warning restore CS0618
