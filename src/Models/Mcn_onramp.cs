// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Mcn_onramp : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attached_hubs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>? AttachedHubs { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id> AttachedHubs { get; set; }
#endif
        /// <summary>The attached_vpcs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>? AttachedVpcs { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id> AttachedVpcs { get; set; }
#endif
        /// <summary>The cloud_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_cloud_type? CloudType { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_cloud_type CloudType { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The hub property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id? Hub { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id Hub { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_id? Id { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_id Id { get; set; }
#endif
        /// <summary>The install_routes_in_cloud property</summary>
        public bool? InstallRoutesInCloud { get; set; }
        /// <summary>The install_routes_in_magic_wan property</summary>
        public bool? InstallRoutesInMagicWan { get; set; }
        /// <summary>The last_applied_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastAppliedAt { get; set; }
#nullable restore
#else
        public string LastAppliedAt { get; set; }
#endif
        /// <summary>The last_exported_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastExportedAt { get; set; }
#nullable restore
#else
        public string LastExportedAt { get; set; }
#endif
        /// <summary>The last_planned_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastPlannedAt { get; set; }
#nullable restore
#else
        public string LastPlannedAt { get; set; }
#endif
        /// <summary>The manage_hub_to_hub_attachments property</summary>
        public bool? ManageHubToHubAttachments { get; set; }
        /// <summary>The manage_vpc_to_hub_attachments property</summary>
        public bool? ManageVpcToHubAttachments { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The planned_monthly_cost_estimate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff? PlannedMonthlyCostEstimate { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff PlannedMonthlyCostEstimate { get; set; }
#endif
        /// <summary>The planned_resources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff>? PlannedResources { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff> PlannedResources { get; set; }
#endif
        /// <summary>The planned_resources_unavailable property</summary>
        public bool? PlannedResourcesUnavailable { get; set; }
        /// <summary>The post_apply_monthly_cost_estimate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost? PostApplyMonthlyCostEstimate { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost PostApplyMonthlyCostEstimate { get; set; }
#endif
        /// <summary>The post_apply_resources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_post_apply_resources? PostApplyResources { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_post_apply_resources PostApplyResources { get; set; }
#endif
        /// <summary>The post_apply_resources_unavailable property</summary>
        public bool? PostApplyResourcesUnavailable { get; set; }
        /// <summary>The region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_status? Status { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_status Status { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_type? Type { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_type Type { get; set; }
#endif
        /// <summary>The updated_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>The vpc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id? Vpc { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id Vpc { get; set; }
#endif
        /// <summary>The vpcs_by_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_vpcs_by_id? VpcsById { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_vpcs_by_id VpcsById { get; set; }
#endif
        /// <summary>The list of vpc IDs for which resource details failed to generate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>? VpcsByIdUnavailable { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id> VpcsByIdUnavailable { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp"/> and sets the default values.
        /// </summary>
        public Mcn_onramp()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attached_hubs", n => { AttachedHubs = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id.CreateFromDiscriminatorValue)?.AsList(); } },
                { "attached_vpcs", n => { AttachedVpcs = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cloud_type", n => { CloudType = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_cloud_type>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_cloud_type.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "hub", n => { Hub = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_id.CreateFromDiscriminatorValue); } },
                { "install_routes_in_cloud", n => { InstallRoutesInCloud = n.GetBoolValue(); } },
                { "install_routes_in_magic_wan", n => { InstallRoutesInMagicWan = n.GetBoolValue(); } },
                { "last_applied_at", n => { LastAppliedAt = n.GetStringValue(); } },
                { "last_exported_at", n => { LastExportedAt = n.GetStringValue(); } },
                { "last_planned_at", n => { LastPlannedAt = n.GetStringValue(); } },
                { "manage_hub_to_hub_attachments", n => { ManageHubToHubAttachments = n.GetBoolValue(); } },
                { "manage_vpc_to_hub_attachments", n => { ManageVpcToHubAttachments = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "planned_monthly_cost_estimate", n => { PlannedMonthlyCostEstimate = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff.CreateFromDiscriminatorValue); } },
                { "planned_resources", n => { PlannedResources = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff.CreateFromDiscriminatorValue)?.AsList(); } },
                { "planned_resources_unavailable", n => { PlannedResourcesUnavailable = n.GetBoolValue(); } },
                { "post_apply_monthly_cost_estimate", n => { PostApplyMonthlyCostEstimate = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost.CreateFromDiscriminatorValue); } },
                { "post_apply_resources", n => { PostApplyResources = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_post_apply_resources>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_post_apply_resources.CreateFromDiscriminatorValue); } },
                { "post_apply_resources_unavailable", n => { PostApplyResourcesUnavailable = n.GetBoolValue(); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "status", n => { Status = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_status>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_status.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_type>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_type.CreateFromDiscriminatorValue); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
                { "vpc", n => { Vpc = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id.CreateFromDiscriminatorValue); } },
                { "vpcs_by_id", n => { VpcsById = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_vpcs_by_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_vpcs_by_id.CreateFromDiscriminatorValue); } },
                { "vpcs_by_id_unavailable", n => { VpcsByIdUnavailable = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>("attached_hubs", AttachedHubs);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>("attached_vpcs", AttachedVpcs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_cloud_type>("cloud_type", CloudType);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>("hub", Hub);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_id>("id", Id);
            writer.WriteBoolValue("install_routes_in_cloud", InstallRoutesInCloud);
            writer.WriteBoolValue("install_routes_in_magic_wan", InstallRoutesInMagicWan);
            writer.WriteStringValue("last_applied_at", LastAppliedAt);
            writer.WriteStringValue("last_exported_at", LastExportedAt);
            writer.WriteStringValue("last_planned_at", LastPlannedAt);
            writer.WriteBoolValue("manage_hub_to_hub_attachments", ManageHubToHubAttachments);
            writer.WriteBoolValue("manage_vpc_to_hub_attachments", ManageVpcToHubAttachments);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff>("planned_monthly_cost_estimate", PlannedMonthlyCostEstimate);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff>("planned_resources", PlannedResources);
            writer.WriteBoolValue("planned_resources_unavailable", PlannedResourcesUnavailable);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost>("post_apply_monthly_cost_estimate", PostApplyMonthlyCostEstimate);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_post_apply_resources>("post_apply_resources", PostApplyResources);
            writer.WriteBoolValue("post_apply_resources_unavailable", PostApplyResourcesUnavailable);
            writer.WriteStringValue("region", Region);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_type>("type", Type);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>("vpc", Vpc);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_onramp_vpcs_by_id>("vpcs_by_id", VpcsById);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_id>("vpcs_by_id_unavailable", VpcsByIdUnavailable);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
