// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Asn_intelligence_get_asn_subnets_4XX : ApiException, IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The asn property</summary>
        public int? Asn { get; set; }
        /// <summary>Total results returned based on your search parameters.</summary>
        public double? Count { get; set; }
        /// <summary>The errors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_errors? Errors { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_errors Errors { get; set; }
#endif
        /// <summary>The ip_count_total property</summary>
        public int? IpCountTotal { get; set; }
        /// <summary>The primary error message.</summary>
        public override string Message { get => base.Message; }
        /// <summary>The messages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_messages? Messages { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_messages Messages { get; set; }
#endif
        /// <summary>Current page within paginated list of results.</summary>
        public double? Page { get; set; }
        /// <summary>Number of results per page of results.</summary>
        public double? PerPage { get; set; }
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_result? Result { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_result Result { get; set; }
#endif
        /// <summary>The subnets property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Subnets { get; set; }
#nullable restore
#else
        public List<string> Subnets { get; set; }
#endif
        /// <summary>Whether the API call was successful.</summary>
        public bool? Success { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Asn_intelligence_get_asn_subnets_4XX"/> and sets the default values.
        /// </summary>
        public Asn_intelligence_get_asn_subnets_4XX()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Asn_intelligence_get_asn_subnets_4XX"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Asn_intelligence_get_asn_subnets_4XX CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Asn_intelligence_get_asn_subnets_4XX();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "asn", n => { Asn = n.GetIntValue(); } },
                { "count", n => { Count = n.GetDoubleValue(); } },
                { "errors", n => { Errors = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_errors>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_errors.CreateFromDiscriminatorValue); } },
                { "ip_count_total", n => { IpCountTotal = n.GetIntValue(); } },
                { "messages", n => { Messages = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_messages>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_messages.CreateFromDiscriminatorValue); } },
                { "page", n => { Page = n.GetDoubleValue(); } },
                { "per_page", n => { PerPage = n.GetDoubleValue(); } },
                { "result", n => { Result = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_result>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_result.CreateFromDiscriminatorValue); } },
                { "subnets", n => { Subnets = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "success", n => { Success = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("asn", Asn);
            writer.WriteDoubleValue("count", Count);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_errors>("errors", Errors);
            writer.WriteIntValue("ip_count_total", IpCountTotal);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_messages>("messages", Messages);
            writer.WriteDoubleValue("page", Page);
            writer.WriteDoubleValue("per_page", PerPage);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_api_response_common_failure_result>("result", Result);
            writer.WriteCollectionOfPrimitiveValues<string>("subnets", Subnets);
            writer.WriteBoolValue("success", Success);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
