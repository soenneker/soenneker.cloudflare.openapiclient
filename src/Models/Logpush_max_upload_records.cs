// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Logpush_max_upload_records : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2? LogpushMaxUploadRecordsBranch2 { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2 LogpushMaxUploadRecordsBranch2 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting? LogpushMaxUploadRecordsSetting { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting LogpushMaxUploadRecordsSetting { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records();
            if("logpush_max_upload_records_2".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.LogpushMaxUploadRecordsBranch2 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2();
            }
            else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.LogpushMaxUploadRecordsSetting = new global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(LogpushMaxUploadRecordsBranch2 != null)
            {
                return LogpushMaxUploadRecordsBranch2.GetFieldDeserializers();
            }
            else if(LogpushMaxUploadRecordsSetting != null)
            {
                return LogpushMaxUploadRecordsSetting.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(LogpushMaxUploadRecordsBranch2 != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_Branch2>(null, LogpushMaxUploadRecordsBranch2);
            }
            else if(LogpushMaxUploadRecordsSetting != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Logpush_max_upload_records_setting>(null, LogpushMaxUploadRecordsSetting);
            }
        }
    }
}
#pragma warning restore CS0618
