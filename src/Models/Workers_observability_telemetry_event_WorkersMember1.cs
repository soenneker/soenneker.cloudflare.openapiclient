// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Workers_observability_telemetry_event_WorkersMember1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The entrypoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Entrypoint { get; set; }
#nullable restore
#else
        public string Entrypoint { get; set; }
#endif
        /// <summary>The event property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_event? Event { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_event Event { get; set; }
#endif
        /// <summary>The eventType property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_eventType? EventType { get; set; }
        /// <summary>The executionModel property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_executionModel? ExecutionModel { get; set; }
        /// <summary>The outcome property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Outcome { get; set; }
#nullable restore
#else
        public string Outcome { get; set; }
#endif
        /// <summary>The requestId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestId { get; set; }
#nullable restore
#else
        public string RequestId { get; set; }
#endif
        /// <summary>The scriptName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScriptName { get; set; }
#nullable restore
#else
        public string ScriptName { get; set; }
#endif
        /// <summary>The scriptVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_scriptVersion? ScriptVersion { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_scriptVersion ScriptVersion { get; set; }
#endif
        /// <summary>The truncated property</summary>
        public bool? Truncated { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1"/> and sets the default values.
        /// </summary>
        public Workers_observability_telemetry_event_WorkersMember1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "entrypoint", n => { Entrypoint = n.GetStringValue(); } },
                { "event", n => { Event = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_event>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_event.CreateFromDiscriminatorValue); } },
                { "eventType", n => { EventType = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_eventType>(); } },
                { "executionModel", n => { ExecutionModel = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_executionModel>(); } },
                { "outcome", n => { Outcome = n.GetStringValue(); } },
                { "requestId", n => { RequestId = n.GetStringValue(); } },
                { "scriptName", n => { ScriptName = n.GetStringValue(); } },
                { "scriptVersion", n => { ScriptVersion = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_scriptVersion>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_scriptVersion.CreateFromDiscriminatorValue); } },
                { "truncated", n => { Truncated = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("entrypoint", Entrypoint);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_event>("event", Event);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_eventType>("eventType", EventType);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_executionModel>("executionModel", ExecutionModel);
            writer.WriteStringValue("outcome", Outcome);
            writer.WriteStringValue("requestId", RequestId);
            writer.WriteStringValue("scriptName", ScriptName);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_telemetry_event_WorkersMember1_scriptVersion>("scriptVersion", ScriptVersion);
            writer.WriteBoolValue("truncated", Truncated);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
