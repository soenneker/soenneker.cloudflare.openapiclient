// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Access_identity : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The auth_status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthStatus { get; set; }
#nullable restore
#else
        public string AuthStatus { get; set; }
#endif
        /// <summary>The common_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommonName { get; set; }
#nullable restore
#else
        public string CommonName { get; set; }
#endif
        /// <summary>The device_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceId { get; set; }
#nullable restore
#else
        public string DeviceId { get; set; }
#endif
        /// <summary>The devicePosture property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_devicePosture? DevicePosture { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_devicePosture DevicePosture { get; set; }
#endif
        /// <summary>The device_sessions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_string_key_map_device_session? DeviceSessions { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_string_key_map_device_session DeviceSessions { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The geo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_geo? Geo { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_geo Geo { get; set; }
#endif
        /// <summary>The iat property</summary>
        public double? Iat { get; set; }
        /// <summary>The idp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_idp? Idp { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_idp Idp { get; set; }
#endif
        /// <summary>The ip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Ip { get; set; }
#nullable restore
#else
        public string Ip { get; set; }
#endif
        /// <summary>The is_gateway property</summary>
        public bool? IsGateway { get; set; }
        /// <summary>The is_warp property</summary>
        public bool? IsWarp { get; set; }
        /// <summary>The mtls_auth property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_mtls_auth? MtlsAuth { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_mtls_auth MtlsAuth { get; set; }
#endif
        /// <summary>The service_token_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceTokenId { get; set; }
#nullable restore
#else
        public string ServiceTokenId { get; set; }
#endif
        /// <summary>The service_token_status property</summary>
        public bool? ServiceTokenStatus { get; set; }
        /// <summary>The user_uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserUuid { get; set; }
#nullable restore
#else
        public string UserUuid { get; set; }
#endif
        /// <summary>The version property</summary>
        public double? Version { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity"/> and sets the default values.
        /// </summary>
        public Access_identity()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_id", n => { AccountId = n.GetStringValue(); } },
                { "auth_status", n => { AuthStatus = n.GetStringValue(); } },
                { "common_name", n => { CommonName = n.GetStringValue(); } },
                { "device_id", n => { DeviceId = n.GetStringValue(); } },
                { "devicePosture", n => { DevicePosture = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_devicePosture>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_devicePosture.CreateFromDiscriminatorValue); } },
                { "device_sessions", n => { DeviceSessions = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_string_key_map_device_session>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_string_key_map_device_session.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "geo", n => { Geo = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_geo>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_geo.CreateFromDiscriminatorValue); } },
                { "iat", n => { Iat = n.GetDoubleValue(); } },
                { "idp", n => { Idp = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_idp>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_idp.CreateFromDiscriminatorValue); } },
                { "ip", n => { Ip = n.GetStringValue(); } },
                { "is_gateway", n => { IsGateway = n.GetBoolValue(); } },
                { "is_warp", n => { IsWarp = n.GetBoolValue(); } },
                { "mtls_auth", n => { MtlsAuth = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_mtls_auth>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_mtls_auth.CreateFromDiscriminatorValue); } },
                { "service_token_id", n => { ServiceTokenId = n.GetStringValue(); } },
                { "service_token_status", n => { ServiceTokenStatus = n.GetBoolValue(); } },
                { "user_uuid", n => { UserUuid = n.GetStringValue(); } },
                { "version", n => { Version = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_id", AccountId);
            writer.WriteStringValue("auth_status", AuthStatus);
            writer.WriteStringValue("common_name", CommonName);
            writer.WriteStringValue("device_id", DeviceId);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_devicePosture>("devicePosture", DevicePosture);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_string_key_map_device_session>("device_sessions", DeviceSessions);
            writer.WriteStringValue("email", Email);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_geo>("geo", Geo);
            writer.WriteDoubleValue("iat", Iat);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_idp>("idp", Idp);
            writer.WriteStringValue("ip", Ip);
            writer.WriteBoolValue("is_gateway", IsGateway);
            writer.WriteBoolValue("is_warp", IsWarp);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_identity_mtls_auth>("mtls_auth", MtlsAuth);
            writer.WriteStringValue("service_token_id", ServiceTokenId);
            writer.WriteBoolValue("service_token_status", ServiceTokenStatus);
            writer.WriteStringValue("user_uuid", UserUuid);
            writer.WriteDoubleValue("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
