// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Cloudflare_d1_export_database_200_result : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The current time-travel bookmark for your D1, used to poll for updates. Will not change for the duration of the export task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AtBookmark { get; set; }
#nullable restore
#else
        public string AtBookmark { get; set; }
#endif
        /// <summary>Only present when status = &apos;error&apos;. Contains the error message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>Logs since the last time you polled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Messages { get; set; }
#nullable restore
#else
        public List<string> Messages { get; set; }
#endif
        /// <summary>Only present when status = &apos;complete&apos;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_result? Result { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_result Result { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_status? Status { get; set; }
        /// <summary>The success property</summary>
        public bool? Success { get; set; }
        /// <summary>The type property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result"/> and sets the default values.
        /// </summary>
        public Cloudflare_d1_export_database_200_result()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "at_bookmark", n => { AtBookmark = n.GetStringValue(); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "messages", n => { Messages = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "result", n => { Result = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_result>(global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_result.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_status>(); } },
                { "success", n => { Success = n.GetBoolValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("at_bookmark", AtBookmark);
            writer.WriteStringValue("error", Error);
            writer.WriteCollectionOfPrimitiveValues<string>("messages", Messages);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_result>("result", Result);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_status>("status", Status);
            writer.WriteBoolValue("success", Success);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_d1_export_database_200_result_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
