// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Contains R2 Data Catalog information.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class R2_data_catalog_catalog : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Specifies the associated R2 bucket name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Bucket { get; set; }
#nullable restore
#else
        public string Bucket { get; set; }
#endif
        /// <summary>Shows the credential configuration status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CredentialStatus { get; set; }
#nullable restore
#else
        public string CredentialStatus { get; set; }
#endif
        /// <summary>Use this to uniquely identify the catalog.</summary>
        public Guid? Id { get; set; }
        /// <summary>Configures maintenance for the catalog.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_maintenance_config? MaintenanceConfig { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_maintenance_config MaintenanceConfig { get; set; }
#endif
        /// <summary>Specifies the catalog name (generated from account and bucket name).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Indicates the status of the catalog.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog"/> and sets the default values.
        /// </summary>
        public R2_data_catalog_catalog()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bucket", n => { Bucket = n.GetStringValue(); } },
                { "credential_status", n => { CredentialStatus = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "maintenance_config", n => { MaintenanceConfig = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_maintenance_config>(global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_maintenance_config.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("bucket", Bucket);
            writer.WriteStringValue("credential_status", CredentialStatus);
            writer.WriteGuidValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_maintenance_config>("maintenance_config", MaintenanceConfig);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_catalog_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
