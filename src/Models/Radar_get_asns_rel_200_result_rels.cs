// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Radar_get_asns_rel_200_result_rels : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The asn1 property</summary>
        public int? Asn1 { get; set; }
        /// <summary>The asn1_country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Asn1Country { get; set; }
#nullable restore
#else
        public string Asn1Country { get; set; }
#endif
        /// <summary>The asn1_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Asn1Name { get; set; }
#nullable restore
#else
        public string Asn1Name { get; set; }
#endif
        /// <summary>The asn2 property</summary>
        public int? Asn2 { get; set; }
        /// <summary>The asn2_country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Asn2Country { get; set; }
#nullable restore
#else
        public string Asn2Country { get; set; }
#endif
        /// <summary>The asn2_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Asn2Name { get; set; }
#nullable restore
#else
        public string Asn2Name { get; set; }
#endif
        /// <summary>The rel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Rel { get; set; }
#nullable restore
#else
        public string Rel { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_rel_200_result_rels"/> and sets the default values.
        /// </summary>
        public Radar_get_asns_rel_200_result_rels()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_rel_200_result_rels"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_rel_200_result_rels CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_rel_200_result_rels();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "asn1", n => { Asn1 = n.GetIntValue(); } },
                { "asn1_country", n => { Asn1Country = n.GetStringValue(); } },
                { "asn1_name", n => { Asn1Name = n.GetStringValue(); } },
                { "asn2", n => { Asn2 = n.GetIntValue(); } },
                { "asn2_country", n => { Asn2Country = n.GetStringValue(); } },
                { "asn2_name", n => { Asn2Name = n.GetStringValue(); } },
                { "rel", n => { Rel = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("asn1", Asn1);
            writer.WriteStringValue("asn1_country", Asn1Country);
            writer.WriteStringValue("asn1_name", Asn1Name);
            writer.WriteIntValue("asn2", Asn2);
            writer.WriteStringValue("asn2_country", Asn2Country);
            writer.WriteStringValue("asn2_name", Asn2Name);
            writer.WriteStringValue("rel", Rel);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
