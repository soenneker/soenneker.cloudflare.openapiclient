// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Access_schemas_azureAD_config : global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_generic_oauth_config, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Should Cloudflare try to load authentication contexts from your account</summary>
        public bool? ConditionalAccessEnabled { get; set; }
        /// <summary>Your Azure directory uuid</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DirectoryId { get; set; }
#nullable restore
#else
        public string DirectoryId { get; set; }
#endif
        /// <summary>Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn&apos;t presented with any interactive prompt. If the request can&apos;t be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config_prompt? Prompt { get; set; }
        /// <summary>Should Cloudflare try to load groups from your account</summary>
        public bool? SupportGroups { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "conditional_access_enabled", n => { ConditionalAccessEnabled = n.GetBoolValue(); } },
                { "directory_id", n => { DirectoryId = n.GetStringValue(); } },
                { "prompt", n => { Prompt = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config_prompt>(); } },
                { "support_groups", n => { SupportGroups = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteBoolValue("conditional_access_enabled", ConditionalAccessEnabled);
            writer.WriteStringValue("directory_id", DirectoryId);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemas_azureAD_config_prompt>("prompt", Prompt);
            writer.WriteBoolValue("support_groups", SupportGroups);
        }
    }
}
#pragma warning restore CS0618
