// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Firewall_package_response_single : IAdditionalDataHolder, IComposedTypeWrapper, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_api_response_single"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_api_response_single? FirewallApiResponseSingle { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_api_response_single FirewallApiResponseSingle { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_singleMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_singleMember1? FirewallPackageResponseSingleMember1 { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_singleMember1 FirewallPackageResponseSingleMember1 { get; set; }
#endif
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single_result? Result { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single_result Result { get; set; }
#endif
        /// <summary>Union discriminator</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single"/> and sets the default values.
        /// </summary>
        public Firewall_package_response_single()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single();
            if("firewall_api_response_single".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.FirewallApiResponseSingle = new global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_api_response_single();
            }
            else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.FirewallPackageResponseSingleMember1 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_singleMember1();
            }
            else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.Result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single_result();
            }
            else if(parseNode.GetStringValue() is string typeValue)
            {
                result.Type = typeValue;
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(FirewallApiResponseSingle != null)
            {
                return FirewallApiResponseSingle.GetFieldDeserializers();
            }
            else if(FirewallPackageResponseSingleMember1 != null)
            {
                return FirewallPackageResponseSingleMember1.GetFieldDeserializers();
            }
            else if(Result != null)
            {
                return Result.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            if(FirewallApiResponseSingle != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_api_response_single>(null, FirewallApiResponseSingle);
            }
            else if(FirewallPackageResponseSingleMember1 != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_singleMember1>(null, FirewallPackageResponseSingleMember1);
            }
            else if(Result != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_package_response_single_result>(null, Result);
            }
            else if(Type != null)
            {
                writer.WriteStringValue(null, Type);
            }
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
