// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// All access permissions for the user at the account.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Iam_membershipWithPolicies_permissions : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The analytics property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Analytics { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Analytics { get; set; }
#endif
        /// <summary>The billing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Billing { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Billing { get; set; }
#endif
        /// <summary>The cache_purge property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? CachePurge { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants CachePurge { get; set; }
#endif
        /// <summary>The dns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Dns { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Dns { get; set; }
#endif
        /// <summary>The dns_records property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? DnsRecords { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants DnsRecords { get; set; }
#endif
        /// <summary>The lb property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Lb { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Lb { get; set; }
#endif
        /// <summary>The logs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Logs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Logs { get; set; }
#endif
        /// <summary>The organization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Organization { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Organization { get; set; }
#endif
        /// <summary>The ssl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Ssl { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Ssl { get; set; }
#endif
        /// <summary>The waf property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Waf { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Waf { get; set; }
#endif
        /// <summary>The zones property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? Zones { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants Zones { get; set; }
#endif
        /// <summary>The zone_settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants? ZoneSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants ZoneSettings { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_membershipWithPolicies_permissions"/> and sets the default values.
        /// </summary>
        public Iam_membershipWithPolicies_permissions()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_membershipWithPolicies_permissions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_membershipWithPolicies_permissions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_membershipWithPolicies_permissions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "analytics", n => { Analytics = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "billing", n => { Billing = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "cache_purge", n => { CachePurge = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "dns", n => { Dns = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "dns_records", n => { DnsRecords = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "lb", n => { Lb = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "logs", n => { Logs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "organization", n => { Organization = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "ssl", n => { Ssl = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "waf", n => { Waf = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "zone_settings", n => { ZoneSettings = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
                { "zones", n => { Zones = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("analytics", Analytics);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("billing", Billing);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("cache_purge", CachePurge);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("dns", Dns);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("dns_records", DnsRecords);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("lb", Lb);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("logs", Logs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("organization", Organization);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("ssl", Ssl);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("waf", Waf);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("zones", Zones);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_grants>("zone_settings", ZoneSettings);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
