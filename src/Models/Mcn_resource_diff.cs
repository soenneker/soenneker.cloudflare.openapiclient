// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Mcn_resource_diff : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The diff property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_yaml_diff? Diff { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_yaml_diff Diff { get; set; }
#endif
        /// <summary>The keys_require_replace property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? KeysRequireReplace { get; set; }
#nullable restore
#else
        public List<string> KeysRequireReplace { get; set; }
#endif
        /// <summary>The monthly_cost_estimate_diff property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff? MonthlyCostEstimateDiff { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff MonthlyCostEstimateDiff { get; set; }
#endif
        /// <summary>The planned_action property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_planned_action? PlannedAction { get; set; }
        /// <summary>The resource property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_preview? Resource { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_preview Resource { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff"/> and sets the default values.
        /// </summary>
        public Mcn_resource_diff()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_diff();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "diff", n => { Diff = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_yaml_diff>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_yaml_diff.CreateFromDiscriminatorValue); } },
                { "keys_require_replace", n => { KeysRequireReplace = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "monthly_cost_estimate_diff", n => { MonthlyCostEstimateDiff = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff.CreateFromDiscriminatorValue); } },
                { "planned_action", n => { PlannedAction = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_planned_action>(); } },
                { "resource", n => { Resource = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_preview>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_preview.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_yaml_diff>("diff", Diff);
            writer.WriteCollectionOfPrimitiveValues<string>("keys_require_replace", KeysRequireReplace);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost_diff>("monthly_cost_estimate_diff", MonthlyCostEstimateDiff);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_planned_action>("planned_action", PlannedAction);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_preview>("resource", Resource);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
