// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Radar_get_asns_as_set_200_result_as_sets : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The number of AS members in the AS-SET</summary>
        public int? AsMembersCount { get; set; }
        /// <summary>The number of unique ASNs in the AS-SETs recursive downstream</summary>
        public int? AsnConeSize { get; set; }
        /// <summary>The number of AS-SET members in the AS-SET</summary>
        public int? AsSetMembersCount { get; set; }
        /// <summary>The number of recursive upstream AS-SETs</summary>
        public int? AsSetUpstreamsCount { get; set; }
        /// <summary>The AS number following hierarchical AS-SET name</summary>
        public int? HierarchicalAsn { get; set; }
        /// <summary>The inferred AS number of the AS-SET</summary>
        public int? InferredAsn { get; set; }
        /// <summary>The IRR sources of the AS-SET</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? IrrSources { get; set; }
#nullable restore
#else
        public List<string> IrrSources { get; set; }
#endif
        /// <summary>The name of the AS-SET</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The AS number matching PeeringDB record</summary>
        public int? PeeringdbAsn { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_as_set_200_result_as_sets"/> and sets the default values.
        /// </summary>
        public Radar_get_asns_as_set_200_result_as_sets()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_as_set_200_result_as_sets"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_as_set_200_result_as_sets CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_asns_as_set_200_result_as_sets();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "as_members_count", n => { AsMembersCount = n.GetIntValue(); } },
                { "as_set_members_count", n => { AsSetMembersCount = n.GetIntValue(); } },
                { "as_set_upstreams_count", n => { AsSetUpstreamsCount = n.GetIntValue(); } },
                { "asn_cone_size", n => { AsnConeSize = n.GetIntValue(); } },
                { "hierarchical_asn", n => { HierarchicalAsn = n.GetIntValue(); } },
                { "inferred_asn", n => { InferredAsn = n.GetIntValue(); } },
                { "irr_sources", n => { IrrSources = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "peeringdb_asn", n => { PeeringdbAsn = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("as_members_count", AsMembersCount);
            writer.WriteIntValue("asn_cone_size", AsnConeSize);
            writer.WriteIntValue("as_set_members_count", AsSetMembersCount);
            writer.WriteIntValue("as_set_upstreams_count", AsSetUpstreamsCount);
            writer.WriteIntValue("hierarchical_asn", HierarchicalAsn);
            writer.WriteIntValue("inferred_asn", InferredAsn);
            writer.WriteCollectionOfPrimitiveValues<string>("irr_sources", IrrSources);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("peeringdb_asn", PeeringdbAsn);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
