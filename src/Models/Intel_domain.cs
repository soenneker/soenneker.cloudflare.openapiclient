// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Intel_domain : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Additional information related to the host name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_additional_information? AdditionalInformation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_additional_information AdditionalInformation { get; set; }
#endif
        /// <summary>Application that the hostname belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_application? Application { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_application Application { get; set; }
#endif
        /// <summary>The content_categories property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.UrlInfo>? ContentCategories { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.UrlInfo> ContentCategories { get; set; }
#endif
        /// <summary>The domain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain_name? Domain { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain_name Domain { get; set; }
#endif
        /// <summary>The inherited_content_categories property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>? InheritedContentCategories { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id> InheritedContentCategories { get; set; }
#endif
        /// <summary>Domain from which `inherited_content_categories` and `inherited_risk_types` are inherited, if applicable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_inherited_from? InheritedFrom { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_inherited_from InheritedFrom { get; set; }
#endif
        /// <summary>The inherited_risk_types property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>? InheritedRiskTypes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id> InheritedRiskTypes { get; set; }
#endif
        /// <summary>Global Cloudflare 100k ranking for the last 30 days, if available for the hostname. The top ranked domain is 1, the lowest ranked domain is 100,000.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_popularity_rank? PopularityRank { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_popularity_rank PopularityRank { get; set; }
#endif
        /// <summary>Specifies a list of references to one or more IP addresses or domain names that the domain name currently resolves to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_resolves_to_ref>? ResolvesToRefs { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_resolves_to_ref> ResolvesToRefs { get; set; }
#endif
        /// <summary>Hostname risk score, which is a value between 0 (lowest risk) to 1 (highest risk).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_risk_score? RiskScore { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_risk_score RiskScore { get; set; }
#endif
        /// <summary>The risk_types property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>? RiskTypes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id> RiskTypes { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain"/> and sets the default values.
        /// </summary>
        public Intel_domain()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additional_information", n => { AdditionalInformation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_additional_information>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_additional_information.CreateFromDiscriminatorValue); } },
                { "application", n => { Application = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_application>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_application.CreateFromDiscriminatorValue); } },
                { "content_categories", n => { ContentCategories = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.UrlInfo>(global::Soenneker.Cloudflare.OpenApiClient.Models.UrlInfo.CreateFromDiscriminatorValue)?.AsList(); } },
                { "domain", n => { Domain = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain_name>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain_name.CreateFromDiscriminatorValue); } },
                { "inherited_content_categories", n => { InheritedContentCategories = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id.CreateFromDiscriminatorValue)?.AsList(); } },
                { "inherited_from", n => { InheritedFrom = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_inherited_from>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_inherited_from.CreateFromDiscriminatorValue); } },
                { "inherited_risk_types", n => { InheritedRiskTypes = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id.CreateFromDiscriminatorValue)?.AsList(); } },
                { "popularity_rank", n => { PopularityRank = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_popularity_rank>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_popularity_rank.CreateFromDiscriminatorValue); } },
                { "resolves_to_refs", n => { ResolvesToRefs = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_resolves_to_ref>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_resolves_to_ref.CreateFromDiscriminatorValue)?.AsList(); } },
                { "risk_score", n => { RiskScore = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_risk_score>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_risk_score.CreateFromDiscriminatorValue); } },
                { "risk_types", n => { RiskTypes = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_additional_information>("additional_information", AdditionalInformation);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_application>("application", Application);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.UrlInfo>("content_categories", ContentCategories);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_domain_name>("domain", Domain);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>("inherited_content_categories", InheritedContentCategories);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_inherited_from>("inherited_from", InheritedFrom);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>("inherited_risk_types", InheritedRiskTypes);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_popularity_rank>("popularity_rank", PopularityRank);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_resolves_to_ref>("resolves_to_refs", ResolvesToRefs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_risk_score>("risk_score", RiskScore);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_category_with_super_category_id>("risk_types", RiskTypes);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
