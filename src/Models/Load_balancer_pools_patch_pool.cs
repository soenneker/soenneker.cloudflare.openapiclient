// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Load_balancer_pools_patch_pool : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A list of regions from which to run health checks. Null means every Cloudflare data center.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.WithPool_?>? CheckRegions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.WithPool_?> CheckRegions { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The disabled_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisabledAt { get; set; }
#nullable restore
#else
        public string DisabledAt { get; set; }
#endif
        /// <summary>The enabled property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Enabled { get; set; }
#nullable restore
#else
        public string Enabled { get; set; }
#endif
        /// <summary>The latitude property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Latitude { get; set; }
#nullable restore
#else
        public string Latitude { get; set; }
#endif
        /// <summary>Configures load shedding policies and percentages for the pool.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_load_shedding? LoadShedding { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_load_shedding LoadShedding { get; set; }
#endif
        /// <summary>The longitude property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Longitude { get; set; }
#nullable restore
#else
        public string Longitude { get; set; }
#endif
        /// <summary>The minimum_origins property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MinimumOrigins { get; set; }
#nullable restore
#else
        public string MinimumOrigins { get; set; }
#endif
        /// <summary>The monitor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Monitor { get; set; }
#nullable restore
#else
        public string Monitor { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The notification_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NotificationEmail { get; set; }
#nullable restore
#else
        public string NotificationEmail { get; set; }
#endif
        /// <summary>Filter pool and origin health notifications by resource type or health status. Use null to reset.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_notification_filter? NotificationFilter { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_notification_filter NotificationFilter { get; set; }
#endif
        /// <summary>The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin>? Origins { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin> Origins { get; set; }
#endif
        /// <summary>Configures origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin_steering? OriginSteering { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin_steering OriginSteering { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancer_pools_patch_pool"/> and sets the default values.
        /// </summary>
        public Load_balancer_pools_patch_pool()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancer_pools_patch_pool"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancer_pools_patch_pool CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancer_pools_patch_pool();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "check_regions", n => { CheckRegions = n.GetCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.WithPool_>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "disabled_at", n => { DisabledAt = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetStringValue(); } },
                { "latitude", n => { Latitude = n.GetStringValue(); } },
                { "load_shedding", n => { LoadShedding = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_load_shedding>(global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_load_shedding.CreateFromDiscriminatorValue); } },
                { "longitude", n => { Longitude = n.GetStringValue(); } },
                { "minimum_origins", n => { MinimumOrigins = n.GetStringValue(); } },
                { "monitor", n => { Monitor = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "notification_email", n => { NotificationEmail = n.GetStringValue(); } },
                { "notification_filter", n => { NotificationFilter = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_notification_filter>(global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_notification_filter.CreateFromDiscriminatorValue); } },
                { "origin_steering", n => { OriginSteering = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin_steering>(global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin_steering.CreateFromDiscriminatorValue); } },
                { "origins", n => { Origins = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin>(global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.WithPool_>("check_regions", CheckRegions);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("disabled_at", DisabledAt);
            writer.WriteStringValue("enabled", Enabled);
            writer.WriteStringValue("latitude", Latitude);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_load_shedding>("load_shedding", LoadShedding);
            writer.WriteStringValue("longitude", Longitude);
            writer.WriteStringValue("minimum_origins", MinimumOrigins);
            writer.WriteStringValue("monitor", Monitor);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("notification_email", NotificationEmail);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_notification_filter>("notification_filter", NotificationFilter);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin>("origins", Origins);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.LoadBalancing_origin_steering>("origin_steering", OriginSteering);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
