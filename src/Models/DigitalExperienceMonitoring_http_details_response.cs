// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DigitalExperienceMonitoring_http_details_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The url of the HTTP synthetic application test</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Host { get; set; }
#nullable restore
#else
        public string Host { get; set; }
#endif
        /// <summary>The httpStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStats? HttpStats { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStats HttpStats { get; set; }
#endif
        /// <summary>The httpStatsByColo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStatsByColo>? HttpStatsByColo { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStatsByColo> HttpStatsByColo { get; set; }
#endif
        /// <summary>The interval at which the HTTP synthetic application test is set to run.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Interval { get; set; }
#nullable restore
#else
        public string Interval { get; set; }
#endif
        /// <summary>The kind property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_kind? Kind { get; set; }
        /// <summary>The HTTP method to use when running the test</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Method { get; set; }
#nullable restore
#else
        public string Method { get; set; }
#endif
        /// <summary>The name of the HTTP synthetic application test</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The targeted property</summary>
        public bool? Targeted { get; set; }
        /// <summary>The target_policies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_target_policies>? TargetPolicies { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_target_policies> TargetPolicies { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response"/> and sets the default values.
        /// </summary>
        public DigitalExperienceMonitoring_http_details_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "host", n => { Host = n.GetStringValue(); } },
                { "httpStats", n => { HttpStats = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStats.CreateFromDiscriminatorValue); } },
                { "httpStatsByColo", n => { HttpStatsByColo = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStatsByColo>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStatsByColo.CreateFromDiscriminatorValue)?.AsList(); } },
                { "interval", n => { Interval = n.GetStringValue(); } },
                { "kind", n => { Kind = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_kind>(); } },
                { "method", n => { Method = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "target_policies", n => { TargetPolicies = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_target_policies>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_target_policies.CreateFromDiscriminatorValue)?.AsList(); } },
                { "targeted", n => { Targeted = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("host", Host);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStats>("httpStats", HttpStats);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_httpStatsByColo>("httpStatsByColo", HttpStatsByColo);
            writer.WriteStringValue("interval", Interval);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_kind>("kind", Kind);
            writer.WriteStringValue("method", Method);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("targeted", Targeted);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_http_details_response_target_policies>("target_policies", TargetPolicies);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
