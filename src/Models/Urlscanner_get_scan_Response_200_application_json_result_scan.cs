// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Urlscanner_get_scan_Response_200_application_json_result_scan : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Dictionary of Autonomous System Numbers where ASN&apos;s are the keys</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_asns? Asns { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_asns Asns { get; set; }
#endif
        /// <summary>The certificates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_certificates>? Certificates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_certificates> Certificates { get; set; }
#endif
        /// <summary>The domains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_domains? Domains { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_domains Domains { get; set; }
#endif
        /// <summary>The geo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_geo? Geo { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_geo Geo { get; set; }
#endif
        /// <summary>The ips property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_ips? Ips { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_ips Ips { get; set; }
#endif
        /// <summary>The links property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_links? Links { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_links Links { get; set; }
#endif
        /// <summary>The meta property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_meta? Meta { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_meta Meta { get; set; }
#endif
        /// <summary>The page property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_page? Page { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_page Page { get; set; }
#endif
        /// <summary>The performance property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance>? Performance { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance> Performance { get; set; }
#endif
        /// <summary>The task property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_task? Task { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_task Task { get; set; }
#endif
        /// <summary>The verdicts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_verdicts? Verdicts { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_verdicts Verdicts { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan"/> and sets the default values.
        /// </summary>
        public Urlscanner_get_scan_Response_200_application_json_result_scan()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "asns", n => { Asns = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_asns>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_asns.CreateFromDiscriminatorValue); } },
                { "certificates", n => { Certificates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_certificates>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_certificates.CreateFromDiscriminatorValue)?.AsList(); } },
                { "domains", n => { Domains = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_domains>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_domains.CreateFromDiscriminatorValue); } },
                { "geo", n => { Geo = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_geo>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_geo.CreateFromDiscriminatorValue); } },
                { "ips", n => { Ips = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_ips>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_ips.CreateFromDiscriminatorValue); } },
                { "links", n => { Links = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_links>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_links.CreateFromDiscriminatorValue); } },
                { "meta", n => { Meta = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_meta>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_meta.CreateFromDiscriminatorValue); } },
                { "page", n => { Page = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_page>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_page.CreateFromDiscriminatorValue); } },
                { "performance", n => { Performance = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance.CreateFromDiscriminatorValue)?.AsList(); } },
                { "task", n => { Task = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_task>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_task.CreateFromDiscriminatorValue); } },
                { "verdicts", n => { Verdicts = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_verdicts>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_verdicts.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_asns>("asns", Asns);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_certificates>("certificates", Certificates);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_domains>("domains", Domains);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_geo>("geo", Geo);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_ips>("ips", Ips);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_links>("links", Links);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_meta>("meta", Meta);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_page>("page", Page);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance>("performance", Performance);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_task>("task", Task);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_verdicts>("verdicts", Verdicts);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
