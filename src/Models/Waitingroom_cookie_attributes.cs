// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user&apos;s status in the waiting room, such as queue position.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Waitingroom_cookie_attributes : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_samesite? Samesite { get; set; }
        /// <summary>Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_secure? Secure { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes"/> and sets the default values.
        /// </summary>
        public Waitingroom_cookie_attributes()
        {
            AdditionalData = new Dictionary<string, object>();
            Samesite = global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_samesite.Auto;
            Secure = global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_secure.Auto;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "samesite", n => { Samesite = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_samesite>(); } },
                { "secure", n => { Secure = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_secure>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_samesite>("samesite", Samesite);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Waitingroom_cookie_attributes_secure>("secure", Secure);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
