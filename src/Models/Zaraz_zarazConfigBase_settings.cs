// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// General Zaraz settings.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Zaraz_zarazConfigBase_settings : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Automatic injection of Zaraz scripts enabled.</summary>
        public bool? AutoInjectScript { get; set; }
        /// <summary>Details of the worker that receives and edits Zaraz Context object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings_contextEnricher? ContextEnricher { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings_contextEnricher ContextEnricher { get; set; }
#endif
        /// <summary>The domain Zaraz will use for writing and reading its cookies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CookieDomain { get; set; }
#nullable restore
#else
        public string CookieDomain { get; set; }
#endif
        /// <summary>Ecommerce API enabled.</summary>
        public bool? Ecommerce { get; set; }
        /// <summary>Custom endpoint for server-side track events.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EventsApiPath { get; set; }
#nullable restore
#else
        public string EventsApiPath { get; set; }
#endif
        /// <summary>Hiding external referrer URL enabled.</summary>
        public bool? HideExternalReferer { get; set; }
        /// <summary>Trimming IP address enabled.</summary>
        public bool? HideIPAddress { get; set; }
        /// <summary>Removing URL query params enabled.</summary>
        public bool? HideQueryParams { get; set; }
        /// <summary>Removing sensitive data from User Aagent string enabled.</summary>
        public bool? HideUserAgent { get; set; }
        /// <summary>Custom endpoint for Zaraz init script.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InitPath { get; set; }
#nullable restore
#else
        public string InitPath { get; set; }
#endif
        /// <summary>Injection of Zaraz scripts into iframes enabled.</summary>
        public bool? InjectIframes { get; set; }
        /// <summary>Custom path for Managed Components server functionalities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? McRootPath { get; set; }
#nullable restore
#else
        public string McRootPath { get; set; }
#endif
        /// <summary>Custom endpoint for Zaraz main script.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScriptPath { get; set; }
#nullable restore
#else
        public string ScriptPath { get; set; }
#endif
        /// <summary>Custom endpoint for Zaraz tracking requests.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackPath { get; set; }
#nullable restore
#else
        public string TrackPath { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings"/> and sets the default values.
        /// </summary>
        public Zaraz_zarazConfigBase_settings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "autoInjectScript", n => { AutoInjectScript = n.GetBoolValue(); } },
                { "contextEnricher", n => { ContextEnricher = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings_contextEnricher>(global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings_contextEnricher.CreateFromDiscriminatorValue); } },
                { "cookieDomain", n => { CookieDomain = n.GetStringValue(); } },
                { "ecommerce", n => { Ecommerce = n.GetBoolValue(); } },
                { "eventsApiPath", n => { EventsApiPath = n.GetStringValue(); } },
                { "hideExternalReferer", n => { HideExternalReferer = n.GetBoolValue(); } },
                { "hideIPAddress", n => { HideIPAddress = n.GetBoolValue(); } },
                { "hideQueryParams", n => { HideQueryParams = n.GetBoolValue(); } },
                { "hideUserAgent", n => { HideUserAgent = n.GetBoolValue(); } },
                { "initPath", n => { InitPath = n.GetStringValue(); } },
                { "injectIframes", n => { InjectIframes = n.GetBoolValue(); } },
                { "mcRootPath", n => { McRootPath = n.GetStringValue(); } },
                { "scriptPath", n => { ScriptPath = n.GetStringValue(); } },
                { "trackPath", n => { TrackPath = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("autoInjectScript", AutoInjectScript);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zaraz_zarazConfigBase_settings_contextEnricher>("contextEnricher", ContextEnricher);
            writer.WriteStringValue("cookieDomain", CookieDomain);
            writer.WriteBoolValue("ecommerce", Ecommerce);
            writer.WriteStringValue("eventsApiPath", EventsApiPath);
            writer.WriteBoolValue("hideExternalReferer", HideExternalReferer);
            writer.WriteBoolValue("hideIPAddress", HideIPAddress);
            writer.WriteBoolValue("hideQueryParams", HideQueryParams);
            writer.WriteBoolValue("hideUserAgent", HideUserAgent);
            writer.WriteStringValue("initPath", InitPath);
            writer.WriteBoolValue("injectIframes", InjectIframes);
            writer.WriteStringValue("mcRootPath", McRootPath);
            writer.WriteStringValue("scriptPath", ScriptPath);
            writer.WriteStringValue("trackPath", TrackPath);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
