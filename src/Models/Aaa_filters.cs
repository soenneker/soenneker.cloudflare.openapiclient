// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Aaa_filters : IAdditionalDataHolder, IParsable
    {
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Actions { get; set; }
#nullable restore
#else
        public List<string> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Used for configuring radar_notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AffectedAsns { get; set; }
#nullable restore
#else
        public List<string> AffectedAsns { get; set; }
#endif
        /// <summary>Used for configuring incident_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AffectedComponents { get; set; }
#nullable restore
#else
        public List<string> AffectedComponents { get; set; }
#endif
        /// <summary>Used for configuring radar_notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AffectedLocations { get; set; }
#nullable restore
#else
        public List<string> AffectedLocations { get; set; }
#endif
        /// <summary>Used for configuring maintenance_event_notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AirportCode { get; set; }
#nullable restore
#else
        public List<string> AirportCode { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AlertTriggerPreferences { get; set; }
#nullable restore
#else
        public List<string> AlertTriggerPreferences { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AlertTriggerPreferencesValue { get; set; }
#nullable restore
#else
        public List<string> AlertTriggerPreferencesValue { get; set; }
#endif
        /// <summary>Used for configuring load_balancing_pool_enablement_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Enabled { get; set; }
#nullable restore
#else
        public List<string> Enabled { get; set; }
#endif
        /// <summary>Used for configuring pages_event_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Environment { get; set; }
#nullable restore
#else
        public List<string> Environment { get; set; }
#endif
        /// <summary>Used for configuring pages_event_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Event { get; set; }
#nullable restore
#else
        public List<string> Event { get; set; }
#endif
        /// <summary>Used for configuring load_balancing_health_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EventSource { get; set; }
#nullable restore
#else
        public List<string> EventSource { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EventType { get; set; }
#nullable restore
#else
        public List<string> EventType { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? GroupBy { get; set; }
#nullable restore
#else
        public List<string> GroupBy { get; set; }
#endif
        /// <summary>Used for configuring health_check_status_notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? HealthCheckId { get; set; }
#nullable restore
#else
        public List<string> HealthCheckId { get; set; }
#endif
        /// <summary>Used for configuring incident_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_incident_impact?>? IncidentImpact { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_incident_impact?> IncidentImpact { get; set; }
#endif
        /// <summary>Used for configuring stream_live_notifications</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? InputId { get; set; }
#nullable restore
#else
        public List<string> InputId { get; set; }
#endif
        /// <summary>Used for configuring security_insights_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? InsightClass { get; set; }
#nullable restore
#else
        public List<string> InsightClass { get; set; }
#endif
        /// <summary>Used for configuring billing_usage_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Limit { get; set; }
#nullable restore
#else
        public List<string> Limit { get; set; }
#endif
        /// <summary>Used for configuring logo_match_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LogoTag { get; set; }
#nullable restore
#else
        public List<string> LogoTag { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l4_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? MegabitsPerSecond { get; set; }
#nullable restore
#else
        public List<string> MegabitsPerSecond { get; set; }
#endif
        /// <summary>Used for configuring load_balancing_health_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? NewHealth { get; set; }
#nullable restore
#else
        public List<string> NewHealth { get; set; }
#endif
        /// <summary>Used for configuring tunnel_health_event</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? NewStatus { get; set; }
#nullable restore
#else
        public List<string> NewStatus { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l4_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PacketsPerSecond { get; set; }
#nullable restore
#else
        public List<string> PacketsPerSecond { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PoolId { get; set; }
#nullable restore
#else
        public List<string> PoolId { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PopNames { get; set; }
#nullable restore
#else
        public List<string> PopNames { get; set; }
#endif
        /// <summary>Used for configuring billing_usage_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Product { get; set; }
#nullable restore
#else
        public List<string> Product { get; set; }
#endif
        /// <summary>Used for configuring pages_event_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ProjectId { get; set; }
#nullable restore
#else
        public List<string> ProjectId { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l4_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Protocol { get; set; }
#nullable restore
#else
        public List<string> Protocol { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? QueryTag { get; set; }
#nullable restore
#else
        public List<string> QueryTag { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l7_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RequestsPerSecond { get; set; }
#nullable restore
#else
        public List<string> RequestsPerSecond { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Selectors { get; set; }
#nullable restore
#else
        public List<string> Selectors { get; set; }
#endif
        /// <summary>Used for configuring clickhouse_alert_fw_ent_anomaly</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Services { get; set; }
#nullable restore
#else
        public List<string> Services { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Slo { get; set; }
#nullable restore
#else
        public List<string> Slo { get; set; }
#endif
        /// <summary>Used for configuring health_check_status_notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Status { get; set; }
#nullable restore
#else
        public List<string> Status { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l7_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TargetHostname { get; set; }
#nullable restore
#else
        public List<string> TargetHostname { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l4_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TargetIp { get; set; }
#nullable restore
#else
        public List<string> TargetIp { get; set; }
#endif
        /// <summary>Used for configuring advanced_ddos_attack_l7_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TargetZoneName { get; set; }
#nullable restore
#else
        public List<string> TargetZoneName { get; set; }
#endif
        /// <summary>Used for configuring traffic_anomalies_alert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_traffic_exclusions?>? TrafficExclusions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_traffic_exclusions?> TrafficExclusions { get; set; }
#endif
        /// <summary>Used for configuring tunnel_health_event</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TunnelId { get; set; }
#nullable restore
#else
        public List<string> TunnelId { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TunnelName { get; set; }
#nullable restore
#else
        public List<string> TunnelName { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Where { get; set; }
#nullable restore
#else
        public List<string> Where { get; set; }
#endif
        /// <summary>Usage depends on specific alert type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Zones { get; set; }
#nullable restore
#else
        public List<string> Zones { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters"/> and sets the default values.
        /// </summary>
        public Aaa_filters()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions", n => { Actions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "affected_asns", n => { AffectedAsns = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "affected_components", n => { AffectedComponents = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "affected_locations", n => { AffectedLocations = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "airport_code", n => { AirportCode = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "alert_trigger_preferences", n => { AlertTriggerPreferences = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "alert_trigger_preferences_value", n => { AlertTriggerPreferencesValue = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "enabled", n => { Enabled = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "environment", n => { Environment = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "event", n => { Event = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "event_source", n => { EventSource = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "event_type", n => { EventType = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "group_by", n => { GroupBy = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "health_check_id", n => { HealthCheckId = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "incident_impact", n => { IncidentImpact = n.GetCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_incident_impact>()?.AsList(); } },
                { "input_id", n => { InputId = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "insight_class", n => { InsightClass = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "limit", n => { Limit = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "logo_tag", n => { LogoTag = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "megabits_per_second", n => { MegabitsPerSecond = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "new_health", n => { NewHealth = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "new_status", n => { NewStatus = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "packets_per_second", n => { PacketsPerSecond = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "pool_id", n => { PoolId = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "pop_names", n => { PopNames = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "product", n => { Product = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "project_id", n => { ProjectId = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "protocol", n => { Protocol = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "query_tag", n => { QueryTag = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "requests_per_second", n => { RequestsPerSecond = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "selectors", n => { Selectors = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "services", n => { Services = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "slo", n => { Slo = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "status", n => { Status = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "target_hostname", n => { TargetHostname = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "target_ip", n => { TargetIp = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "target_zone_name", n => { TargetZoneName = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "traffic_exclusions", n => { TrafficExclusions = n.GetCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_traffic_exclusions>()?.AsList(); } },
                { "tunnel_id", n => { TunnelId = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "tunnel_name", n => { TunnelName = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "where", n => { Where = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "zones", n => { Zones = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("actions", Actions);
            writer.WriteCollectionOfPrimitiveValues<string>("affected_asns", AffectedAsns);
            writer.WriteCollectionOfPrimitiveValues<string>("affected_components", AffectedComponents);
            writer.WriteCollectionOfPrimitiveValues<string>("affected_locations", AffectedLocations);
            writer.WriteCollectionOfPrimitiveValues<string>("airport_code", AirportCode);
            writer.WriteCollectionOfPrimitiveValues<string>("alert_trigger_preferences", AlertTriggerPreferences);
            writer.WriteCollectionOfPrimitiveValues<string>("alert_trigger_preferences_value", AlertTriggerPreferencesValue);
            writer.WriteCollectionOfPrimitiveValues<string>("enabled", Enabled);
            writer.WriteCollectionOfPrimitiveValues<string>("environment", Environment);
            writer.WriteCollectionOfPrimitiveValues<string>("event", Event);
            writer.WriteCollectionOfPrimitiveValues<string>("event_source", EventSource);
            writer.WriteCollectionOfPrimitiveValues<string>("event_type", EventType);
            writer.WriteCollectionOfPrimitiveValues<string>("group_by", GroupBy);
            writer.WriteCollectionOfPrimitiveValues<string>("health_check_id", HealthCheckId);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_incident_impact>("incident_impact", IncidentImpact);
            writer.WriteCollectionOfPrimitiveValues<string>("input_id", InputId);
            writer.WriteCollectionOfPrimitiveValues<string>("insight_class", InsightClass);
            writer.WriteCollectionOfPrimitiveValues<string>("limit", Limit);
            writer.WriteCollectionOfPrimitiveValues<string>("logo_tag", LogoTag);
            writer.WriteCollectionOfPrimitiveValues<string>("megabits_per_second", MegabitsPerSecond);
            writer.WriteCollectionOfPrimitiveValues<string>("new_health", NewHealth);
            writer.WriteCollectionOfPrimitiveValues<string>("new_status", NewStatus);
            writer.WriteCollectionOfPrimitiveValues<string>("packets_per_second", PacketsPerSecond);
            writer.WriteCollectionOfPrimitiveValues<string>("pool_id", PoolId);
            writer.WriteCollectionOfPrimitiveValues<string>("pop_names", PopNames);
            writer.WriteCollectionOfPrimitiveValues<string>("product", Product);
            writer.WriteCollectionOfPrimitiveValues<string>("project_id", ProjectId);
            writer.WriteCollectionOfPrimitiveValues<string>("protocol", Protocol);
            writer.WriteCollectionOfPrimitiveValues<string>("query_tag", QueryTag);
            writer.WriteCollectionOfPrimitiveValues<string>("requests_per_second", RequestsPerSecond);
            writer.WriteCollectionOfPrimitiveValues<string>("selectors", Selectors);
            writer.WriteCollectionOfPrimitiveValues<string>("services", Services);
            writer.WriteCollectionOfPrimitiveValues<string>("slo", Slo);
            writer.WriteCollectionOfPrimitiveValues<string>("status", Status);
            writer.WriteCollectionOfPrimitiveValues<string>("target_hostname", TargetHostname);
            writer.WriteCollectionOfPrimitiveValues<string>("target_ip", TargetIp);
            writer.WriteCollectionOfPrimitiveValues<string>("target_zone_name", TargetZoneName);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_filters_traffic_exclusions>("traffic_exclusions", TrafficExclusions);
            writer.WriteCollectionOfPrimitiveValues<string>("tunnel_id", TunnelId);
            writer.WriteCollectionOfPrimitiveValues<string>("tunnel_name", TunnelName);
            writer.WriteCollectionOfPrimitiveValues<string>("where", Where);
            writer.WriteCollectionOfPrimitiveValues<string>("zones", Zones);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
