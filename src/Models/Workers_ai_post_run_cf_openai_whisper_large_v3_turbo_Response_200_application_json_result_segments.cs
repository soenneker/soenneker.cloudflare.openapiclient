// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The average log probability of the predictions for the words in this segment, indicating overall confidence.</summary>
        public double? AvgLogprob { get; set; }
        /// <summary>The compression ratio of the input to the output, measuring how much the text was compressed during the transcription process.</summary>
        public double? CompressionRatio { get; set; }
        /// <summary>The ending time of the segment within the audio, in seconds.</summary>
        public double? End { get; set; }
        /// <summary>The probability that the segment contains no speech, represented as a decimal between 0 and 1.</summary>
        public double? NoSpeechProb { get; set; }
        /// <summary>The starting time of the segment within the audio, in seconds.</summary>
        public double? Start { get; set; }
        /// <summary>The temperature used in the decoding process, controlling randomness in predictions. Lower values result in more deterministic outputs.</summary>
        public double? Temperature { get; set; }
        /// <summary>The transcription of the segment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>The words property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments_words>? Words { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments_words> Words { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments"/> and sets the default values.
        /// </summary>
        public Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "avg_logprob", n => { AvgLogprob = n.GetDoubleValue(); } },
                { "compression_ratio", n => { CompressionRatio = n.GetDoubleValue(); } },
                { "end", n => { End = n.GetDoubleValue(); } },
                { "no_speech_prob", n => { NoSpeechProb = n.GetDoubleValue(); } },
                { "start", n => { Start = n.GetDoubleValue(); } },
                { "temperature", n => { Temperature = n.GetDoubleValue(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "words", n => { Words = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments_words>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments_words.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("avg_logprob", AvgLogprob);
            writer.WriteDoubleValue("compression_ratio", CompressionRatio);
            writer.WriteDoubleValue("end", End);
            writer.WriteDoubleValue("no_speech_prob", NoSpeechProb);
            writer.WriteDoubleValue("start", Start);
            writer.WriteDoubleValue("temperature", Temperature);
            writer.WriteStringValue("text", Text);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_openai_whisper_large_v3_turbo_Response_200_application_json_result_segments_words>("words", Words);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
