// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Radar_get_bgp_routes_stats_Response_200_application_json_result_stats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The distinct_origins property</summary>
        public int? DistinctOrigins { get; set; }
        /// <summary>The distinct_origins_ipv4 property</summary>
        public int? DistinctOriginsIpv4 { get; set; }
        /// <summary>The distinct_origins_ipv6 property</summary>
        public int? DistinctOriginsIpv6 { get; set; }
        /// <summary>The distinct_prefixes property</summary>
        public int? DistinctPrefixes { get; set; }
        /// <summary>The distinct_prefixes_ipv4 property</summary>
        public int? DistinctPrefixesIpv4 { get; set; }
        /// <summary>The distinct_prefixes_ipv6 property</summary>
        public int? DistinctPrefixesIpv6 { get; set; }
        /// <summary>The routes_invalid property</summary>
        public int? RoutesInvalid { get; set; }
        /// <summary>The routes_invalid_ipv4 property</summary>
        public int? RoutesInvalidIpv4 { get; set; }
        /// <summary>The routes_invalid_ipv6 property</summary>
        public int? RoutesInvalidIpv6 { get; set; }
        /// <summary>The routes_total property</summary>
        public int? RoutesTotal { get; set; }
        /// <summary>The routes_total_ipv4 property</summary>
        public int? RoutesTotalIpv4 { get; set; }
        /// <summary>The routes_total_ipv6 property</summary>
        public int? RoutesTotalIpv6 { get; set; }
        /// <summary>The routes_unknown property</summary>
        public int? RoutesUnknown { get; set; }
        /// <summary>The routes_unknown_ipv4 property</summary>
        public int? RoutesUnknownIpv4 { get; set; }
        /// <summary>The routes_unknown_ipv6 property</summary>
        public int? RoutesUnknownIpv6 { get; set; }
        /// <summary>The routes_valid property</summary>
        public int? RoutesValid { get; set; }
        /// <summary>The routes_valid_ipv4 property</summary>
        public int? RoutesValidIpv4 { get; set; }
        /// <summary>The routes_valid_ipv6 property</summary>
        public int? RoutesValidIpv6 { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_bgp_routes_stats_Response_200_application_json_result_stats"/> and sets the default values.
        /// </summary>
        public Radar_get_bgp_routes_stats_Response_200_application_json_result_stats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_bgp_routes_stats_Response_200_application_json_result_stats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_bgp_routes_stats_Response_200_application_json_result_stats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_bgp_routes_stats_Response_200_application_json_result_stats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "distinct_origins", n => { DistinctOrigins = n.GetIntValue(); } },
                { "distinct_origins_ipv4", n => { DistinctOriginsIpv4 = n.GetIntValue(); } },
                { "distinct_origins_ipv6", n => { DistinctOriginsIpv6 = n.GetIntValue(); } },
                { "distinct_prefixes", n => { DistinctPrefixes = n.GetIntValue(); } },
                { "distinct_prefixes_ipv4", n => { DistinctPrefixesIpv4 = n.GetIntValue(); } },
                { "distinct_prefixes_ipv6", n => { DistinctPrefixesIpv6 = n.GetIntValue(); } },
                { "routes_invalid", n => { RoutesInvalid = n.GetIntValue(); } },
                { "routes_invalid_ipv4", n => { RoutesInvalidIpv4 = n.GetIntValue(); } },
                { "routes_invalid_ipv6", n => { RoutesInvalidIpv6 = n.GetIntValue(); } },
                { "routes_total", n => { RoutesTotal = n.GetIntValue(); } },
                { "routes_total_ipv4", n => { RoutesTotalIpv4 = n.GetIntValue(); } },
                { "routes_total_ipv6", n => { RoutesTotalIpv6 = n.GetIntValue(); } },
                { "routes_unknown", n => { RoutesUnknown = n.GetIntValue(); } },
                { "routes_unknown_ipv4", n => { RoutesUnknownIpv4 = n.GetIntValue(); } },
                { "routes_unknown_ipv6", n => { RoutesUnknownIpv6 = n.GetIntValue(); } },
                { "routes_valid", n => { RoutesValid = n.GetIntValue(); } },
                { "routes_valid_ipv4", n => { RoutesValidIpv4 = n.GetIntValue(); } },
                { "routes_valid_ipv6", n => { RoutesValidIpv6 = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("distinct_origins", DistinctOrigins);
            writer.WriteIntValue("distinct_origins_ipv4", DistinctOriginsIpv4);
            writer.WriteIntValue("distinct_origins_ipv6", DistinctOriginsIpv6);
            writer.WriteIntValue("distinct_prefixes", DistinctPrefixes);
            writer.WriteIntValue("distinct_prefixes_ipv4", DistinctPrefixesIpv4);
            writer.WriteIntValue("distinct_prefixes_ipv6", DistinctPrefixesIpv6);
            writer.WriteIntValue("routes_invalid", RoutesInvalid);
            writer.WriteIntValue("routes_invalid_ipv4", RoutesInvalidIpv4);
            writer.WriteIntValue("routes_invalid_ipv6", RoutesInvalidIpv6);
            writer.WriteIntValue("routes_total", RoutesTotal);
            writer.WriteIntValue("routes_total_ipv4", RoutesTotalIpv4);
            writer.WriteIntValue("routes_total_ipv6", RoutesTotalIpv6);
            writer.WriteIntValue("routes_unknown", RoutesUnknown);
            writer.WriteIntValue("routes_unknown_ipv4", RoutesUnknownIpv4);
            writer.WriteIntValue("routes_unknown_ipv6", RoutesUnknownIpv6);
            writer.WriteIntValue("routes_valid", RoutesValid);
            writer.WriteIntValue("routes_valid_ipv4", RoutesValidIpv4);
            writer.WriteIntValue("routes_valid_ipv6", RoutesValidIpv6);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
