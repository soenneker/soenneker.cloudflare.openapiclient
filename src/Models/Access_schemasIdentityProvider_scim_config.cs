// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Access_schemasIdentityProvider_scim_config : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A flag to enable or disable SCIM for the identity provider.</summary>
        public bool? Enabled { get; set; }
        /// <summary>Indicates how a SCIM event updates a user identity used for policy evaluation. Use &quot;automatic&quot; to automatically update a user&apos;s identity and augment it with fields from the SCIM user resource. Use &quot;reauth&quot; to force re-authentication on group membership updates, user identity update will only occur after successful re-authentication. With &quot;reauth&quot; identities will not contain fields from the SCIM user resource. With &quot;no_action&quot; identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config_identity_update_behavior? IdentityUpdateBehavior { get; set; }
        /// <summary>The base URL of Cloudflare&apos;s SCIM V2.0 API endpoint.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScimBaseUrl { get; private set; }
#nullable restore
#else
        public string ScimBaseUrl { get; private set; }
#endif
        /// <summary>A flag to remove a user&apos;s seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.</summary>
        public bool? SeatDeprovision { get; set; }
        /// <summary>A read-only token generated when the SCIM integration is enabled for the first time.  It is redacted on subsequent requests. If you lose this you will need to refresh it at /access/identity_providers/:idpID/refresh_scim_secret.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Secret { get; private set; }
#nullable restore
#else
        public string Secret { get; private set; }
#endif
        /// <summary>A flag to enable revoking a user&apos;s session in Access and Gateway when they have been deprovisioned in the Identity Provider.</summary>
        public bool? UserDeprovision { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config"/> and sets the default values.
        /// </summary>
        public Access_schemasIdentityProvider_scim_config()
        {
            AdditionalData = new Dictionary<string, object>();
            IdentityUpdateBehavior = global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config_identity_update_behavior.No_action;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "identity_update_behavior", n => { IdentityUpdateBehavior = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config_identity_update_behavior>(); } },
                { "scim_base_url", n => { ScimBaseUrl = n.GetStringValue(); } },
                { "seat_deprovision", n => { SeatDeprovision = n.GetBoolValue(); } },
                { "secret", n => { Secret = n.GetStringValue(); } },
                { "user_deprovision", n => { UserDeprovision = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_schemasIdentityProvider_scim_config_identity_update_behavior>("identity_update_behavior", IdentityUpdateBehavior);
            writer.WriteBoolValue("seat_deprovision", SeatDeprovision);
            writer.WriteBoolValue("user_deprovision", UserDeprovision);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
