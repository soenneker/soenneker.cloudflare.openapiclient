// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EmailSecurity_CreateAllowPolicy : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The comments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comments { get; set; }
#nullable restore
#else
        public string Comments { get; set; }
#endif
        /// <summary>Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.Note: This will not exempt messages with Malicious or Suspicious dispositions.</summary>
        public bool? IsAcceptableSender { get; set; }
        /// <summary>Messages to this recipient will bypass all detections.</summary>
        public bool? IsExemptRecipient { get; set; }
        /// <summary>The is_recipient property</summary>
        [Obsolete("")]
        public bool? IsRecipient { get; set; }
        /// <summary>The is_regex property</summary>
        public bool? IsRegex { get; set; }
        /// <summary>The is_sender property</summary>
        [Obsolete("")]
        public bool? IsSender { get; set; }
        /// <summary>The is_spoof property</summary>
        [Obsolete("")]
        public bool? IsSpoof { get; set; }
        /// <summary>Messages from this sender will bypass all detections and link following.</summary>
        public bool? IsTrustedSender { get; set; }
        /// <summary>The pattern property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Pattern { get; set; }
#nullable restore
#else
        public string Pattern { get; set; }
#endif
        /// <summary>The pattern_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_PatternType? PatternType { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_PatternType PatternType { get; set; }
#endif
        /// <summary>Enforce DMARC, SPF or DKIM authentication.When on, Email Security only honors policies that pass authentication.</summary>
        public bool? VerifySender { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_CreateAllowPolicy"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_CreateAllowPolicy CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_CreateAllowPolicy();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "comments", n => { Comments = n.GetStringValue(); } },
                { "is_acceptable_sender", n => { IsAcceptableSender = n.GetBoolValue(); } },
                { "is_exempt_recipient", n => { IsExemptRecipient = n.GetBoolValue(); } },
                { "is_recipient", n => { IsRecipient = n.GetBoolValue(); } },
                { "is_regex", n => { IsRegex = n.GetBoolValue(); } },
                { "is_sender", n => { IsSender = n.GetBoolValue(); } },
                { "is_spoof", n => { IsSpoof = n.GetBoolValue(); } },
                { "is_trusted_sender", n => { IsTrustedSender = n.GetBoolValue(); } },
                { "pattern", n => { Pattern = n.GetStringValue(); } },
                { "pattern_type", n => { PatternType = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_PatternType>(global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_PatternType.CreateFromDiscriminatorValue); } },
                { "verify_sender", n => { VerifySender = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("comments", Comments);
            writer.WriteBoolValue("is_acceptable_sender", IsAcceptableSender);
            writer.WriteBoolValue("is_exempt_recipient", IsExemptRecipient);
            writer.WriteBoolValue("is_recipient", IsRecipient);
            writer.WriteBoolValue("is_regex", IsRegex);
            writer.WriteBoolValue("is_sender", IsSender);
            writer.WriteBoolValue("is_spoof", IsSpoof);
            writer.WriteBoolValue("is_trusted_sender", IsTrustedSender);
            writer.WriteStringValue("pattern", Pattern);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.EmailSecurity_PatternType>("pattern_type", PatternType);
            writer.WriteBoolValue("verify_sender", VerifySender);
        }
    }
}
#pragma warning restore CS0618
