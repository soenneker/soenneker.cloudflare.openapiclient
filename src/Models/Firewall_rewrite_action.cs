// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Specifies that, when a WAF rule matches, its configured action will be replaced by the action configured in this object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Firewall_rewrite_action : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The WAF rule action to apply.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action? Block { get; set; }
        /// <summary>The WAF rule action to apply.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action? Challenge { get; set; }
        /// <summary>The WAF rule action to apply.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action? Default { get; set; }
        /// <summary>The WAF rule action to apply.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action? Disable { get; set; }
        /// <summary>The WAF rule action to apply.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action? Simulate { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_rewrite_action"/> and sets the default values.
        /// </summary>
        public Firewall_rewrite_action()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_rewrite_action"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_rewrite_action CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_rewrite_action();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "block", n => { Block = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>(); } },
                { "challenge", n => { Challenge = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>(); } },
                { "default", n => { Default = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>(); } },
                { "disable", n => { Disable = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>(); } },
                { "simulate", n => { Simulate = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>("block", Block);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>("challenge", Challenge);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>("default", Default);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>("disable", Disable);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Firewall_waf_rewrite_action>("simulate", Simulate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
