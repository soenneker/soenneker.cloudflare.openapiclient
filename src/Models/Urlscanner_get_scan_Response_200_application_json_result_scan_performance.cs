// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Urlscanner_get_scan_Response_200_application_json_result_scan_performance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The connectEnd property</summary>
        public double? ConnectEnd { get; set; }
        /// <summary>The connectStart property</summary>
        public double? ConnectStart { get; set; }
        /// <summary>The decodedBodySize property</summary>
        public double? DecodedBodySize { get; set; }
        /// <summary>The domainLookupEnd property</summary>
        public double? DomainLookupEnd { get; set; }
        /// <summary>The domainLookupStart property</summary>
        public double? DomainLookupStart { get; set; }
        /// <summary>The domComplete property</summary>
        public double? DomComplete { get; set; }
        /// <summary>The domContentLoadedEventEnd property</summary>
        public double? DomContentLoadedEventEnd { get; set; }
        /// <summary>The domContentLoadedEventStart property</summary>
        public double? DomContentLoadedEventStart { get; set; }
        /// <summary>The domInteractive property</summary>
        public double? DomInteractive { get; set; }
        /// <summary>The duration property</summary>
        public double? Duration { get; set; }
        /// <summary>The encodedBodySize property</summary>
        public double? EncodedBodySize { get; set; }
        /// <summary>The entryType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntryType { get; set; }
#nullable restore
#else
        public string EntryType { get; set; }
#endif
        /// <summary>The fetchStart property</summary>
        public double? FetchStart { get; set; }
        /// <summary>The initiatorType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InitiatorType { get; set; }
#nullable restore
#else
        public string InitiatorType { get; set; }
#endif
        /// <summary>The loadEventEnd property</summary>
        public double? LoadEventEnd { get; set; }
        /// <summary>The loadEventStart property</summary>
        public double? LoadEventStart { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The nextHopProtocol property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NextHopProtocol { get; set; }
#nullable restore
#else
        public string NextHopProtocol { get; set; }
#endif
        /// <summary>The redirectCount property</summary>
        public double? RedirectCount { get; set; }
        /// <summary>The redirectEnd property</summary>
        public double? RedirectEnd { get; set; }
        /// <summary>The redirectStart property</summary>
        public double? RedirectStart { get; set; }
        /// <summary>The requestStart property</summary>
        public double? RequestStart { get; set; }
        /// <summary>The responseEnd property</summary>
        public double? ResponseEnd { get; set; }
        /// <summary>The responseStart property</summary>
        public double? ResponseStart { get; set; }
        /// <summary>The secureConnectionStart property</summary>
        public double? SecureConnectionStart { get; set; }
        /// <summary>The startTime property</summary>
        public double? StartTime { get; set; }
        /// <summary>The transferSize property</summary>
        public double? TransferSize { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The unloadEventEnd property</summary>
        public double? UnloadEventEnd { get; set; }
        /// <summary>The unloadEventStart property</summary>
        public double? UnloadEventStart { get; set; }
        /// <summary>The workerStart property</summary>
        public double? WorkerStart { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance"/> and sets the default values.
        /// </summary>
        public Urlscanner_get_scan_Response_200_application_json_result_scan_performance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_Response_200_application_json_result_scan_performance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "connectEnd", n => { ConnectEnd = n.GetDoubleValue(); } },
                { "connectStart", n => { ConnectStart = n.GetDoubleValue(); } },
                { "decodedBodySize", n => { DecodedBodySize = n.GetDoubleValue(); } },
                { "domComplete", n => { DomComplete = n.GetDoubleValue(); } },
                { "domContentLoadedEventEnd", n => { DomContentLoadedEventEnd = n.GetDoubleValue(); } },
                { "domContentLoadedEventStart", n => { DomContentLoadedEventStart = n.GetDoubleValue(); } },
                { "domInteractive", n => { DomInteractive = n.GetDoubleValue(); } },
                { "domainLookupEnd", n => { DomainLookupEnd = n.GetDoubleValue(); } },
                { "domainLookupStart", n => { DomainLookupStart = n.GetDoubleValue(); } },
                { "duration", n => { Duration = n.GetDoubleValue(); } },
                { "encodedBodySize", n => { EncodedBodySize = n.GetDoubleValue(); } },
                { "entryType", n => { EntryType = n.GetStringValue(); } },
                { "fetchStart", n => { FetchStart = n.GetDoubleValue(); } },
                { "initiatorType", n => { InitiatorType = n.GetStringValue(); } },
                { "loadEventEnd", n => { LoadEventEnd = n.GetDoubleValue(); } },
                { "loadEventStart", n => { LoadEventStart = n.GetDoubleValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "nextHopProtocol", n => { NextHopProtocol = n.GetStringValue(); } },
                { "redirectCount", n => { RedirectCount = n.GetDoubleValue(); } },
                { "redirectEnd", n => { RedirectEnd = n.GetDoubleValue(); } },
                { "redirectStart", n => { RedirectStart = n.GetDoubleValue(); } },
                { "requestStart", n => { RequestStart = n.GetDoubleValue(); } },
                { "responseEnd", n => { ResponseEnd = n.GetDoubleValue(); } },
                { "responseStart", n => { ResponseStart = n.GetDoubleValue(); } },
                { "secureConnectionStart", n => { SecureConnectionStart = n.GetDoubleValue(); } },
                { "startTime", n => { StartTime = n.GetDoubleValue(); } },
                { "transferSize", n => { TransferSize = n.GetDoubleValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "unloadEventEnd", n => { UnloadEventEnd = n.GetDoubleValue(); } },
                { "unloadEventStart", n => { UnloadEventStart = n.GetDoubleValue(); } },
                { "workerStart", n => { WorkerStart = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("connectEnd", ConnectEnd);
            writer.WriteDoubleValue("connectStart", ConnectStart);
            writer.WriteDoubleValue("decodedBodySize", DecodedBodySize);
            writer.WriteDoubleValue("domainLookupEnd", DomainLookupEnd);
            writer.WriteDoubleValue("domainLookupStart", DomainLookupStart);
            writer.WriteDoubleValue("domComplete", DomComplete);
            writer.WriteDoubleValue("domContentLoadedEventEnd", DomContentLoadedEventEnd);
            writer.WriteDoubleValue("domContentLoadedEventStart", DomContentLoadedEventStart);
            writer.WriteDoubleValue("domInteractive", DomInteractive);
            writer.WriteDoubleValue("duration", Duration);
            writer.WriteDoubleValue("encodedBodySize", EncodedBodySize);
            writer.WriteStringValue("entryType", EntryType);
            writer.WriteDoubleValue("fetchStart", FetchStart);
            writer.WriteStringValue("initiatorType", InitiatorType);
            writer.WriteDoubleValue("loadEventEnd", LoadEventEnd);
            writer.WriteDoubleValue("loadEventStart", LoadEventStart);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("nextHopProtocol", NextHopProtocol);
            writer.WriteDoubleValue("redirectCount", RedirectCount);
            writer.WriteDoubleValue("redirectEnd", RedirectEnd);
            writer.WriteDoubleValue("redirectStart", RedirectStart);
            writer.WriteDoubleValue("requestStart", RequestStart);
            writer.WriteDoubleValue("responseEnd", ResponseEnd);
            writer.WriteDoubleValue("responseStart", ResponseStart);
            writer.WriteDoubleValue("secureConnectionStart", SecureConnectionStart);
            writer.WriteDoubleValue("startTime", StartTime);
            writer.WriteDoubleValue("transferSize", TransferSize);
            writer.WriteStringValue("type", Type);
            writer.WriteDoubleValue("unloadEventEnd", UnloadEventEnd);
            writer.WriteDoubleValue("unloadEventStart", UnloadEventStart);
            writer.WriteDoubleValue("workerStart", WorkerStart);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
