// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Vectorize_index_info_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Specifies the number of dimensions for the index</summary>
        public int? Dimensions { get; set; }
        /// <summary>Specifies the timestamp the last mutation batch was processed as an ISO8601 string.</summary>
        public DateTimeOffset? ProcessedUpToDatetime { get; private set; }
        /// <summary>The unique identifier for the async mutation operation containing the changeset.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_mutation_uuid? ProcessedUpToMutation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_mutation_uuid ProcessedUpToMutation { get; set; }
#endif
        /// <summary>Specifies the number of vectors present in the index</summary>
        public int? VectorCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_info_response"/> and sets the default values.
        /// </summary>
        public Vectorize_index_info_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_info_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_info_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_info_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dimensions", n => { Dimensions = n.GetIntValue(); } },
                { "processedUpToDatetime", n => { ProcessedUpToDatetime = n.GetDateTimeOffsetValue(); } },
                { "processedUpToMutation", n => { ProcessedUpToMutation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_mutation_uuid>(global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_mutation_uuid.CreateFromDiscriminatorValue); } },
                { "vectorCount", n => { VectorCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("dimensions", Dimensions);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_mutation_uuid>("processedUpToMutation", ProcessedUpToMutation);
            writer.WriteIntValue("vectorCount", VectorCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
