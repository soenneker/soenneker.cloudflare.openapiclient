// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Configure logging settings for each rule type.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Configure logging settings for DNS firewall.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_dns? Dns { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_dns Dns { get; set; }
#endif
        /// <summary>Configure logging settings for HTTP/HTTPS firewall.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_http? Http { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_http Http { get; set; }
#endif
        /// <summary>Configure logging settings for Network firewall.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_l4? L4 { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_l4 L4 { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type"/> and sets the default values.
        /// </summary>
        public Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dns", n => { Dns = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_dns>(global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_dns.CreateFromDiscriminatorValue); } },
                { "http", n => { Http = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_http>(global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_http.CreateFromDiscriminatorValue); } },
                { "l4", n => { L4 = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_l4>(global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_l4.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_dns>("dns", Dns);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_http>("http", Http);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_gateway_gateway_account_logging_settings_settings_by_rule_type_l4>("l4", L4);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
