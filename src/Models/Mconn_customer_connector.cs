// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Mconn_customer_connector : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activated property</summary>
        public bool? Activated { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The device property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_device? Device { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_device Device { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_uuid? Id { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_uuid Id { get; set; }
#endif
        /// <summary>The interrupt_window_duration_hours property</summary>
        public double? InterruptWindowDurationHours { get; set; }
        /// <summary>The interrupt_window_hour_of_day property</summary>
        public double? InterruptWindowHourOfDay { get; set; }
        /// <summary>The last_heartbeat property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastHeartbeat { get; set; }
#nullable restore
#else
        public string LastHeartbeat { get; set; }
#endif
        /// <summary>The last_seen_version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeenVersion { get; set; }
#nullable restore
#else
        public string LastSeenVersion { get; set; }
#endif
        /// <summary>The last_updated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastUpdated { get; set; }
#nullable restore
#else
        public string LastUpdated { get; set; }
#endif
        /// <summary>The notes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>The timezone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_connector"/> and sets the default values.
        /// </summary>
        public Mconn_customer_connector()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_connector"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_connector CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_connector();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activated", n => { Activated = n.GetBoolValue(); } },
                { "device", n => { Device = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_device>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_device.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_uuid>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_uuid.CreateFromDiscriminatorValue); } },
                { "interrupt_window_duration_hours", n => { InterruptWindowDurationHours = n.GetDoubleValue(); } },
                { "interrupt_window_hour_of_day", n => { InterruptWindowHourOfDay = n.GetDoubleValue(); } },
                { "last_heartbeat", n => { LastHeartbeat = n.GetStringValue(); } },
                { "last_seen_version", n => { LastSeenVersion = n.GetStringValue(); } },
                { "last_updated", n => { LastUpdated = n.GetStringValue(); } },
                { "notes", n => { Notes = n.GetStringValue(); } },
                { "timezone", n => { Timezone = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("activated", Activated);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_customer_device>("device", Device);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mconn_uuid>("id", Id);
            writer.WriteDoubleValue("interrupt_window_duration_hours", InterruptWindowDurationHours);
            writer.WriteDoubleValue("interrupt_window_hour_of_day", InterruptWindowHourOfDay);
            writer.WriteStringValue("last_heartbeat", LastHeartbeat);
            writer.WriteStringValue("last_seen_version", LastSeenVersion);
            writer.WriteStringValue("last_updated", LastUpdated);
            writer.WriteStringValue("notes", Notes);
            writer.WriteStringValue("timezone", Timezone);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
