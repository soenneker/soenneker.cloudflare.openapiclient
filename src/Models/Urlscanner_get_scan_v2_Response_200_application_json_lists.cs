// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Urlscanner_get_scan_v2_Response_200_application_json_lists : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The asns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Asns { get; set; }
#nullable restore
#else
        public List<string> Asns { get; set; }
#endif
        /// <summary>The certificates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists_certificates>? Certificates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists_certificates> Certificates { get; set; }
#endif
        /// <summary>The continents property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Continents { get; set; }
#nullable restore
#else
        public List<string> Continents { get; set; }
#endif
        /// <summary>The countries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Countries { get; set; }
#nullable restore
#else
        public List<string> Countries { get; set; }
#endif
        /// <summary>The domains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Domains { get; set; }
#nullable restore
#else
        public List<string> Domains { get; set; }
#endif
        /// <summary>The hashes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Hashes { get; set; }
#nullable restore
#else
        public List<string> Hashes { get; set; }
#endif
        /// <summary>The ips property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Ips { get; set; }
#nullable restore
#else
        public List<string> Ips { get; set; }
#endif
        /// <summary>The linkDomains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LinkDomains { get; set; }
#nullable restore
#else
        public List<string> LinkDomains { get; set; }
#endif
        /// <summary>The servers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Servers { get; set; }
#nullable restore
#else
        public List<string> Servers { get; set; }
#endif
        /// <summary>The urls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Urls { get; set; }
#nullable restore
#else
        public List<string> Urls { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists"/> and sets the default values.
        /// </summary>
        public Urlscanner_get_scan_v2_Response_200_application_json_lists()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "asns", n => { Asns = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "certificates", n => { Certificates = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists_certificates>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists_certificates.CreateFromDiscriminatorValue)?.AsList(); } },
                { "continents", n => { Continents = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "countries", n => { Countries = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "domains", n => { Domains = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "hashes", n => { Hashes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ips", n => { Ips = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "linkDomains", n => { LinkDomains = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "servers", n => { Servers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "urls", n => { Urls = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("asns", Asns);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_Response_200_application_json_lists_certificates>("certificates", Certificates);
            writer.WriteCollectionOfPrimitiveValues<string>("continents", Continents);
            writer.WriteCollectionOfPrimitiveValues<string>("countries", Countries);
            writer.WriteCollectionOfPrimitiveValues<string>("domains", Domains);
            writer.WriteCollectionOfPrimitiveValues<string>("hashes", Hashes);
            writer.WriteCollectionOfPrimitiveValues<string>("ips", Ips);
            writer.WriteCollectionOfPrimitiveValues<string>("linkDomains", LinkDomains);
            writer.WriteCollectionOfPrimitiveValues<string>("servers", Servers);
            writer.WriteCollectionOfPrimitiveValues<string>("urls", Urls);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
