// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Dlp_EntryOfNewProfile : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry? DlpNewCustomEntry { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry DlpNewCustomEntry { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry? DlpNewWordListEntry { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry DlpNewWordListEntry { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_EntryOfNewProfile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_EntryOfNewProfile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_EntryOfNewProfile();
            if("dlp_NewCustomEntry".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DlpNewCustomEntry = new global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry();
            }
            else if("dlp_NewWordListEntry".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DlpNewWordListEntry = new global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(DlpNewCustomEntry != null)
            {
                return DlpNewCustomEntry.GetFieldDeserializers();
            }
            else if(DlpNewWordListEntry != null)
            {
                return DlpNewWordListEntry.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(DlpNewCustomEntry != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewCustomEntry>(null, DlpNewCustomEntry);
            }
            else if(DlpNewWordListEntry != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_NewWordListEntry>(null, DlpNewWordListEntry);
            }
        }
    }
}
#pragma warning restore CS0618
