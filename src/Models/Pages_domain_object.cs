// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Pages_domain_object : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The certificate_authority property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_certificate_authority? CertificateAuthority { get; private set; }
        /// <summary>The created_on property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedOn { get; private set; }
#nullable restore
#else
        public string CreatedOn { get; private set; }
#endif
        /// <summary>The domain_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DomainId { get; private set; }
#nullable restore
#else
        public string DomainId { get; private set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_status? Status { get; private set; }
        /// <summary>The validation_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_validation_data? ValidationData { get; private set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_validation_data ValidationData { get; private set; }
#endif
        /// <summary>The verification_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_verification_data? VerificationData { get; private set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_verification_data VerificationData { get; private set; }
#endif
        /// <summary>The zone_tag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ZoneTag { get; private set; }
#nullable restore
#else
        public string ZoneTag { get; private set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object"/> and sets the default values.
        /// </summary>
        public Pages_domain_object()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "certificate_authority", n => { CertificateAuthority = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_certificate_authority>(); } },
                { "created_on", n => { CreatedOn = n.GetStringValue(); } },
                { "domain_id", n => { DomainId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_status>(); } },
                { "validation_data", n => { ValidationData = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_validation_data>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_validation_data.CreateFromDiscriminatorValue); } },
                { "verification_data", n => { VerificationData = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_verification_data>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_domain_object_verification_data.CreateFromDiscriminatorValue); } },
                { "zone_tag", n => { ZoneTag = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("name", Name);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
