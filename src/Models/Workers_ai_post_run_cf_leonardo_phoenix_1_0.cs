// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Workers_ai_post_run_cf_leonardo_phoenix_1_0 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Controls how closely the generated image should adhere to the prompt; higher values make the image more aligned with the prompt</summary>
        public double? Guidance { get; set; }
        /// <summary>The height of the generated image in pixels</summary>
        public int? Height { get; set; }
        /// <summary>Specify what to exclude from the generated images</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NegativePrompt { get; set; }
#nullable restore
#else
        public string NegativePrompt { get; set; }
#endif
        /// <summary>The number of diffusion steps; higher values can improve quality but take longer</summary>
        public int? NumSteps { get; set; }
        /// <summary>A text description of the image you want to generate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Prompt { get; set; }
#nullable restore
#else
        public string Prompt { get; set; }
#endif
        /// <summary>Random seed for reproducibility of the image generation</summary>
        public int? Seed { get; set; }
        /// <summary>The width of the generated image in pixels</summary>
        public int? Width { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_leonardo_phoenix_1_0"/> and sets the default values.
        /// </summary>
        public Workers_ai_post_run_cf_leonardo_phoenix_1_0()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_leonardo_phoenix_1_0"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_leonardo_phoenix_1_0 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ai_post_run_cf_leonardo_phoenix_1_0();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "guidance", n => { Guidance = n.GetDoubleValue(); } },
                { "height", n => { Height = n.GetIntValue(); } },
                { "negative_prompt", n => { NegativePrompt = n.GetStringValue(); } },
                { "num_steps", n => { NumSteps = n.GetIntValue(); } },
                { "prompt", n => { Prompt = n.GetStringValue(); } },
                { "seed", n => { Seed = n.GetIntValue(); } },
                { "width", n => { Width = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("guidance", Guidance);
            writer.WriteIntValue("height", Height);
            writer.WriteStringValue("negative_prompt", NegativePrompt);
            writer.WriteIntValue("num_steps", NumSteps);
            writer.WriteStringValue("prompt", Prompt);
            writer.WriteIntValue("seed", Seed);
            writer.WriteIntValue("width", Width);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
