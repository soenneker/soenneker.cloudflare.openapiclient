// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Rulesets_SetConfigRule_action_parameters : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Turn on or off Automatic HTTPS Rewrites.</summary>
        public bool? AutomaticHttpsRewrites { get; set; }
        /// <summary>Select which file extensions to minify automatically.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_autominify? Autominify { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_autominify Autominify { get; set; }
#endif
        /// <summary>Turn on or off Browser Integrity Check.</summary>
        public bool? Bic { get; set; }
        /// <summary>Turn off all active Cloudflare Apps.</summary>
        public bool? DisableApps { get; set; }
        /// <summary>Turn off Real User Monitoring (RUM).</summary>
        public bool? DisableRum { get; set; }
        /// <summary>Turn off Zaraz.</summary>
        public bool? DisableZaraz { get; set; }
        /// <summary>Turn on or off Email Obfuscation.</summary>
        public bool? EmailObfuscation { get; set; }
        /// <summary>Turn on or off Cloudflare Fonts.</summary>
        public bool? Fonts { get; set; }
        /// <summary>Turn on or off the Hotlink Protection.</summary>
        public bool? HotlinkProtection { get; set; }
        /// <summary>Turn on or off Mirage.</summary>
        public bool? Mirage { get; set; }
        /// <summary>Turn on or off Opportunistic Encryption.</summary>
        public bool? OpportunisticEncryption { get; set; }
        /// <summary>Configure the Polish level.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_polish? Polish { get; set; }
        /// <summary>Turn on or off Rocket Loader.</summary>
        public bool? RocketLoader { get; set; }
        /// <summary>Configure the Security Level.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_security_level? SecurityLevel { get; set; }
        /// <summary>Turn on or off Server Side Excludes.</summary>
        public bool? ServerSideExcludes { get; set; }
        /// <summary>Configure the SSL level.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_ssl? Ssl { get; set; }
        /// <summary>Turn on or off Signed Exchanges (SXG).</summary>
        public bool? Sxg { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters"/> and sets the default values.
        /// </summary>
        public Rulesets_SetConfigRule_action_parameters()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "automatic_https_rewrites", n => { AutomaticHttpsRewrites = n.GetBoolValue(); } },
                { "autominify", n => { Autominify = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_autominify>(global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_autominify.CreateFromDiscriminatorValue); } },
                { "bic", n => { Bic = n.GetBoolValue(); } },
                { "disable_apps", n => { DisableApps = n.GetBoolValue(); } },
                { "disable_rum", n => { DisableRum = n.GetBoolValue(); } },
                { "disable_zaraz", n => { DisableZaraz = n.GetBoolValue(); } },
                { "email_obfuscation", n => { EmailObfuscation = n.GetBoolValue(); } },
                { "fonts", n => { Fonts = n.GetBoolValue(); } },
                { "hotlink_protection", n => { HotlinkProtection = n.GetBoolValue(); } },
                { "mirage", n => { Mirage = n.GetBoolValue(); } },
                { "opportunistic_encryption", n => { OpportunisticEncryption = n.GetBoolValue(); } },
                { "polish", n => { Polish = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_polish>(); } },
                { "rocket_loader", n => { RocketLoader = n.GetBoolValue(); } },
                { "security_level", n => { SecurityLevel = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_security_level>(); } },
                { "server_side_excludes", n => { ServerSideExcludes = n.GetBoolValue(); } },
                { "ssl", n => { Ssl = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_ssl>(); } },
                { "sxg", n => { Sxg = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("automatic_https_rewrites", AutomaticHttpsRewrites);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_autominify>("autominify", Autominify);
            writer.WriteBoolValue("bic", Bic);
            writer.WriteBoolValue("disable_apps", DisableApps);
            writer.WriteBoolValue("disable_rum", DisableRum);
            writer.WriteBoolValue("disable_zaraz", DisableZaraz);
            writer.WriteBoolValue("email_obfuscation", EmailObfuscation);
            writer.WriteBoolValue("fonts", Fonts);
            writer.WriteBoolValue("hotlink_protection", HotlinkProtection);
            writer.WriteBoolValue("mirage", Mirage);
            writer.WriteBoolValue("opportunistic_encryption", OpportunisticEncryption);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_polish>("polish", Polish);
            writer.WriteBoolValue("rocket_loader", RocketLoader);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_security_level>("security_level", SecurityLevel);
            writer.WriteBoolValue("server_side_excludes", ServerSideExcludes);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rulesets_SetConfigRule_action_parameters_ssl>("ssl", Ssl);
            writer.WriteBoolValue("sxg", Sxg);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
