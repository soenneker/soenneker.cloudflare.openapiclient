// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Urlscanner_get_scan_v2_200_stats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The domainStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_domainStats>? DomainStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_domainStats> DomainStats { get; set; }
#endif
        /// <summary>The ipStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_ipStats>? IpStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_ipStats> IpStats { get; set; }
#endif
        /// <summary>The IPv6Percentage property</summary>
        public double? IPv6Percentage { get; set; }
        /// <summary>The malicious property</summary>
        public double? Malicious { get; set; }
        /// <summary>The protocolStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_protocolStats>? ProtocolStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_protocolStats> ProtocolStats { get; set; }
#endif
        /// <summary>The resourceStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_resourceStats>? ResourceStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_resourceStats> ResourceStats { get; set; }
#endif
        /// <summary>The securePercentage property</summary>
        public double? SecurePercentage { get; set; }
        /// <summary>The secureRequests property</summary>
        public double? SecureRequests { get; set; }
        /// <summary>The serverStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_serverStats>? ServerStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_serverStats> ServerStats { get; set; }
#endif
        /// <summary>The tlsStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_tlsStats>? TlsStats { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_tlsStats> TlsStats { get; set; }
#endif
        /// <summary>The totalLinks property</summary>
        public double? TotalLinks { get; set; }
        /// <summary>The uniqASNs property</summary>
        public double? UniqASNs { get; set; }
        /// <summary>The uniqCountries property</summary>
        public double? UniqCountries { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats"/> and sets the default values.
        /// </summary>
        public Urlscanner_get_scan_v2_200_stats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "domainStats", n => { DomainStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_domainStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_domainStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "IPv6Percentage", n => { IPv6Percentage = n.GetDoubleValue(); } },
                { "ipStats", n => { IpStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_ipStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_ipStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "malicious", n => { Malicious = n.GetDoubleValue(); } },
                { "protocolStats", n => { ProtocolStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_protocolStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_protocolStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "resourceStats", n => { ResourceStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_resourceStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_resourceStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "securePercentage", n => { SecurePercentage = n.GetDoubleValue(); } },
                { "secureRequests", n => { SecureRequests = n.GetDoubleValue(); } },
                { "serverStats", n => { ServerStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_serverStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_serverStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tlsStats", n => { TlsStats = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_tlsStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_tlsStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "totalLinks", n => { TotalLinks = n.GetDoubleValue(); } },
                { "uniqASNs", n => { UniqASNs = n.GetDoubleValue(); } },
                { "uniqCountries", n => { UniqCountries = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_domainStats>("domainStats", DomainStats);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_ipStats>("ipStats", IpStats);
            writer.WriteDoubleValue("IPv6Percentage", IPv6Percentage);
            writer.WriteDoubleValue("malicious", Malicious);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_protocolStats>("protocolStats", ProtocolStats);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_resourceStats>("resourceStats", ResourceStats);
            writer.WriteDoubleValue("securePercentage", SecurePercentage);
            writer.WriteDoubleValue("secureRequests", SecureRequests);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_serverStats>("serverStats", ServerStats);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Urlscanner_get_scan_v2_200_stats_tlsStats>("tlsStats", TlsStats);
            writer.WriteDoubleValue("totalLinks", TotalLinks);
            writer.WriteDoubleValue("uniqASNs", UniqASNs);
            writer.WriteDoubleValue("uniqCountries", UniqCountries);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
