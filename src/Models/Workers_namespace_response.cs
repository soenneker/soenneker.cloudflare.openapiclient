// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Workers_namespace_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>When the script was created.</summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>Identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModifiedBy { get; set; }
#nullable restore
#else
        public string ModifiedBy { get; set; }
#endif
        /// <summary>When the script was last modified.</summary>
        public DateTimeOffset? ModifiedOn { get; set; }
        /// <summary>API Resource UUID tag.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NamespaceId { get; set; }
#nullable restore
#else
        public string NamespaceId { get; set; }
#endif
        /// <summary>Name of the Workers for Platforms dispatch namespace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NamespaceName { get; set; }
#nullable restore
#else
        public string NamespaceName { get; set; }
#endif
        /// <summary>The current number of scripts in this Dispatch Namespace.</summary>
        public int? ScriptCount { get; set; }
        /// <summary>Whether the Workers in the namespace are executed in a &quot;trusted&quot; manner. When a Worker is trusted, it has access to the shared caches for the zone in the Cache API, and has access to the `request.cf` object on incoming Requests. When a Worker is untrusted, caches are not shared across the zone, and `request.cf` is undefined. By default, Workers in a namespace are &quot;untrusted&quot;.</summary>
        public bool? TrustedWorkers { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_namespace_response"/> and sets the default values.
        /// </summary>
        public Workers_namespace_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_namespace_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_namespace_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_namespace_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_by", n => { CreatedBy = n.GetStringValue(); } },
                { "created_on", n => { CreatedOn = n.GetDateTimeOffsetValue(); } },
                { "modified_by", n => { ModifiedBy = n.GetStringValue(); } },
                { "modified_on", n => { ModifiedOn = n.GetDateTimeOffsetValue(); } },
                { "namespace_id", n => { NamespaceId = n.GetStringValue(); } },
                { "namespace_name", n => { NamespaceName = n.GetStringValue(); } },
                { "script_count", n => { ScriptCount = n.GetIntValue(); } },
                { "trusted_workers", n => { TrustedWorkers = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("created_by", CreatedBy);
            writer.WriteDateTimeOffsetValue("created_on", CreatedOn);
            writer.WriteStringValue("modified_by", ModifiedBy);
            writer.WriteDateTimeOffsetValue("modified_on", ModifiedOn);
            writer.WriteStringValue("namespace_id", NamespaceId);
            writer.WriteStringValue("namespace_name", NamespaceName);
            writer.WriteIntValue("script_count", ScriptCount);
            writer.WriteBoolValue("trusted_workers", TrustedWorkers);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
