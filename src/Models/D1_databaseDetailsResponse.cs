// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// The details of the D1 database.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class D1_databaseDetailsResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Specifies the timestamp the resource was created as an ISO8601 string.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The D1 database&apos;s size, in bytes.</summary>
        public double? FileSize { get; set; }
        /// <summary>D1 database name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The num_tables property</summary>
        public double? NumTables { get; set; }
        /// <summary>Configuration for D1 read replication.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.D1_readReplicationDetails? ReadReplication { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.D1_readReplicationDetails ReadReplication { get; set; }
#endif
        /// <summary>D1 database identifier (UUID).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>The version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.D1_databaseDetailsResponse"/> and sets the default values.
        /// </summary>
        public D1_databaseDetailsResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.D1_databaseDetailsResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.D1_databaseDetailsResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.D1_databaseDetailsResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "file_size", n => { FileSize = n.GetDoubleValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "num_tables", n => { NumTables = n.GetDoubleValue(); } },
                { "read_replication", n => { ReadReplication = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.D1_readReplicationDetails>(global::Soenneker.Cloudflare.OpenApiClient.Models.D1_readReplicationDetails.CreateFromDiscriminatorValue); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
                { "version", n => { Version = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDoubleValue("file_size", FileSize);
            writer.WriteStringValue("name", Name);
            writer.WriteDoubleValue("num_tables", NumTables);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.D1_readReplicationDetails>("read_replication", ReadReplication);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteStringValue("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
