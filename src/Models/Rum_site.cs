// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Rum_site : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.</summary>
        public bool? AutoInstall { get; set; }
        /// <summary>The created property</summary>
        public DateTimeOffset? Created { get; set; }
        /// <summary>A list of rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_rule>? Rules { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_rule> Rules { get; set; }
#endif
        /// <summary>The ruleset property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_ruleset? Ruleset { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_ruleset Ruleset { get; set; }
#endif
        /// <summary>The Web Analytics site identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SiteTag { get; set; }
#nullable restore
#else
        public string SiteTag { get; set; }
#endif
        /// <summary>The Web Analytics site token.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SiteToken { get; set; }
#nullable restore
#else
        public string SiteToken { get; set; }
#endif
        /// <summary>Encoded JavaScript snippet.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Snippet { get; set; }
#nullable restore
#else
        public string Snippet { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_site"/> and sets the default values.
        /// </summary>
        public Rum_site()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_site"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_site CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_site();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auto_install", n => { AutoInstall = n.GetBoolValue(); } },
                { "created", n => { Created = n.GetDateTimeOffsetValue(); } },
                { "rules", n => { Rules = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_rule>(global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_rule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ruleset", n => { Ruleset = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_ruleset>(global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_ruleset.CreateFromDiscriminatorValue); } },
                { "site_tag", n => { SiteTag = n.GetStringValue(); } },
                { "site_token", n => { SiteToken = n.GetStringValue(); } },
                { "snippet", n => { Snippet = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("auto_install", AutoInstall);
            writer.WriteDateTimeOffsetValue("created", Created);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_rule>("rules", Rules);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Rum_ruleset>("ruleset", Ruleset);
            writer.WriteStringValue("site_tag", SiteTag);
            writer.WriteStringValue("site_token", SiteToken);
            writer.WriteStringValue("snippet", Snippet);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
