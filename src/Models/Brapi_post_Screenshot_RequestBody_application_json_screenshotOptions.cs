// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Check [options](https://pptr.dev/api/puppeteer.screenshotoptions).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions : IParsable
    {
        /// <summary>The captureBeyondViewport property</summary>
        public bool? CaptureBeyondViewport { get; set; }
        /// <summary>The clip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_clip? Clip { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_clip Clip { get; set; }
#endif
        /// <summary>The encoding property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding? Encoding { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding Encoding { get; set; }
#endif
        /// <summary>The fromSurface property</summary>
        public bool? FromSurface { get; set; }
        /// <summary>The fullPage property</summary>
        public bool? FullPage { get; set; }
        /// <summary>The omitBackground property</summary>
        public bool? OmitBackground { get; set; }
        /// <summary>The optimizeForSpeed property</summary>
        public bool? OptimizeForSpeed { get; set; }
        /// <summary>The quality property</summary>
        public double? Quality { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type? Type { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions"/> and sets the default values.
        /// </summary>
        public Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions()
        {
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "captureBeyondViewport", n => { CaptureBeyondViewport = n.GetBoolValue(); } },
                { "clip", n => { Clip = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_clip>(global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_clip.CreateFromDiscriminatorValue); } },
                { "encoding", n => { Encoding = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding>(global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding.CreateFromDiscriminatorValue); } },
                { "fromSurface", n => { FromSurface = n.GetBoolValue(); } },
                { "fullPage", n => { FullPage = n.GetBoolValue(); } },
                { "omitBackground", n => { OmitBackground = n.GetBoolValue(); } },
                { "optimizeForSpeed", n => { OptimizeForSpeed = n.GetBoolValue(); } },
                { "quality", n => { Quality = n.GetDoubleValue(); } },
                { "type", n => { Type = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type>(global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("captureBeyondViewport", CaptureBeyondViewport);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_clip>("clip", Clip);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding>("encoding", Encoding);
            writer.WriteBoolValue("fromSurface", FromSurface);
            writer.WriteBoolValue("fullPage", FullPage);
            writer.WriteBoolValue("omitBackground", OmitBackground);
            writer.WriteBoolValue("optimizeForSpeed", OptimizeForSpeed);
            writer.WriteDoubleValue("quality", Quality);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type>("type", Type);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_encoding();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions.Brapi_post_Screenshot_RequestBody_application_json_screenshotOptions_type();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
