// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Abuse_reports_AbuseReport : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Creation date of report. Time in RFC 3339 format (https://www.rfc-editor.org/rfc/rfc3339.html)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cdate { get; set; }
#nullable restore
#else
        public string Cdate { get; set; }
#endif
        /// <summary>Domain that relates to the report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Domain { get; set; }
#nullable restore
#else
        public string Domain { get; set; }
#endif
        /// <summary>Public facing ID of abuse report, aka abuse_rand.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>A summary of the mitigations related to this report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport_mitigation_summary? MitigationSummary { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport_mitigation_summary MitigationSummary { get; set; }
#endif
        /// <summary>An enum value that represents the status of an abuse record</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportStatus? Status { get; set; }
        /// <summary>The abuse report type</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport"/> and sets the default values.
        /// </summary>
        public Abuse_reports_AbuseReport()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cdate", n => { Cdate = n.GetStringValue(); } },
                { "domain", n => { Domain = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "mitigation_summary", n => { MitigationSummary = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport_mitigation_summary>(global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport_mitigation_summary.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportStatus>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cdate", Cdate);
            writer.WriteStringValue("domain", Domain);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_AbuseReport_mitigation_summary>("mitigation_summary", MitigationSummary);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportStatus>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Abuse_reports_ReportType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
