// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Load_balancing_origin : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual_network_id must also be set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address { get; set; }
#nullable restore
#else
        public string Address { get; set; }
#endif
        /// <summary>This field shows up only if the origin is disabled. This field is set with the time the origin was disabled.</summary>
        public DateTimeOffset? DisabledAt { get; set; }
        /// <summary>Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.</summary>
        public bool? Enabled { get; set; }
        /// <summary>The request header is used to pass additional information with an HTTP request. Currently supported header is &apos;Host&apos;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_schemas_header? Header { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_schemas_header Header { get; set; }
#endif
        /// <summary>A human-identifiable name for the origin.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The port for upstream connections. A value of 0 means the default port for the protocol will be used.</summary>
        public int? Port { get; set; }
        /// <summary>The virtual network subnet ID the origin belongs in. Virtual network must also belong to the account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VirtualNetworkId { get; set; }
#nullable restore
#else
        public string VirtualNetworkId { get; set; }
#endif
        /// <summary>The weight of this origin relative to other origins in the pool. Based on the configured weight the total traffic is distributed among origins within the pool.- `origin_steering.policy=&quot;least_outstanding_requests&quot;`: Use weight to scale the origin&apos;s outstanding requests.- `origin_steering.policy=&quot;least_connections&quot;`: Use weight to scale the origin&apos;s open connections.</summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_origin"/> and sets the default values.
        /// </summary>
        public Load_balancing_origin()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_origin"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_origin CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_origin();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetStringValue(); } },
                { "disabled_at", n => { DisabledAt = n.GetDateTimeOffsetValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "header", n => { Header = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_schemas_header>(global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_schemas_header.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "port", n => { Port = n.GetIntValue(); } },
                { "virtual_network_id", n => { VirtualNetworkId = n.GetStringValue(); } },
                { "weight", n => { Weight = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("address", Address);
            writer.WriteDateTimeOffsetValue("disabled_at", DisabledAt);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Load_balancing_schemas_header>("header", Header);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("port", Port);
            writer.WriteStringValue("virtual_network_id", VirtualNetworkId);
            writer.WriteDoubleValue("weight", Weight);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
