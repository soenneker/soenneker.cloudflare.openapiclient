// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Access_policy_req : global::Soenneker.Cloudflare.OpenApiClient.Models.Access_base_policy_req, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Administrators who can approve a temporary authentication request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_group>? ApprovalGroups { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_group> ApprovalGroups { get; set; }
#endif
        /// <summary>Requires the user to request access from an administrator at the start of each session.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_required? ApprovalRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_required ApprovalRequired { get; set; }
#endif
        /// <summary>Require this application to be served in an isolated browser for users matching this policy. &apos;Client Web Isolation&apos; must be on for the account in order to use this feature.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_isolation_required? IsolationRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_isolation_required IsolationRequired { get; set; }
#endif
        /// <summary>A custom message that will appear on the purpose justification screen.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt? PurposeJustificationPrompt { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt PurposeJustificationPrompt { get; set; }
#endif
        /// <summary>Require users to enter a justification when they log in to the application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_required? PurposeJustificationRequired { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_required PurposeJustificationRequired { get; set; }
#endif
        /// <summary>The amount of time that tokens issued for the application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_componentsSchemasSession_duration? SessionDuration { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_componentsSchemasSession_duration SessionDuration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policy_req"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policy_req CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Access_policy_req();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "approval_groups", n => { ApprovalGroups = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_group>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_group.CreateFromDiscriminatorValue)?.AsList(); } },
                { "approval_required", n => { ApprovalRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_required.CreateFromDiscriminatorValue); } },
                { "isolation_required", n => { IsolationRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_isolation_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_isolation_required.CreateFromDiscriminatorValue); } },
                { "purpose_justification_prompt", n => { PurposeJustificationPrompt = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt.CreateFromDiscriminatorValue); } },
                { "purpose_justification_required", n => { PurposeJustificationRequired = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_required>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_required.CreateFromDiscriminatorValue); } },
                { "session_duration", n => { SessionDuration = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_componentsSchemasSession_duration>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_componentsSchemasSession_duration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_group>("approval_groups", ApprovalGroups);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_approval_required>("approval_required", ApprovalRequired);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_isolation_required>("isolation_required", IsolationRequired);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_prompt>("purpose_justification_prompt", PurposeJustificationPrompt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_purpose_justification_required>("purpose_justification_required", PurposeJustificationRequired);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_componentsSchemasSession_duration>("session_duration", SessionDuration);
        }
    }
}
#pragma warning restore CS0618
