// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Intel_phishing_url_info : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of categorizations applied to this submission.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_categorizations>? Categorizations { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_categorizations> Categorizations { get; set; }
#endif
        /// <summary>List of model results for completed scans.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_model_results>? ModelResults { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_model_results> ModelResults { get; set; }
#endif
        /// <summary>List of signatures that matched against site content found when crawling the URL.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_rule_matches>? RuleMatches { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_rule_matches> RuleMatches { get; set; }
#endif
        /// <summary>Status of the most recent scan found.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_scan_status? ScanStatus { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_scan_status ScanStatus { get; set; }
#endif
        /// <summary>For internal use.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScreenshotDownloadSignature { get; set; }
#nullable restore
#else
        public string ScreenshotDownloadSignature { get; set; }
#endif
        /// <summary>For internal use.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScreenshotPath { get; set; }
#nullable restore
#else
        public string ScreenshotPath { get; set; }
#endif
        /// <summary>URL that was submitted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info"/> and sets the default values.
        /// </summary>
        public Intel_phishing_url_info()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "categorizations", n => { Categorizations = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_categorizations>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_categorizations.CreateFromDiscriminatorValue)?.AsList(); } },
                { "model_results", n => { ModelResults = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_model_results>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_model_results.CreateFromDiscriminatorValue)?.AsList(); } },
                { "rule_matches", n => { RuleMatches = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_rule_matches>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_rule_matches.CreateFromDiscriminatorValue)?.AsList(); } },
                { "scan_status", n => { ScanStatus = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_scan_status>(global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_scan_status.CreateFromDiscriminatorValue); } },
                { "screenshot_download_signature", n => { ScreenshotDownloadSignature = n.GetStringValue(); } },
                { "screenshot_path", n => { ScreenshotPath = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_categorizations>("categorizations", Categorizations);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_model_results>("model_results", ModelResults);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_rule_matches>("rule_matches", RuleMatches);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Intel_phishing_url_info_scan_status>("scan_status", ScanStatus);
            writer.WriteStringValue("screenshot_download_signature", ScreenshotDownloadSignature);
            writer.WriteStringValue("screenshot_path", ScreenshotPath);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
