// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Pages_deployments : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A list of alias URLs pointing to this deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Aliases { get; private set; }
#nullable restore
#else
        public List<string> Aliases { get; private set; }
#endif
        /// <summary>Configs for the project build process.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_build_config? BuildConfig { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_build_config BuildConfig { get; set; }
#endif
        /// <summary>When the deployment was created.</summary>
        public DateTimeOffset? CreatedOn { get; private set; }
        /// <summary>Info about what caused the deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_deployment_trigger? DeploymentTrigger { get; private set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_deployment_trigger DeploymentTrigger { get; private set; }
#endif
        /// <summary>Type of deploy.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_environment? Environment { get; private set; }
        /// <summary>Environment variables used for builds and Pages Functions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_env_vars? EnvVars { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_env_vars EnvVars { get; set; }
#endif
        /// <summary>Id of the deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>If the deployment has been skipped.</summary>
        public bool? IsSkipped { get; private set; }
        /// <summary>The status of the deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage? LatestStage { get; private set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage LatestStage { get; private set; }
#endif
        /// <summary>When the deployment was last modified.</summary>
        public DateTimeOffset? ModifiedOn { get; private set; }
        /// <summary>Id of the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; private set; }
#nullable restore
#else
        public string ProjectId { get; private set; }
#endif
        /// <summary>Name of the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectName { get; private set; }
#nullable restore
#else
        public string ProjectName { get; private set; }
#endif
        /// <summary>Short Id (8 character) of the deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShortId { get; private set; }
#nullable restore
#else
        public string ShortId { get; private set; }
#endif
        /// <summary>The source property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_source? Source { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_source Source { get; set; }
#endif
        /// <summary>List of past stages.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage>? Stages { get; private set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage> Stages { get; private set; }
#endif
        /// <summary>The live URL to view this deployment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments"/> and sets the default values.
        /// </summary>
        public Pages_deployments()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aliases", n => { Aliases = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "build_config", n => { BuildConfig = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_build_config>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_build_config.CreateFromDiscriminatorValue); } },
                { "created_on", n => { CreatedOn = n.GetDateTimeOffsetValue(); } },
                { "deployment_trigger", n => { DeploymentTrigger = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_deployment_trigger>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_deployment_trigger.CreateFromDiscriminatorValue); } },
                { "env_vars", n => { EnvVars = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_env_vars>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_env_vars.CreateFromDiscriminatorValue); } },
                { "environment", n => { Environment = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_deployments_environment>(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "is_skipped", n => { IsSkipped = n.GetBoolValue(); } },
                { "latest_stage", n => { LatestStage = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage.CreateFromDiscriminatorValue); } },
                { "modified_on", n => { ModifiedOn = n.GetDateTimeOffsetValue(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "project_name", n => { ProjectName = n.GetStringValue(); } },
                { "short_id", n => { ShortId = n.GetStringValue(); } },
                { "source", n => { Source = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_source>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_source.CreateFromDiscriminatorValue); } },
                { "stages", n => { Stages = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage>(global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_stage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_build_config>("build_config", BuildConfig);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_env_vars>("env_vars", EnvVars);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Pages_source>("source", Source);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
