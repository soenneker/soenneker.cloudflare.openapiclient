// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Magic_visibility_pcaps_pcaps_ownership_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The full URI for the bucket. This field only applies to `full` packet captures.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DestinationConf { get; set; }
#nullable restore
#else
        public string DestinationConf { get; set; }
#endif
        /// <summary>The ownership challenge filename stored in the bucket.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filename { get; set; }
#nullable restore
#else
        public string Filename { get; set; }
#endif
        /// <summary>The bucket ID associated with the packet captures API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The status of the ownership challenge. Can be pending, success or failed.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response_status? Status { get; set; }
        /// <summary>The RFC 3339 timestamp when the bucket was added to packet captures API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Submitted { get; set; }
#nullable restore
#else
        public string Submitted { get; set; }
#endif
        /// <summary>The RFC 3339 timestamp when the bucket was validated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Validated { get; set; }
#nullable restore
#else
        public string Validated { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response"/> and sets the default values.
        /// </summary>
        public Magic_visibility_pcaps_pcaps_ownership_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "destination_conf", n => { DestinationConf = n.GetStringValue(); } },
                { "filename", n => { Filename = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response_status>(); } },
                { "submitted", n => { Submitted = n.GetStringValue(); } },
                { "validated", n => { Validated = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("destination_conf", DestinationConf);
            writer.WriteStringValue("filename", Filename);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Magic_visibility_pcaps_pcaps_ownership_response_status>("status", Status);
            writer.WriteStringValue("submitted", Submitted);
            writer.WriteStringValue("validated", Validated);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
