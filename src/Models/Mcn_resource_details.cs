// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Mcn_resource_details : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cloud_type property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_type? CloudType { get; set; }
        /// <summary>The config property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_config? Config { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_config Config { get; set; }
#endif
        /// <summary>The deployment_provider property</summary>
        public Guid? DeploymentProvider { get; set; }
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The managed property</summary>
        public bool? Managed { get; set; }
        /// <summary>The managed_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_platform_client>? ManagedBy { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_platform_client> ManagedBy { get; set; }
#endif
        /// <summary>The monthly_cost_estimate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost? MonthlyCostEstimate { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost MonthlyCostEstimate { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The native_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NativeId { get; set; }
#nullable restore
#else
        public string NativeId { get; set; }
#endif
        /// <summary>The observations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_observations? Observations { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_observations Observations { get; set; }
#endif
        /// <summary>The provider_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? ProviderIds { get; set; }
#nullable restore
#else
        public List<Guid?> ProviderIds { get; set; }
#endif
        /// <summary>The provider_names_by_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_provider_names_by_id? ProviderNamesById { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_provider_names_by_id ProviderNamesById { get; set; }
#endif
        /// <summary>The region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>The resource_group property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceGroup { get; set; }
#nullable restore
#else
        public string ResourceGroup { get; set; }
#endif
        /// <summary>The resource_type property</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_type? ResourceType { get; set; }
        /// <summary>The sections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_section>? Sections { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_section> Sections { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_state? State { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_state State { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_tags? Tags { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_tags Tags { get; set; }
#endif
        /// <summary>The updated_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details"/> and sets the default values.
        /// </summary>
        public Mcn_resource_details()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_id", n => { AccountId = n.GetStringValue(); } },
                { "cloud_type", n => { CloudType = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_type>(); } },
                { "config", n => { Config = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_config>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_config.CreateFromDiscriminatorValue); } },
                { "deployment_provider", n => { DeploymentProvider = n.GetGuidValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "managed", n => { Managed = n.GetBoolValue(); } },
                { "managed_by", n => { ManagedBy = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_platform_client>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_platform_client.CreateFromDiscriminatorValue)?.AsList(); } },
                { "monthly_cost_estimate", n => { MonthlyCostEstimate = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "native_id", n => { NativeId = n.GetStringValue(); } },
                { "observations", n => { Observations = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_observations>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_observations.CreateFromDiscriminatorValue); } },
                { "provider_ids", n => { ProviderIds = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "provider_names_by_id", n => { ProviderNamesById = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_provider_names_by_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_provider_names_by_id.CreateFromDiscriminatorValue); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "resource_group", n => { ResourceGroup = n.GetStringValue(); } },
                { "resource_type", n => { ResourceType = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_type>(); } },
                { "sections", n => { Sections = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_section>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_section.CreateFromDiscriminatorValue)?.AsList(); } },
                { "state", n => { State = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_state>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_state.CreateFromDiscriminatorValue); } },
                { "tags", n => { Tags = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_tags>(global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_tags.CreateFromDiscriminatorValue); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_id", AccountId);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_type>("cloud_type", CloudType);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_config>("config", Config);
            writer.WriteGuidValue("deployment_provider", DeploymentProvider);
            writer.WriteGuidValue("id", Id);
            writer.WriteBoolValue("managed", Managed);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cloud_platform_client>("managed_by", ManagedBy);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_cost>("monthly_cost_estimate", MonthlyCostEstimate);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("native_id", NativeId);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_observations>("observations", Observations);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("provider_ids", ProviderIds);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_provider_names_by_id>("provider_names_by_id", ProviderNamesById);
            writer.WriteStringValue("region", Region);
            writer.WriteStringValue("resource_group", ResourceGroup);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_type>("resource_type", ResourceType);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_section>("sections", Sections);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_state>("state", State);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Mcn_resource_details_tags>("tags", Tags);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
