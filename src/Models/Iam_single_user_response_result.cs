// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Iam_single_user_response_result : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Lists the betas that the user is participating in.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Betas { get; private set; }
#nullable restore
#else
        public List<string> Betas { get; private set; }
#endif
        /// <summary>The country in which the user lives.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>User&apos;s first name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>Indicates whether user has any business zones</summary>
        public bool? HasBusinessZones { get; private set; }
        /// <summary>Indicates whether user has any enterprise zones</summary>
        public bool? HasEnterpriseZones { get; private set; }
        /// <summary>Indicates whether user has any pro zones</summary>
        public bool? HasProZones { get; private set; }
        /// <summary>Identifier of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>User&apos;s last name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The organizations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_organization>? Organizations { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_organization> Organizations { get; set; }
#endif
        /// <summary>Indicates whether user has been suspended</summary>
        public bool? Suspended { get; private set; }
        /// <summary>User&apos;s telephone number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Telephone { get; set; }
#nullable restore
#else
        public string Telephone { get; set; }
#endif
        /// <summary>Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.</summary>
        public bool? TwoFactorAuthenticationEnabled { get; set; }
        /// <summary>Indicates whether two-factor authentication is required by one of the accounts that the user is a member of.</summary>
        public bool? TwoFactorAuthenticationLocked { get; set; }
        /// <summary>The zipcode or postal code where the user lives.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zipcode { get; set; }
#nullable restore
#else
        public string Zipcode { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_single_user_response_result"/> and sets the default values.
        /// </summary>
        public Iam_single_user_response_result()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_single_user_response_result"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_single_user_response_result CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_single_user_response_result();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "betas", n => { Betas = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "has_business_zones", n => { HasBusinessZones = n.GetBoolValue(); } },
                { "has_enterprise_zones", n => { HasEnterpriseZones = n.GetBoolValue(); } },
                { "has_pro_zones", n => { HasProZones = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "organizations", n => { Organizations = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_organization>(global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_organization.CreateFromDiscriminatorValue)?.AsList(); } },
                { "suspended", n => { Suspended = n.GetBoolValue(); } },
                { "telephone", n => { Telephone = n.GetStringValue(); } },
                { "two_factor_authentication_enabled", n => { TwoFactorAuthenticationEnabled = n.GetBoolValue(); } },
                { "two_factor_authentication_locked", n => { TwoFactorAuthenticationLocked = n.GetBoolValue(); } },
                { "zipcode", n => { Zipcode = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Iam_organization>("organizations", Organizations);
            writer.WriteStringValue("telephone", Telephone);
            writer.WriteBoolValue("two_factor_authentication_enabled", TwoFactorAuthenticationEnabled);
            writer.WriteBoolValue("two_factor_authentication_locked", TwoFactorAuthenticationLocked);
            writer.WriteStringValue("zipcode", Zipcode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
