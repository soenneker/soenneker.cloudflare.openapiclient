// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WorkersObservability_telemetry_event_Metadata : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Account { get; set; }
#nullable restore
#else
        public string Account { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cloudService property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CloudService { get; set; }
#nullable restore
#else
        public string CloudService { get; set; }
#endif
        /// <summary>The coldStart property</summary>
        public int? ColdStart { get; set; }
        /// <summary>The cost property</summary>
        public int? Cost { get; set; }
        /// <summary>The duration property</summary>
        public int? Duration { get; set; }
        /// <summary>The endTime property</summary>
        public int? EndTime { get; set; }
        /// <summary>The error property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>The errorTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ErrorTemplate { get; set; }
#nullable restore
#else
        public string ErrorTemplate { get; set; }
#endif
        /// <summary>The fingerprint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fingerprint { get; set; }
#nullable restore
#else
        public string Fingerprint { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The level property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Level { get; set; }
#nullable restore
#else
        public string Level { get; set; }
#endif
        /// <summary>The message property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>The messageTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MessageTemplate { get; set; }
#nullable restore
#else
        public string MessageTemplate { get; set; }
#endif
        /// <summary>The metricName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MetricName { get; set; }
#nullable restore
#else
        public string MetricName { get; set; }
#endif
        /// <summary>The origin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Origin { get; set; }
#nullable restore
#else
        public string Origin { get; set; }
#endif
        /// <summary>The parentSpanId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentSpanId { get; set; }
#nullable restore
#else
        public string ParentSpanId { get; set; }
#endif
        /// <summary>The provider property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Provider { get; set; }
#nullable restore
#else
        public string Provider { get; set; }
#endif
        /// <summary>The region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>The requestId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestId { get; set; }
#nullable restore
#else
        public string RequestId { get; set; }
#endif
        /// <summary>The service property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Service { get; set; }
#nullable restore
#else
        public string Service { get; set; }
#endif
        /// <summary>The spanId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpanId { get; set; }
#nullable restore
#else
        public string SpanId { get; set; }
#endif
        /// <summary>The spanName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpanName { get; set; }
#nullable restore
#else
        public string SpanName { get; set; }
#endif
        /// <summary>The stackId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StackId { get; set; }
#nullable restore
#else
        public string StackId { get; set; }
#endif
        /// <summary>The startTime property</summary>
        public int? StartTime { get; set; }
        /// <summary>The statusCode property</summary>
        public int? StatusCode { get; set; }
        /// <summary>The traceDuration property</summary>
        public int? TraceDuration { get; set; }
        /// <summary>The traceId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TraceId { get; set; }
#nullable restore
#else
        public string TraceId { get; set; }
#endif
        /// <summary>The trigger property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Trigger { get; set; }
#nullable restore
#else
        public string Trigger { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.WorkersObservability_telemetry_event_Metadata"/> and sets the default values.
        /// </summary>
        public WorkersObservability_telemetry_event_Metadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.WorkersObservability_telemetry_event_Metadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.WorkersObservability_telemetry_event_Metadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.WorkersObservability_telemetry_event_Metadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetStringValue(); } },
                { "cloudService", n => { CloudService = n.GetStringValue(); } },
                { "coldStart", n => { ColdStart = n.GetIntValue(); } },
                { "cost", n => { Cost = n.GetIntValue(); } },
                { "duration", n => { Duration = n.GetIntValue(); } },
                { "endTime", n => { EndTime = n.GetIntValue(); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "errorTemplate", n => { ErrorTemplate = n.GetStringValue(); } },
                { "fingerprint", n => { Fingerprint = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "level", n => { Level = n.GetStringValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "messageTemplate", n => { MessageTemplate = n.GetStringValue(); } },
                { "metricName", n => { MetricName = n.GetStringValue(); } },
                { "origin", n => { Origin = n.GetStringValue(); } },
                { "parentSpanId", n => { ParentSpanId = n.GetStringValue(); } },
                { "provider", n => { Provider = n.GetStringValue(); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "requestId", n => { RequestId = n.GetStringValue(); } },
                { "service", n => { Service = n.GetStringValue(); } },
                { "spanId", n => { SpanId = n.GetStringValue(); } },
                { "spanName", n => { SpanName = n.GetStringValue(); } },
                { "stackId", n => { StackId = n.GetStringValue(); } },
                { "startTime", n => { StartTime = n.GetIntValue(); } },
                { "statusCode", n => { StatusCode = n.GetIntValue(); } },
                { "traceDuration", n => { TraceDuration = n.GetIntValue(); } },
                { "traceId", n => { TraceId = n.GetStringValue(); } },
                { "trigger", n => { Trigger = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account", Account);
            writer.WriteStringValue("cloudService", CloudService);
            writer.WriteIntValue("coldStart", ColdStart);
            writer.WriteIntValue("cost", Cost);
            writer.WriteIntValue("duration", Duration);
            writer.WriteIntValue("endTime", EndTime);
            writer.WriteStringValue("error", Error);
            writer.WriteStringValue("errorTemplate", ErrorTemplate);
            writer.WriteStringValue("fingerprint", Fingerprint);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("level", Level);
            writer.WriteStringValue("message", Message);
            writer.WriteStringValue("messageTemplate", MessageTemplate);
            writer.WriteStringValue("metricName", MetricName);
            writer.WriteStringValue("origin", Origin);
            writer.WriteStringValue("parentSpanId", ParentSpanId);
            writer.WriteStringValue("provider", Provider);
            writer.WriteStringValue("region", Region);
            writer.WriteStringValue("requestId", RequestId);
            writer.WriteStringValue("service", Service);
            writer.WriteStringValue("spanId", SpanId);
            writer.WriteStringValue("spanName", SpanName);
            writer.WriteStringValue("stackId", StackId);
            writer.WriteIntValue("startTime", StartTime);
            writer.WriteIntValue("statusCode", StatusCode);
            writer.WriteIntValue("traceDuration", TraceDuration);
            writer.WriteStringValue("traceId", TraceId);
            writer.WriteStringValue("trigger", Trigger);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
