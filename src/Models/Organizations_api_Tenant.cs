// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Organizations_api_Tenant : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cdate property</summary>
        public DateTimeOffset? Cdate { get; set; }
        /// <summary>The customer_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The edate property</summary>
        public DateTimeOffset? Edate { get; set; }
        /// <summary>The tenant_contacts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_contacts? TenantContacts { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_contacts TenantContacts { get; set; }
#endif
        /// <summary>The tenant_labels property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TenantLabels { get; set; }
#nullable restore
#else
        public List<string> TenantLabels { get; set; }
#endif
        /// <summary>The tenant_metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_metadata? TenantMetadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_metadata TenantMetadata { get; set; }
#endif
        /// <summary>The tenant_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantName { get; set; }
#nullable restore
#else
        public string TenantName { get; set; }
#endif
        /// <summary>The tenant_network property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_network? TenantNetwork { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_network TenantNetwork { get; set; }
#endif
        /// <summary>The tenant_status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantStatus { get; set; }
#nullable restore
#else
        public string TenantStatus { get; set; }
#endif
        /// <summary>The tenant_tag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantTag { get; set; }
#nullable restore
#else
        public string TenantTag { get; set; }
#endif
        /// <summary>The tenant_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantType { get; set; }
#nullable restore
#else
        public string TenantType { get; set; }
#endif
        /// <summary>The tenant_units property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_TenantUnit>? TenantUnits { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_TenantUnit> TenantUnits { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant"/> and sets the default values.
        /// </summary>
        public Organizations_api_Tenant()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cdate", n => { Cdate = n.GetDateTimeOffsetValue(); } },
                { "customer_id", n => { CustomerId = n.GetStringValue(); } },
                { "edate", n => { Edate = n.GetDateTimeOffsetValue(); } },
                { "tenant_contacts", n => { TenantContacts = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_contacts>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_contacts.CreateFromDiscriminatorValue); } },
                { "tenant_labels", n => { TenantLabels = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "tenant_metadata", n => { TenantMetadata = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_metadata>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_metadata.CreateFromDiscriminatorValue); } },
                { "tenant_name", n => { TenantName = n.GetStringValue(); } },
                { "tenant_network", n => { TenantNetwork = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_network>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_network.CreateFromDiscriminatorValue); } },
                { "tenant_status", n => { TenantStatus = n.GetStringValue(); } },
                { "tenant_tag", n => { TenantTag = n.GetStringValue(); } },
                { "tenant_type", n => { TenantType = n.GetStringValue(); } },
                { "tenant_units", n => { TenantUnits = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_TenantUnit>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_TenantUnit.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("cdate", Cdate);
            writer.WriteStringValue("customer_id", CustomerId);
            writer.WriteDateTimeOffsetValue("edate", Edate);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_contacts>("tenant_contacts", TenantContacts);
            writer.WriteCollectionOfPrimitiveValues<string>("tenant_labels", TenantLabels);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_metadata>("tenant_metadata", TenantMetadata);
            writer.WriteStringValue("tenant_name", TenantName);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Tenant_tenant_network>("tenant_network", TenantNetwork);
            writer.WriteStringValue("tenant_status", TenantStatus);
            writer.WriteStringValue("tenant_tag", TenantTag);
            writer.WriteStringValue("tenant_type", TenantType);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_TenantUnit>("tenant_units", TenantUnits);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
