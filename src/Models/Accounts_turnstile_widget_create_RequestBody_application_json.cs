// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Accounts_turnstile_widget_create_RequestBody_application_json : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>If bot_fight_mode is set to `true`, Cloudflare issues computationallyexpensive challenges in response to malicious bots (ENT only).</summary>
        public bool? BotFightMode { get; set; }
        /// <summary>If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,this setting can determine the clearance level to be set</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_clearance_level? ClearanceLevel { get; set; }
        /// <summary>The domains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Domains { get; set; }
#nullable restore
#else
        public List<string> Domains { get; set; }
#endif
        /// <summary>Return the Ephemeral ID in /siteverify (ENT only).</summary>
        public bool? EphemeralId { get; set; }
        /// <summary>Widget Mode</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_widget_mode? Mode { get; set; }
        /// <summary>Human readable widget name. Not unique. Cloudflare suggests that youset this to a meaningful string to make it easier to identify yourwidget, and where it is used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Do not show any Cloudflare branding on the widget (ENT only).</summary>
        public bool? Offlabel { get; set; }
        /// <summary>Region where this widget can be used. This cannot be changed after creation.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_region? Region { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Accounts_turnstile_widget_create_RequestBody_application_json"/> and sets the default values.
        /// </summary>
        public Accounts_turnstile_widget_create_RequestBody_application_json()
        {
            AdditionalData = new Dictionary<string, object>();
            Region = global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_region.World;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Accounts_turnstile_widget_create_RequestBody_application_json"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Accounts_turnstile_widget_create_RequestBody_application_json CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Accounts_turnstile_widget_create_RequestBody_application_json();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bot_fight_mode", n => { BotFightMode = n.GetBoolValue(); } },
                { "clearance_level", n => { ClearanceLevel = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_clearance_level>(); } },
                { "domains", n => { Domains = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ephemeral_id", n => { EphemeralId = n.GetBoolValue(); } },
                { "mode", n => { Mode = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_widget_mode>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "offlabel", n => { Offlabel = n.GetBoolValue(); } },
                { "region", n => { Region = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_region>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("bot_fight_mode", BotFightMode);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_clearance_level>("clearance_level", ClearanceLevel);
            writer.WriteCollectionOfPrimitiveValues<string>("domains", Domains);
            writer.WriteBoolValue("ephemeral_id", EphemeralId);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_widget_mode>("mode", Mode);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("offlabel", Offlabel);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Turnstile_region>("region", Region);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
