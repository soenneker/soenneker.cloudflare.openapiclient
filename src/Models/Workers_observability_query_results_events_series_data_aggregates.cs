// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Workers_observability_query_results_events_series_data_aggregates : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bin property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates_bin? Bin { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates_bin Bin { get; set; }
#endif
        /// <summary>The _count property</summary>
        [Obsolete("")]
        public int? Count { get; set; }
        /// <summary>The _firstSeen property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstSeen { get; set; }
#nullable restore
#else
        public string FirstSeen { get; set; }
#endif
        /// <summary>The _interval property</summary>
        [Obsolete("")]
        public int? Interval { get; set; }
        /// <summary>The _lastSeen property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeen { get; set; }
#nullable restore
#else
        public string LastSeen { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates"/> and sets the default values.
        /// </summary>
        public Workers_observability_query_results_events_series_data_aggregates()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bin", n => { Bin = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates_bin>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates_bin.CreateFromDiscriminatorValue); } },
                { "_count", n => { Count = n.GetIntValue(); } },
                { "_firstSeen", n => { FirstSeen = n.GetStringValue(); } },
                { "_interval", n => { Interval = n.GetIntValue(); } },
                { "_lastSeen", n => { LastSeen = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_observability_query_results_events_series_data_aggregates_bin>("bin", Bin);
            writer.WriteIntValue("_count", Count);
            writer.WriteStringValue("_firstSeen", FirstSeen);
            writer.WriteIntValue("_interval", Interval);
            writer.WriteStringValue("_lastSeen", LastSeen);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
