// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alpha2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Alpha2 { get; set; }
#nullable restore
#else
        public string Alpha2 { get; set; }
#endif
        /// <summary>The confidenceLevel property</summary>
        public int? ConfidenceLevel { get; set; }
        /// <summary>A numeric string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Latitude { get; set; }
#nullable restore
#else
        public string Latitude { get; set; }
#endif
        /// <summary>A numeric string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Longitude { get; set; }
#nullable restore
#else
        public string Longitude { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>The subregion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subregion { get; set; }
#nullable restore
#else
        public string Subregion { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location"/> and sets the default values.
        /// </summary>
        public Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_entities_location_by_alpha2_Response_200_application_json_result_location();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alpha2", n => { Alpha2 = n.GetStringValue(); } },
                { "confidenceLevel", n => { ConfidenceLevel = n.GetIntValue(); } },
                { "latitude", n => { Latitude = n.GetStringValue(); } },
                { "longitude", n => { Longitude = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "subregion", n => { Subregion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("alpha2", Alpha2);
            writer.WriteIntValue("confidenceLevel", ConfidenceLevel);
            writer.WriteStringValue("latitude", Latitude);
            writer.WriteStringValue("longitude", Longitude);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("region", Region);
            writer.WriteStringValue("subregion", Subregion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
