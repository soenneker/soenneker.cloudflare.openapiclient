// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Dlp_PredefinedProfileConfig : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The ai_context_enabled property</summary>
        public bool? AiContextEnabled { get; set; }
        /// <summary>The allowed_match_count property</summary>
        public int? AllowedMatchCount { get; set; }
        /// <summary>The confidence_threshold property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConfidenceThreshold { get; set; }
#nullable restore
#else
        public string ConfidenceThreshold { get; set; }
#endif
        /// <summary>The enabled_entries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? EnabledEntries { get; set; }
#nullable restore
#else
        public List<Guid?> EnabledEntries { get; set; }
#endif
        /// <summary>The entries property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_Entry>? Entries { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_Entry> Entries { get; set; }
#endif
        /// <summary>The id of the predefined profile (uuid).</summary>
        public Guid? Id { get; set; }
        /// <summary>The name of the predefined profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The ocr_enabled property</summary>
        public bool? OcrEnabled { get; set; }
        /// <summary>Whether this profile can be accessed by anyone.</summary>
        public bool? OpenAccess { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_PredefinedProfileConfig"/> and sets the default values.
        /// </summary>
        public Dlp_PredefinedProfileConfig()
        {
            AdditionalData = new Dictionary<string, object>();
            ConfidenceThreshold = "low";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_PredefinedProfileConfig"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_PredefinedProfileConfig CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_PredefinedProfileConfig();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ai_context_enabled", n => { AiContextEnabled = n.GetBoolValue(); } },
                { "allowed_match_count", n => { AllowedMatchCount = n.GetIntValue(); } },
                { "confidence_threshold", n => { ConfidenceThreshold = n.GetStringValue(); } },
                { "enabled_entries", n => { EnabledEntries = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "entries", n => { Entries = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_Entry>(global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_Entry.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "ocr_enabled", n => { OcrEnabled = n.GetBoolValue(); } },
                { "open_access", n => { OpenAccess = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("ai_context_enabled", AiContextEnabled);
            writer.WriteIntValue("allowed_match_count", AllowedMatchCount);
            writer.WriteStringValue("confidence_threshold", ConfidenceThreshold);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("enabled_entries", EnabledEntries);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Dlp_Entry>("entries", Entries);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("ocr_enabled", OcrEnabled);
            writer.WriteBoolValue("open_access", OpenAccess);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
