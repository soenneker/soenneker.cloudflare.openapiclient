// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Aig_config_list_gateway_logs_200_result_info : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The count property</summary>
        public double? Count { get; set; }
        /// <summary>The max_cost property</summary>
        public double? MaxCost { get; set; }
        /// <summary>The max_duration property</summary>
        public double? MaxDuration { get; set; }
        /// <summary>The max_tokens_in property</summary>
        public double? MaxTokensIn { get; set; }
        /// <summary>The max_tokens_out property</summary>
        public double? MaxTokensOut { get; set; }
        /// <summary>The max_total_tokens property</summary>
        public double? MaxTotalTokens { get; set; }
        /// <summary>The min_cost property</summary>
        public double? MinCost { get; set; }
        /// <summary>The min_duration property</summary>
        public double? MinDuration { get; set; }
        /// <summary>The min_tokens_in property</summary>
        public double? MinTokensIn { get; set; }
        /// <summary>The min_tokens_out property</summary>
        public double? MinTokensOut { get; set; }
        /// <summary>The min_total_tokens property</summary>
        public double? MinTotalTokens { get; set; }
        /// <summary>The page property</summary>
        public double? Page { get; set; }
        /// <summary>The per_page property</summary>
        public double? PerPage { get; set; }
        /// <summary>The total_count property</summary>
        public double? TotalCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_list_gateway_logs_200_result_info"/> and sets the default values.
        /// </summary>
        public Aig_config_list_gateway_logs_200_result_info()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_list_gateway_logs_200_result_info"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_list_gateway_logs_200_result_info CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Aig_config_list_gateway_logs_200_result_info();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "count", n => { Count = n.GetDoubleValue(); } },
                { "max_cost", n => { MaxCost = n.GetDoubleValue(); } },
                { "max_duration", n => { MaxDuration = n.GetDoubleValue(); } },
                { "max_tokens_in", n => { MaxTokensIn = n.GetDoubleValue(); } },
                { "max_tokens_out", n => { MaxTokensOut = n.GetDoubleValue(); } },
                { "max_total_tokens", n => { MaxTotalTokens = n.GetDoubleValue(); } },
                { "min_cost", n => { MinCost = n.GetDoubleValue(); } },
                { "min_duration", n => { MinDuration = n.GetDoubleValue(); } },
                { "min_tokens_in", n => { MinTokensIn = n.GetDoubleValue(); } },
                { "min_tokens_out", n => { MinTokensOut = n.GetDoubleValue(); } },
                { "min_total_tokens", n => { MinTotalTokens = n.GetDoubleValue(); } },
                { "page", n => { Page = n.GetDoubleValue(); } },
                { "per_page", n => { PerPage = n.GetDoubleValue(); } },
                { "total_count", n => { TotalCount = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("count", Count);
            writer.WriteDoubleValue("max_cost", MaxCost);
            writer.WriteDoubleValue("max_duration", MaxDuration);
            writer.WriteDoubleValue("max_tokens_in", MaxTokensIn);
            writer.WriteDoubleValue("max_tokens_out", MaxTokensOut);
            writer.WriteDoubleValue("max_total_tokens", MaxTotalTokens);
            writer.WriteDoubleValue("min_cost", MinCost);
            writer.WriteDoubleValue("min_duration", MinDuration);
            writer.WriteDoubleValue("min_tokens_in", MinTokensIn);
            writer.WriteDoubleValue("min_tokens_out", MinTokensOut);
            writer.WriteDoubleValue("min_total_tokens", MinTotalTokens);
            writer.WriteDoubleValue("page", Page);
            writer.WriteDoubleValue("per_page", PerPage);
            writer.WriteDoubleValue("total_count", TotalCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
