// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Get_DOHealthCheck_200_properties : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The durationMs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_durationMs? DurationMs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_durationMs DurationMs { get; set; }
#endif
        /// <summary>The ok property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_ok? Ok { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_ok Ok { get; set; }
#endif
        /// <summary>The shards property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards? Shards { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards Shards { get; set; }
#endif
        /// <summary>The totalShards property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalShards? TotalShards { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalShards TotalShards { get; set; }
#endif
        /// <summary>The totalSizeBytes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeBytes? TotalSizeBytes { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeBytes TotalSizeBytes { get; set; }
#endif
        /// <summary>The totalSizeMB property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeMB? TotalSizeMB { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeMB TotalSizeMB { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties"/> and sets the default values.
        /// </summary>
        public Get_DOHealthCheck_200_properties()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "durationMs", n => { DurationMs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_durationMs>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_durationMs.CreateFromDiscriminatorValue); } },
                { "ok", n => { Ok = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_ok>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_ok.CreateFromDiscriminatorValue); } },
                { "shards", n => { Shards = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards.CreateFromDiscriminatorValue); } },
                { "totalShards", n => { TotalShards = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalShards>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalShards.CreateFromDiscriminatorValue); } },
                { "totalSizeBytes", n => { TotalSizeBytes = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeBytes>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeBytes.CreateFromDiscriminatorValue); } },
                { "totalSizeMB", n => { TotalSizeMB = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeMB>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeMB.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_durationMs>("durationMs", DurationMs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_ok>("ok", Ok);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards>("shards", Shards);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalShards>("totalShards", TotalShards);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeBytes>("totalSizeBytes", TotalSizeBytes);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_totalSizeMB>("totalSizeMB", TotalSizeMB);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
