// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Defines the configuration of the R2 Sink.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config? Config { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config Config { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The format property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_Format? Format { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_Format Format { get; set; }
#endif
        /// <summary>Indicates a unique identifier for this sink.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The modified_at property</summary>
        public DateTimeOffset? ModifiedAt { get; set; }
        /// <summary>Defines the name of the Sink.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The schema property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_ConnectionSchema? Schema { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_ConnectionSchema Schema { get; set; }
#endif
        /// <summary>Specifies the type of sink.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result"/> and sets the default values.
        /// </summary>
        public GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "config", n => { Config = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config>(global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "format", n => { Format = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_Format>(global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_Format.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "modified_at", n => { ModifiedAt = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "schema", n => { Schema = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_ConnectionSchema>(global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_ConnectionSchema.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config>("config", Config);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_Format>("format", Format);
            writer.WriteStringValue("id", Id);
            writer.WriteDateTimeOffsetValue("modified_at", ModifiedAt);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_ConnectionSchema>("schema", Schema);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable? CloudflarePipelinesR2DataCatalogTable { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable CloudflarePipelinesR2DataCatalogTable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table? CloudflarePipelinesR2Table { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table CloudflarePipelinesR2Table { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result.GetV4AccountsByAccount_idPipelinesV1SinksBySink_id_200_result_config();
                if("cloudflare_pipelines_r2_data_catalogTable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CloudflarePipelinesR2DataCatalogTable = new global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable();
                }
                else if("cloudflare_pipelines_r2Table".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CloudflarePipelinesR2Table = new global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CloudflarePipelinesR2DataCatalogTable != null)
                {
                    return CloudflarePipelinesR2DataCatalogTable.GetFieldDeserializers();
                }
                else if(CloudflarePipelinesR2Table != null)
                {
                    return CloudflarePipelinesR2Table.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(CloudflarePipelinesR2DataCatalogTable != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2_data_catalogTable>(null, CloudflarePipelinesR2DataCatalogTable);
                }
                else if(CloudflarePipelinesR2Table != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Cloudflare_pipelines_r2Table>(null, CloudflarePipelinesR2Table);
                }
            }
        }
    }
}
#pragma warning restore CS0618
