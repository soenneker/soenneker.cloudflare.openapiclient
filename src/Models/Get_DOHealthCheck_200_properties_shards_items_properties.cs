// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Get_DOHealthCheck_200_properties_shards_items_properties : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The datasetId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_datasetId? DatasetId { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_datasetId DatasetId { get; set; }
#endif
        /// <summary>The date property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_date? Date { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_date Date { get; set; }
#endif
        /// <summary>The healthCheckMs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_healthCheckMs? HealthCheckMs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_healthCheckMs HealthCheckMs { get; set; }
#endif
        /// <summary>The pageCount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageCount? PageCount { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageCount PageCount { get; set; }
#endif
        /// <summary>The pageSize property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageSize? PageSize { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageSize PageSize { get; set; }
#endif
        /// <summary>The sizeBytes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeBytes? SizeBytes { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeBytes SizeBytes { get; set; }
#endif
        /// <summary>The sizeMB property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeMB? SizeMB { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeMB SizeMB { get; set; }
#endif
        /// <summary>The startupMs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_startupMs? StartupMs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_startupMs StartupMs { get; set; }
#endif
        /// <summary>The tableStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_tableStats? TableStats { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_tableStats TableStats { get; set; }
#endif
        /// <summary>The timedOut property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_timedOut? TimedOut { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_timedOut TimedOut { get; set; }
#endif
        /// <summary>The totalMs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_totalMs? TotalMs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_totalMs TotalMs { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties"/> and sets the default values.
        /// </summary>
        public Get_DOHealthCheck_200_properties_shards_items_properties()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "datasetId", n => { DatasetId = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_datasetId>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_datasetId.CreateFromDiscriminatorValue); } },
                { "date", n => { Date = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_date>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_date.CreateFromDiscriminatorValue); } },
                { "healthCheckMs", n => { HealthCheckMs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_healthCheckMs>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_healthCheckMs.CreateFromDiscriminatorValue); } },
                { "pageCount", n => { PageCount = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageCount>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageCount.CreateFromDiscriminatorValue); } },
                { "pageSize", n => { PageSize = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageSize>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageSize.CreateFromDiscriminatorValue); } },
                { "sizeBytes", n => { SizeBytes = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeBytes>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeBytes.CreateFromDiscriminatorValue); } },
                { "sizeMB", n => { SizeMB = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeMB>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeMB.CreateFromDiscriminatorValue); } },
                { "startupMs", n => { StartupMs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_startupMs>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_startupMs.CreateFromDiscriminatorValue); } },
                { "tableStats", n => { TableStats = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_tableStats>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_tableStats.CreateFromDiscriminatorValue); } },
                { "timedOut", n => { TimedOut = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_timedOut>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_timedOut.CreateFromDiscriminatorValue); } },
                { "totalMs", n => { TotalMs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_totalMs>(global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_totalMs.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_datasetId>("datasetId", DatasetId);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_date>("date", Date);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_healthCheckMs>("healthCheckMs", HealthCheckMs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageCount>("pageCount", PageCount);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_pageSize>("pageSize", PageSize);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeBytes>("sizeBytes", SizeBytes);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_sizeMB>("sizeMB", SizeMB);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_startupMs>("startupMs", StartupMs);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_tableStats>("tableStats", TableStats);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_timedOut>("timedOut", TimedOut);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Get_DOHealthCheck_200_properties_shards_items_properties_totalMs>("totalMs", TotalMs);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
