// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.2. `random`: Random queue where customers gain access randomly, regardless of arrival time.3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum Waitingroom_queueing_method
    {
        [EnumMember(Value = "fifo")]
        #pragma warning disable CS1591
        Fifo,
        #pragma warning restore CS1591
        [EnumMember(Value = "random")]
        #pragma warning disable CS1591
        Random,
        #pragma warning restore CS1591
        [EnumMember(Value = "passthrough")]
        #pragma warning disable CS1591
        Passthrough,
        #pragma warning restore CS1591
        [EnumMember(Value = "reject")]
        #pragma warning disable CS1591
        Reject,
        #pragma warning restore CS1591
    }
}
