// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Teams_devices_crowdstrike_input_request : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Posture Integration ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConnectionId { get; set; }
#nullable restore
#else
        public string ConnectionId { get; set; }
#endif
        /// <summary>For more details on last seen, please refer to the Crowdstrike documentation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeen { get; set; }
#nullable restore
#else
        public string LastSeen { get; set; }
#endif
        /// <summary>Operator.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_operator? Operator { get; set; }
        /// <summary>Os Version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Os { get; set; }
#nullable restore
#else
        public string Os { get; set; }
#endif
        /// <summary>Overall.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Overall { get; set; }
#nullable restore
#else
        public string Overall { get; set; }
#endif
        /// <summary>SensorConfig.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SensorConfig { get; set; }
#nullable restore
#else
        public string SensorConfig { get; set; }
#endif
        /// <summary>For more details on state, please refer to the Crowdstrike documentation.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_state? State { get; set; }
        /// <summary>Version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>Version Operator.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_versionOperator? VersionOperator { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request"/> and sets the default values.
        /// </summary>
        public Teams_devices_crowdstrike_input_request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "connection_id", n => { ConnectionId = n.GetStringValue(); } },
                { "last_seen", n => { LastSeen = n.GetStringValue(); } },
                { "operator", n => { Operator = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_operator>(); } },
                { "os", n => { Os = n.GetStringValue(); } },
                { "overall", n => { Overall = n.GetStringValue(); } },
                { "sensor_config", n => { SensorConfig = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_state>(); } },
                { "version", n => { Version = n.GetStringValue(); } },
                { "versionOperator", n => { VersionOperator = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_versionOperator>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("connection_id", ConnectionId);
            writer.WriteStringValue("last_seen", LastSeen);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_operator>("operator", Operator);
            writer.WriteStringValue("os", Os);
            writer.WriteStringValue("overall", Overall);
            writer.WriteStringValue("sensor_config", SensorConfig);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_state>("state", State);
            writer.WriteStringValue("version", Version);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Teams_devices_crowdstrike_input_request_versionOperator>("versionOperator", VersionOperator);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
