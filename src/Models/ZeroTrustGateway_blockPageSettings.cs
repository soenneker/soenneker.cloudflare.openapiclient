// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Block page layout settings.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ZeroTrustGateway_blockPageSettings : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>If mode is customized_block_page: block page background color in #rrggbb format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BackgroundColor { get; set; }
#nullable restore
#else
        public string BackgroundColor { get; set; }
#endif
        /// <summary>Enable only cipher suites and TLS versions compliant with FIPS 140-2.</summary>
        public bool? Enabled { get; set; }
        /// <summary>If mode is customized_block_page: block page footer text.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FooterText { get; set; }
#nullable restore
#else
        public string FooterText { get; set; }
#endif
        /// <summary>If mode is customized_block_page: block page header text.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HeaderText { get; set; }
#nullable restore
#else
        public string HeaderText { get; set; }
#endif
        /// <summary>If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.</summary>
        public bool? IncludeContext { get; set; }
        /// <summary>If mode is customized_block_page: full URL to the logo file.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoPath { get; set; }
#nullable restore
#else
        public string LogoPath { get; set; }
#endif
        /// <summary>If mode is customized_block_page: admin email for users to contact.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MailtoAddress { get; set; }
#nullable restore
#else
        public string MailtoAddress { get; set; }
#endif
        /// <summary>If mode is customized_block_page: subject line for emails created from block page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MailtoSubject { get; set; }
#nullable restore
#else
        public string MailtoSubject { get; set; }
#endif
        /// <summary>Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings_mode? Mode { get; set; }
        /// <summary>If mode is customized_block_page: block page title.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>This setting was shared via the Orgs API and cannot be edited by the current account</summary>
        public bool? ReadOnly { get; private set; }
        /// <summary>Account tag of account that shared this setting</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceAccount { get; private set; }
#nullable restore
#else
        public string SourceAccount { get; private set; }
#endif
        /// <summary>If mode is customized_block_page: suppress detailed info at the bottom of the block page.</summary>
        public bool? SuppressFooter { get; set; }
        /// <summary>If mode is redirect_uri: URI to which the user should be redirected.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetUri { get; set; }
#nullable restore
#else
        public string TargetUri { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings"/> and sets the default values.
        /// </summary>
        public ZeroTrustGateway_blockPageSettings()
        {
            AdditionalData = new Dictionary<string, object>();
            Mode = global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings_mode.Customized_block_page;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "background_color", n => { BackgroundColor = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "footer_text", n => { FooterText = n.GetStringValue(); } },
                { "header_text", n => { HeaderText = n.GetStringValue(); } },
                { "include_context", n => { IncludeContext = n.GetBoolValue(); } },
                { "logo_path", n => { LogoPath = n.GetStringValue(); } },
                { "mailto_address", n => { MailtoAddress = n.GetStringValue(); } },
                { "mailto_subject", n => { MailtoSubject = n.GetStringValue(); } },
                { "mode", n => { Mode = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings_mode>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "read_only", n => { ReadOnly = n.GetBoolValue(); } },
                { "source_account", n => { SourceAccount = n.GetStringValue(); } },
                { "suppress_footer", n => { SuppressFooter = n.GetBoolValue(); } },
                { "target_uri", n => { TargetUri = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("background_color", BackgroundColor);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteStringValue("footer_text", FooterText);
            writer.WriteStringValue("header_text", HeaderText);
            writer.WriteBoolValue("include_context", IncludeContext);
            writer.WriteStringValue("logo_path", LogoPath);
            writer.WriteStringValue("mailto_address", MailtoAddress);
            writer.WriteStringValue("mailto_subject", MailtoSubject);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings_mode>("mode", Mode);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("suppress_footer", SuppressFooter);
            writer.WriteStringValue("target_uri", TargetUri);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
