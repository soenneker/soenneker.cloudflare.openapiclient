// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Plugin permissions
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Realtimekit_UpdatePreset_permissions_plugins : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Can close plugins that are already open</summary>
        public bool? CanClose { get; set; }
        /// <summary>Can edit plugin config</summary>
        public bool? CanEditConfig { get; set; }
        /// <summary>Can start plugins</summary>
        public bool? CanStart { get; set; }
        /// <summary>The config property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config? Config { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config Config { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins"/> and sets the default values.
        /// </summary>
        public Realtimekit_UpdatePreset_permissions_plugins()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "can_close", n => { CanClose = n.GetBoolValue(); } },
                { "can_edit_config", n => { CanEditConfig = n.GetBoolValue(); } },
                { "can_start", n => { CanStart = n.GetBoolValue(); } },
                { "config", n => { Config = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config>(global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("can_close", CanClose);
            writer.WriteBoolValue("can_edit_config", CanEditConfig);
            writer.WriteBoolValue("can_start", CanStart);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config>("config", Config);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Realtimekit_UpdatePreset_permissions_plugins_config : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1? RealtimekitUpdatePresetPermissionsPluginsConfigMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1 RealtimekitUpdatePresetPermissionsPluginsConfigMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch? UnionBranch { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch UnionBranch { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins.Realtimekit_UpdatePreset_permissions_plugins_config();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RealtimekitUpdatePresetPermissionsPluginsConfigMember1 = new global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1();
                }
                else if("UnionBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.UnionBranch = new global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RealtimekitUpdatePresetPermissionsPluginsConfigMember1 != null)
                {
                    return RealtimekitUpdatePresetPermissionsPluginsConfigMember1.GetFieldDeserializers();
                }
                else if(UnionBranch != null)
                {
                    return UnionBranch.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(RealtimekitUpdatePresetPermissionsPluginsConfigMember1 != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Realtimekit_UpdatePreset_permissions_plugins_configMember1>(null, RealtimekitUpdatePresetPermissionsPluginsConfigMember1);
                }
                else if(UnionBranch != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.UnionBranch>(null, UnionBranch);
                }
            }
        }
    }
}
#pragma warning restore CS0618
