// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Organizations_api_InnateEntitlements : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The allow_add_subdomain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation? AllowAddSubdomain { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation AllowAddSubdomain { get; set; }
#endif
        /// <summary>The allow_auto_accept_invites property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation? AllowAutoAcceptInvites { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation AllowAutoAcceptInvites { get; set; }
#endif
        /// <summary>The cname_setup_allowed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation? CnameSetupAllowed { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation CnameSetupAllowed { get; set; }
#endif
        /// <summary>The custom_entitlements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Entitlement>? CustomEntitlements { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Entitlement> CustomEntitlements { get; set; }
#endif
        /// <summary>The mhs_certificate_count property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_MaxCountAllocation? MhsCertificateCount { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_MaxCountAllocation MhsCertificateCount { get; set; }
#endif
        /// <summary>The partial_setup_allowed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation? PartialSetupAllowed { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation PartialSetupAllowed { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_InnateEntitlements"/> and sets the default values.
        /// </summary>
        public Organizations_api_InnateEntitlements()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_InnateEntitlements"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_InnateEntitlements CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_InnateEntitlements();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allow_add_subdomain", n => { AllowAddSubdomain = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation.CreateFromDiscriminatorValue); } },
                { "allow_auto_accept_invites", n => { AllowAutoAcceptInvites = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation.CreateFromDiscriminatorValue); } },
                { "cname_setup_allowed", n => { CnameSetupAllowed = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation.CreateFromDiscriminatorValue); } },
                { "custom_entitlements", n => { CustomEntitlements = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Entitlement>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Entitlement.CreateFromDiscriminatorValue)?.AsList(); } },
                { "mhs_certificate_count", n => { MhsCertificateCount = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_MaxCountAllocation>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_MaxCountAllocation.CreateFromDiscriminatorValue); } },
                { "partial_setup_allowed", n => { PartialSetupAllowed = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>(global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>("allow_add_subdomain", AllowAddSubdomain);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>("allow_auto_accept_invites", AllowAutoAcceptInvites);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>("cname_setup_allowed", CnameSetupAllowed);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_Entitlement>("custom_entitlements", CustomEntitlements);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_MaxCountAllocation>("mhs_certificate_count", MhsCertificateCount);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Organizations_api_BoolAllocation>("partial_setup_allowed", PartialSetupAllowed);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
