// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByHostnames"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByPrefixes"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByTags"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFile"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFileWithUrlAndHeaders"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Zone_purge : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything? CachePurgeEverything { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything CachePurgeEverything { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByHostnames"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByHostnames? CachePurgeFlexPurgeByHostnames { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByHostnames CachePurgeFlexPurgeByHostnames { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByPrefixes"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByPrefixes? CachePurgeFlexPurgeByPrefixes { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByPrefixes CachePurgeFlexPurgeByPrefixes { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByTags"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByTags? CachePurgeFlexPurgeByTags { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByTags CachePurgeFlexPurgeByTags { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFile"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFile? CachePurgeSingleFile { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFile CachePurgeSingleFile { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFileWithUrlAndHeaders"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFileWithUrlAndHeaders? CachePurgeSingleFileWithUrlAndHeaders { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFileWithUrlAndHeaders CachePurgeSingleFileWithUrlAndHeaders { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_purge"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_purge CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Zone_purge();
            result.CachePurgeEverything = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything();
            result.CachePurgeFlexPurgeByHostnames = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByHostnames();
            result.CachePurgeFlexPurgeByPrefixes = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByPrefixes();
            result.CachePurgeFlexPurgeByTags = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_FlexPurgeByTags();
            result.CachePurgeSingleFile = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFile();
            result.CachePurgeSingleFileWithUrlAndHeaders = new global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_SingleFileWithUrlAndHeaders();
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(CachePurgeEverything != null || CachePurgeFlexPurgeByHostnames != null || CachePurgeFlexPurgeByPrefixes != null || CachePurgeFlexPurgeByTags != null || CachePurgeSingleFile != null || CachePurgeSingleFileWithUrlAndHeaders != null)
            {
                return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CachePurgeEverything, CachePurgeFlexPurgeByHostnames, CachePurgeFlexPurgeByPrefixes, CachePurgeFlexPurgeByTags, CachePurgeSingleFile, CachePurgeSingleFileWithUrlAndHeaders);
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CachePurge_Everything>(null, CachePurgeEverything, CachePurgeFlexPurgeByHostnames, CachePurgeFlexPurgeByPrefixes, CachePurgeFlexPurgeByTags, CachePurgeSingleFile, CachePurgeSingleFileWithUrlAndHeaders);
        }
    }
}
#pragma warning restore CS0618
