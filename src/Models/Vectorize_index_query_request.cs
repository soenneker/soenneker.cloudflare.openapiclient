// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Vectorize_index_query_request : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A metadata filter expression used to limit nearest neighbor results.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request_filter? Filter { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request_filter Filter { get; set; }
#endif
        /// <summary>Whether to return the metadata associated with the closest vectors.</summary>
        public bool? ReturnMetadata { get; set; }
        /// <summary>Whether to return the values associated with the closest vectors.</summary>
        public bool? ReturnValues { get; set; }
        /// <summary>The number of nearest neighbors to find.</summary>
        public double? TopK { get; set; }
        /// <summary>The search vector that will be used to find the nearest neighbors.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? Vector { get; set; }
#nullable restore
#else
        public List<double?> Vector { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request"/> and sets the default values.
        /// </summary>
        public Vectorize_index_query_request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "filter", n => { Filter = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request_filter>(global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request_filter.CreateFromDiscriminatorValue); } },
                { "returnMetadata", n => { ReturnMetadata = n.GetBoolValue(); } },
                { "returnValues", n => { ReturnValues = n.GetBoolValue(); } },
                { "topK", n => { TopK = n.GetDoubleValue(); } },
                { "vector", n => { Vector = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Vectorize_index_query_request_filter>("filter", Filter);
            writer.WriteBoolValue("returnMetadata", ReturnMetadata);
            writer.WriteBoolValue("returnValues", ReturnValues);
            writer.WriteDoubleValue("topK", TopK);
            writer.WriteCollectionOfPrimitiveValues<double?>("vector", Vector);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
