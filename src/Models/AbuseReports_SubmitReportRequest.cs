// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AbuseReports_SubmitReportRequest : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport? AbuseReportsChildrenAbuseReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport AbuseReportsChildrenAbuseReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport? AbuseReportsDMCAReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport AbuseReportsDMCAReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport? AbuseReportsGeneralReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport AbuseReportsGeneralReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport? AbuseReportsNCSEIReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport AbuseReportsNCSEIReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport? AbuseReportsPhishingReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport AbuseReportsPhishingReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport? AbuseReportsRegistrarWhoisReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport AbuseReportsRegistrarWhoisReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport? AbuseReportsThreatReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport AbuseReportsThreatReport { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport? AbuseReportsTrademarkReport { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport AbuseReportsTrademarkReport { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_SubmitReportRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_SubmitReportRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_SubmitReportRequest();
            if("abuse-reports_ChildrenAbuseReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsChildrenAbuseReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport();
            }
            else if("abuse-reports_DMCAReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsDMCAReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport();
            }
            else if("abuse-reports_GeneralReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsGeneralReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport();
            }
            else if("abuse-reports_NCSEIReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsNCSEIReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport();
            }
            else if("abuse-reports_PhishingReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsPhishingReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport();
            }
            else if("abuse-reports_RegistrarWhoisReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsRegistrarWhoisReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport();
            }
            else if("abuse-reports_ThreatReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsThreatReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport();
            }
            else if("abuse-reports_TrademarkReport".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AbuseReportsTrademarkReport = new global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(AbuseReportsChildrenAbuseReport != null)
            {
                return AbuseReportsChildrenAbuseReport.GetFieldDeserializers();
            }
            else if(AbuseReportsDMCAReport != null)
            {
                return AbuseReportsDMCAReport.GetFieldDeserializers();
            }
            else if(AbuseReportsGeneralReport != null)
            {
                return AbuseReportsGeneralReport.GetFieldDeserializers();
            }
            else if(AbuseReportsNCSEIReport != null)
            {
                return AbuseReportsNCSEIReport.GetFieldDeserializers();
            }
            else if(AbuseReportsPhishingReport != null)
            {
                return AbuseReportsPhishingReport.GetFieldDeserializers();
            }
            else if(AbuseReportsRegistrarWhoisReport != null)
            {
                return AbuseReportsRegistrarWhoisReport.GetFieldDeserializers();
            }
            else if(AbuseReportsThreatReport != null)
            {
                return AbuseReportsThreatReport.GetFieldDeserializers();
            }
            else if(AbuseReportsTrademarkReport != null)
            {
                return AbuseReportsTrademarkReport.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(AbuseReportsChildrenAbuseReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ChildrenAbuseReport>(null, AbuseReportsChildrenAbuseReport);
            }
            else if(AbuseReportsDMCAReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_DMCAReport>(null, AbuseReportsDMCAReport);
            }
            else if(AbuseReportsGeneralReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_GeneralReport>(null, AbuseReportsGeneralReport);
            }
            else if(AbuseReportsNCSEIReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_NCSEIReport>(null, AbuseReportsNCSEIReport);
            }
            else if(AbuseReportsPhishingReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_PhishingReport>(null, AbuseReportsPhishingReport);
            }
            else if(AbuseReportsRegistrarWhoisReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_RegistrarWhoisReport>(null, AbuseReportsRegistrarWhoisReport);
            }
            else if(AbuseReportsThreatReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_ThreatReport>(null, AbuseReportsThreatReport);
            }
            else if(AbuseReportsTrademarkReport != null)
            {
                writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.AbuseReports_TrademarkReport>(null, AbuseReportsTrademarkReport);
            }
        }
    }
}
#pragma warning restore CS0618
