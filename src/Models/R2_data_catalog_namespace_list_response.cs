// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Contains the list of namespaces with optional pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class R2_data_catalog_namespace_list_response : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Contains detailed metadata for each namespace when return_details is true.Each object includes the namespace, UUID, and timestamps.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_details>? Details { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_details> Details { get; set; }
#endif
        /// <summary>Lists namespaces in the catalog.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Namespaces { get; set; }
#nullable restore
#else
        public UntypedNode Namespaces { get; set; }
#endif
        /// <summary>Contains UUIDs for each namespace when return_uuids is true.The order corresponds to the namespaces array.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? NamespaceUuids { get; set; }
#nullable restore
#else
        public List<Guid?> NamespaceUuids { get; set; }
#endif
        /// <summary>Use this opaque token to fetch the next page of results.A null or absent value indicates the last page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NextPageToken { get; set; }
#nullable restore
#else
        public string NextPageToken { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_list_response"/> and sets the default values.
        /// </summary>
        public R2_data_catalog_namespace_list_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_list_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_list_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_list_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "details", n => { Details = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_details>(global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_details.CreateFromDiscriminatorValue)?.AsList(); } },
                { "namespace_uuids", n => { NamespaceUuids = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "namespaces", n => { Namespaces = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "next_page_token", n => { NextPageToken = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.R2_data_catalog_namespace_details>("details", Details);
            writer.WriteObjectValue<UntypedNode>("namespaces", Namespaces);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("namespace_uuids", NamespaceUuids);
            writer.WriteStringValue("next_page_token", NextPageToken);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
