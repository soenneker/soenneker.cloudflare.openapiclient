// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdateWorker_400 : ApiException, IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The primary error message.</summary>
        public override string Message { get => base.Message; }
        /// <summary>The messages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_messages? Messages { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_messages Messages { get; set; }
#endif
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_result? Result { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_result Result { get; set; }
#endif
        /// <summary>Whether the API call was successful.</summary>
        public bool? Success { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400"/> and sets the default values.
        /// </summary>
        public UpdateWorker_400()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "messages", n => { Messages = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_messages>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_messages.CreateFromDiscriminatorValue); } },
                { "result", n => { Result = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_result>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_result.CreateFromDiscriminatorValue); } },
                { "success", n => { Success = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_messages>("messages", Messages);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_api_response_common_failure_result>("result", Result);
            writer.WriteBoolValue("success", Success);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid"/>, <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UpdateWorker_400_errors : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam? WorkersErrorMissingParam { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam WorkersErrorMissingParam { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid? WorkersErrorWorkerInvalid { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid WorkersErrorWorkerInvalid { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid? WorkersErrorWorkerNameInvalid { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid WorkersErrorWorkerNameInvalid { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit? WorkersErrorWorkerNamePreviewLengthLimit { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit WorkersErrorWorkerNamePreviewLengthLimit { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit? WorkersErrorWorkerNameSubdomainLengthLimit { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit WorkersErrorWorkerNameSubdomainLengthLimit { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid? WorkersErrorWorkerObservabilitySamplingRateInvalid { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid WorkersErrorWorkerObservabilitySamplingRateInvalid { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid? WorkersErrorWorkerTagInvalid { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid WorkersErrorWorkerTagInvalid { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit? WorkersErrorWorkerTagLengthLimit { get; set; }
#nullable restore
#else
            public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit WorkersErrorWorkerTagLengthLimit { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400.UpdateWorker_400_errors"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400.UpdateWorker_400_errors CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("code")?.GetStringValue();
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.UpdateWorker_400.UpdateWorker_400_errors();
                if("10003".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorMissingParam = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam();
                }
                else if("10021".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerInvalid = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid();
                }
                else if("10016".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerNameInvalid = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid();
                }
                else if("100315".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerNamePreviewLengthLimit = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit();
                }
                else if("100132".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerNameSubdomainLengthLimit = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit();
                }
                else if("100308".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerObservabilitySamplingRateInvalid = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid();
                }
                else if("100134".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerTagInvalid = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid();
                }
                else if("100102".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.WorkersErrorWorkerTagLengthLimit = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(WorkersErrorMissingParam != null)
                {
                    return WorkersErrorMissingParam.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerInvalid != null)
                {
                    return WorkersErrorWorkerInvalid.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerNameInvalid != null)
                {
                    return WorkersErrorWorkerNameInvalid.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerNamePreviewLengthLimit != null)
                {
                    return WorkersErrorWorkerNamePreviewLengthLimit.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerNameSubdomainLengthLimit != null)
                {
                    return WorkersErrorWorkerNameSubdomainLengthLimit.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerObservabilitySamplingRateInvalid != null)
                {
                    return WorkersErrorWorkerObservabilitySamplingRateInvalid.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerTagInvalid != null)
                {
                    return WorkersErrorWorkerTagInvalid.GetFieldDeserializers();
                }
                else if(WorkersErrorWorkerTagLengthLimit != null)
                {
                    return WorkersErrorWorkerTagLengthLimit.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(WorkersErrorMissingParam != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorMissingParam>(null, WorkersErrorMissingParam);
                }
                else if(WorkersErrorWorkerInvalid != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerInvalid>(null, WorkersErrorWorkerInvalid);
                }
                else if(WorkersErrorWorkerNameInvalid != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameInvalid>(null, WorkersErrorWorkerNameInvalid);
                }
                else if(WorkersErrorWorkerNamePreviewLengthLimit != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNamePreviewLengthLimit>(null, WorkersErrorWorkerNamePreviewLengthLimit);
                }
                else if(WorkersErrorWorkerNameSubdomainLengthLimit != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerNameSubdomainLengthLimit>(null, WorkersErrorWorkerNameSubdomainLengthLimit);
                }
                else if(WorkersErrorWorkerObservabilitySamplingRateInvalid != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerObservabilitySamplingRateInvalid>(null, WorkersErrorWorkerObservabilitySamplingRateInvalid);
                }
                else if(WorkersErrorWorkerTagInvalid != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagInvalid>(null, WorkersErrorWorkerTagInvalid);
                }
                else if(WorkersErrorWorkerTagLengthLimit != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_ErrorWorkerTagLengthLimit>(null, WorkersErrorWorkerTagLengthLimit);
                }
            }
        }
    }
}
#pragma warning restore CS0618
