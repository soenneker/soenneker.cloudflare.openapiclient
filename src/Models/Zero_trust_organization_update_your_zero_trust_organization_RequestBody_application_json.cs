// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.</summary>
        public bool? AllowAuthenticateViaWarp { get; set; }
        /// <summary>The unique subdomain assigned to your Zero Trust organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthDomain { get; set; }
#nullable restore
#else
        public string AuthDomain { get; set; }
#endif
        /// <summary>When set to `true`, users skip the identity provider selection step during login.</summary>
        public bool? AutoRedirectToIdentity { get; set; }
        /// <summary>The custom_pages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_custom_pages? CustomPages { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_custom_pages CustomPages { get; set; }
#endif
        /// <summary>Lock all settings as Read-Only in the Dashboard, regardless of user permission. Updates may only be made via the API or Terraform for this account when enabled.</summary>
        public bool? IsUiReadOnly { get; set; }
        /// <summary>The login_design property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_login_design? LoginDesign { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Access_login_design LoginDesign { get; set; }
#endif
        /// <summary>The name of your Zero Trust organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SessionDuration { get; set; }
#nullable restore
#else
        public string SessionDuration { get; set; }
#endif
        /// <summary>A description of the reason why the UI read only field is being toggled.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UiReadOnlyToggleReason { get; set; }
#nullable restore
#else
        public string UiReadOnlyToggleReason { get; set; }
#endif
        /// <summary>The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserSeatExpirationInactiveTime { get; set; }
#nullable restore
#else
        public string UserSeatExpirationInactiveTime { get; set; }
#endif
        /// <summary>The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WarpAuthSessionDuration { get; set; }
#nullable restore
#else
        public string WarpAuthSessionDuration { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json"/> and sets the default values.
        /// </summary>
        public Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Zero_trust_organization_update_your_zero_trust_organization_RequestBody_application_json();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allow_authenticate_via_warp", n => { AllowAuthenticateViaWarp = n.GetBoolValue(); } },
                { "auth_domain", n => { AuthDomain = n.GetStringValue(); } },
                { "auto_redirect_to_identity", n => { AutoRedirectToIdentity = n.GetBoolValue(); } },
                { "custom_pages", n => { CustomPages = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_custom_pages>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_custom_pages.CreateFromDiscriminatorValue); } },
                { "is_ui_read_only", n => { IsUiReadOnly = n.GetBoolValue(); } },
                { "login_design", n => { LoginDesign = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_login_design>(global::Soenneker.Cloudflare.OpenApiClient.Models.Access_login_design.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "session_duration", n => { SessionDuration = n.GetStringValue(); } },
                { "ui_read_only_toggle_reason", n => { UiReadOnlyToggleReason = n.GetStringValue(); } },
                { "user_seat_expiration_inactive_time", n => { UserSeatExpirationInactiveTime = n.GetStringValue(); } },
                { "warp_auth_session_duration", n => { WarpAuthSessionDuration = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("allow_authenticate_via_warp", AllowAuthenticateViaWarp);
            writer.WriteStringValue("auth_domain", AuthDomain);
            writer.WriteBoolValue("auto_redirect_to_identity", AutoRedirectToIdentity);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_custom_pages>("custom_pages", CustomPages);
            writer.WriteBoolValue("is_ui_read_only", IsUiReadOnly);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Access_login_design>("login_design", LoginDesign);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("session_duration", SessionDuration);
            writer.WriteStringValue("ui_read_only_toggle_reason", UiReadOnlyToggleReason);
            writer.WriteStringValue("user_seat_expiration_inactive_time", UserSeatExpirationInactiveTime);
            writer.WriteStringValue("warp_auth_session_duration", WarpAuthSessionDuration);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
