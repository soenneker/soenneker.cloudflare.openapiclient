// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Account_request_tracer_request_trace : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The body property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_body? Body { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_body Body { get; set; }
#endif
        /// <summary>Additional request parameters</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_context? Context { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_context Context { get; set; }
#endif
        /// <summary>Cookies added to tracing request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_cookies? Cookies { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_cookies Cookies { get; set; }
#endif
        /// <summary>Headers added to tracing request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_headers? Headers { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_headers Headers { get; set; }
#endif
        /// <summary>HTTP Method of tracing request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Method { get; set; }
#nullable restore
#else
        public string Method { get; set; }
#endif
        /// <summary>HTTP Protocol of tracing request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Protocol { get; set; }
#nullable restore
#else
        public string Protocol { get; set; }
#endif
        /// <summary>Skip sending the request to the Origin server after all rules evaluation</summary>
        public bool? SkipResponse { get; set; }
        /// <summary>URL to which perform tracing request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace"/> and sets the default values.
        /// </summary>
        public Account_request_tracer_request_trace()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "body", n => { Body = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_body>(global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_body.CreateFromDiscriminatorValue); } },
                { "context", n => { Context = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_context>(global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_context.CreateFromDiscriminatorValue); } },
                { "cookies", n => { Cookies = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_cookies>(global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_cookies.CreateFromDiscriminatorValue); } },
                { "headers", n => { Headers = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_headers>(global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_headers.CreateFromDiscriminatorValue); } },
                { "method", n => { Method = n.GetStringValue(); } },
                { "protocol", n => { Protocol = n.GetStringValue(); } },
                { "skip_response", n => { SkipResponse = n.GetBoolValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_body>("body", Body);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_context>("context", Context);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_cookies>("cookies", Cookies);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Account_request_tracer_request_trace_headers>("headers", Headers);
            writer.WriteStringValue("method", Method);
            writer.WriteStringValue("protocol", Protocol);
            writer.WriteBoolValue("skip_response", SkipResponse);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
