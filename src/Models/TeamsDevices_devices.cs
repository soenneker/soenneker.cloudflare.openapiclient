// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TeamsDevices_devices : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>When the device was created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_created? Created { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_created Created { get; set; }
#endif
        /// <summary>True if the device was deleted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_deleted? Deleted { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_deleted Deleted { get; set; }
#endif
        /// <summary>The device_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_platform? DeviceType { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_platform DeviceType { get; set; }
#endif
        /// <summary>Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_registration_id? Id { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_registration_id Id { get; set; }
#endif
        /// <summary>IPv4 or IPv6 address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_ip? Ip { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_ip Ip { get; set; }
#endif
        /// <summary>The device&apos;s public key.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_key? Key { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_key Key { get; set; }
#endif
        /// <summary>When the device last connected to Cloudflare services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_last_seen? LastSeen { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_last_seen LastSeen { get; set; }
#endif
        /// <summary>The device mac address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_mac_address? MacAddress { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_mac_address MacAddress { get; set; }
#endif
        /// <summary>The device manufacturer name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_manufacturer? Manufacturer { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_manufacturer Manufacturer { get; set; }
#endif
        /// <summary>The device model name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_model? Model { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_model Model { get; set; }
#endif
        /// <summary>The device name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_schemasName? Name { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_schemasName Name { get; set; }
#endif
        /// <summary>The Linux distro name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_name? OsDistroName { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_name OsDistroName { get; set; }
#endif
        /// <summary>The Linux distro revision.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_revision? OsDistroRevision { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_revision OsDistroRevision { get; set; }
#endif
        /// <summary>The operating system version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version? OsVersion { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version OsVersion { get; set; }
#endif
        /// <summary>The operating system version extra parameter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version_extra? OsVersionExtra { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version_extra OsVersionExtra { get; set; }
#endif
        /// <summary>When the device was revoked.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_revoked_at? RevokedAt { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_revoked_at RevokedAt { get; set; }
#endif
        /// <summary>The device serial number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_serial_number? SerialNumber { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_serial_number SerialNumber { get; set; }
#endif
        /// <summary>When the device was updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_updated? Updated { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_updated Updated { get; set; }
#endif
        /// <summary>The user property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_user? User { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_user User { get; set; }
#endif
        /// <summary>The WARP client version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_version? Version { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_version Version { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_devices"/> and sets the default values.
        /// </summary>
        public TeamsDevices_devices()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_devices"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_devices CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_devices();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created", n => { Created = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_created>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_created.CreateFromDiscriminatorValue); } },
                { "deleted", n => { Deleted = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_deleted>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_deleted.CreateFromDiscriminatorValue); } },
                { "device_type", n => { DeviceType = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_platform>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_platform.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_registration_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_registration_id.CreateFromDiscriminatorValue); } },
                { "ip", n => { Ip = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_ip>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_ip.CreateFromDiscriminatorValue); } },
                { "key", n => { Key = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_key>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_key.CreateFromDiscriminatorValue); } },
                { "last_seen", n => { LastSeen = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_last_seen>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_last_seen.CreateFromDiscriminatorValue); } },
                { "mac_address", n => { MacAddress = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_mac_address>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_mac_address.CreateFromDiscriminatorValue); } },
                { "manufacturer", n => { Manufacturer = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_manufacturer>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_manufacturer.CreateFromDiscriminatorValue); } },
                { "model", n => { Model = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_model>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_model.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_schemasName>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_schemasName.CreateFromDiscriminatorValue); } },
                { "os_distro_name", n => { OsDistroName = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_name>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_name.CreateFromDiscriminatorValue); } },
                { "os_distro_revision", n => { OsDistroRevision = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_revision>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_revision.CreateFromDiscriminatorValue); } },
                { "os_version", n => { OsVersion = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version.CreateFromDiscriminatorValue); } },
                { "os_version_extra", n => { OsVersionExtra = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version_extra>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version_extra.CreateFromDiscriminatorValue); } },
                { "revoked_at", n => { RevokedAt = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_revoked_at>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_revoked_at.CreateFromDiscriminatorValue); } },
                { "serial_number", n => { SerialNumber = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_serial_number>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_serial_number.CreateFromDiscriminatorValue); } },
                { "updated", n => { Updated = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_updated>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_updated.CreateFromDiscriminatorValue); } },
                { "user", n => { User = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_user>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_user.CreateFromDiscriminatorValue); } },
                { "version", n => { Version = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_version>(global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_version.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_created>("created", Created);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_deleted>("deleted", Deleted);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_platform>("device_type", DeviceType);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_registration_id>("id", Id);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_ip>("ip", Ip);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_key>("key", Key);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_last_seen>("last_seen", LastSeen);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_mac_address>("mac_address", MacAddress);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_manufacturer>("manufacturer", Manufacturer);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_model>("model", Model);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_schemasName>("name", Name);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_name>("os_distro_name", OsDistroName);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_distro_revision>("os_distro_revision", OsDistroRevision);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version>("os_version", OsVersion);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_os_version_extra>("os_version_extra", OsVersionExtra);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_revoked_at>("revoked_at", RevokedAt);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_serial_number>("serial_number", SerialNumber);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_updated>("updated", Updated);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_user>("user", User);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.TeamsDevices_version>("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
