// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Statuses for domain transfers into Cloudflare Registrar.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RegistrarApi_transfer_in : IAdditionalDataHolder, IParsable
    {
        /// <summary>Form of authorization has been accepted by the registrant.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_accept_foa? AcceptFoa { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Shows transfer status with the registry.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_approve_transfer? ApproveTransfer { get; set; }
        /// <summary>Indicates if cancellation is still possible.</summary>
        public bool? CanCancelTransfer { get; set; }
        /// <summary>Privacy guards are disabled at the foreign registrar.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_disable_privacy? DisablePrivacy { get; set; }
        /// <summary>Auth code has been entered and verified.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_enter_auth_code? EnterAuthCode { get; set; }
        /// <summary>Domain is unlocked at the foreign registrar.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_unlock_domain? UnlockDomain { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in"/> and sets the default values.
        /// </summary>
        public RegistrarApi_transfer_in()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accept_foa", n => { AcceptFoa = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_accept_foa>(); } },
                { "approve_transfer", n => { ApproveTransfer = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_approve_transfer>(); } },
                { "can_cancel_transfer", n => { CanCancelTransfer = n.GetBoolValue(); } },
                { "disable_privacy", n => { DisablePrivacy = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_disable_privacy>(); } },
                { "enter_auth_code", n => { EnterAuthCode = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_enter_auth_code>(); } },
                { "unlock_domain", n => { UnlockDomain = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_unlock_domain>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_accept_foa>("accept_foa", AcceptFoa);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_approve_transfer>("approve_transfer", ApproveTransfer);
            writer.WriteBoolValue("can_cancel_transfer", CanCancelTransfer);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_disable_privacy>("disable_privacy", DisablePrivacy);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_enter_auth_code>("enter_auth_code", EnterAuthCode);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.RegistrarApi_transfer_in_unlock_domain>("unlock_domain", UnlockDomain);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
