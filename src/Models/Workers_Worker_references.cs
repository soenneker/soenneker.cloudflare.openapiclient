// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Other resources that reference the Worker and depend on it existing.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Workers_Worker_references : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Other Workers that reference the Worker as an outbound for a dispatch namespace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_dispatch_namespace_outbounds>? DispatchNamespaceOutbounds { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_dispatch_namespace_outbounds> DispatchNamespaceOutbounds { get; set; }
#endif
        /// <summary>Custom domains connected to the Worker.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_domains>? Domains { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_domains> Domains { get; set; }
#endif
        /// <summary>Other Workers that reference Durable Object classes implemented by the Worker.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_durable_objects>? DurableObjects { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_durable_objects> DurableObjects { get; set; }
#endif
        /// <summary>Queues that send messages to the Worker.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_queues>? Queues { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_queues> Queues { get; set; }
#endif
        /// <summary>Other Workers that reference the Worker using [service bindings](https://developers.cloudflare.com/workers/runtime-apis/bindings/service-bindings/).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_workers>? Workers { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_workers> Workers { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references"/> and sets the default values.
        /// </summary>
        public Workers_Worker_references()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dispatch_namespace_outbounds", n => { DispatchNamespaceOutbounds = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_dispatch_namespace_outbounds>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_dispatch_namespace_outbounds.CreateFromDiscriminatorValue)?.AsList(); } },
                { "domains", n => { Domains = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_domains>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_domains.CreateFromDiscriminatorValue)?.AsList(); } },
                { "durable_objects", n => { DurableObjects = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_durable_objects>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_durable_objects.CreateFromDiscriminatorValue)?.AsList(); } },
                { "queues", n => { Queues = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_queues>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_queues.CreateFromDiscriminatorValue)?.AsList(); } },
                { "workers", n => { Workers = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_workers>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_workers.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_dispatch_namespace_outbounds>("dispatch_namespace_outbounds", DispatchNamespaceOutbounds);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_domains>("domains", Domains);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_durable_objects>("durable_objects", DurableObjects);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_queues>("queues", Queues);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_Worker_references_workers>("workers", Workers);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
