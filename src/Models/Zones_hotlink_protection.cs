// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it&apos;s not another site requesting them. People will still be able to download and view images from your page, but other sites won&apos;t be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Zones_hotlink_protection : global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_base, IParsable
    {
        /// <summary>Strongly‚Äêtyped enum value</summary>
        public new Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection_value? Value { get; set; } = global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection_value.Off;

        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection"/> and sets the default values.
        /// </summary>
        public Zones_hotlink_protection() : base()
        {
            Value = global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection_value.Off;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            var map = new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers());
            map["value"] = n => { Value = n.GetEnumValue<Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection_value>(); };
            return map;
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<Soenneker.Cloudflare.OpenApiClient.Models.Zones_hotlink_protection_value>("value", Value);
        }
    }
}
#pragma warning restore CS0618
