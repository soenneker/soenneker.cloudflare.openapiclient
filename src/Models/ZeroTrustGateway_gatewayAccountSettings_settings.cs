// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Account settings
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ZeroTrustGateway_gatewayAccountSettings_settings : IAdditionalDataHolder, IParsable
    {
        /// <summary>Activity log settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_activityLogSettings? ActivityLog { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_activityLogSettings ActivityLog { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Anti-virus settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_antiVirusSettings? Antivirus { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_antiVirusSettings Antivirus { get; set; }
#endif
        /// <summary>Block page layout settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings? BlockPage { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings BlockPage { get; set; }
#endif
        /// <summary>DLP body scanning settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_bodyScanningSettings? BodyScanning { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_bodyScanningSettings BodyScanning { get; set; }
#endif
        /// <summary>Browser isolation settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_browserIsolationSettings? BrowserIsolation { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_browserIsolationSettings BrowserIsolation { get; set; }
#endif
        /// <summary>Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_certificateSettings? Certificate { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_certificateSettings Certificate { get; set; }
#endif
        /// <summary>Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_customCertificateSettings? CustomCertificate { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_customCertificateSettings CustomCertificate { get; set; }
#endif
        /// <summary>Extended e-mail matching settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_extendedEmailMatching? ExtendedEmailMatching { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_extendedEmailMatching ExtendedEmailMatching { get; set; }
#endif
        /// <summary>FIPS settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_fipsSettings? Fips { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_fipsSettings Fips { get; set; }
#endif
        /// <summary>Setting to enable host selector in egress policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_hostSelectorSettings? HostSelector { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_hostSelectorSettings HostSelector { get; set; }
#endif
        /// <summary>Setting to define inspection settings</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_inspectionSettings? Inspection { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_inspectionSettings Inspection { get; set; }
#endif
        /// <summary>Protocol Detection settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_protocolDetection? ProtocolDetection { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_protocolDetection ProtocolDetection { get; set; }
#endif
        /// <summary>Sandbox settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_sandbox? Sandbox { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_sandbox Sandbox { get; set; }
#endif
        /// <summary>TLS interception settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_tlsSettings? TlsDecrypt { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_tlsSettings TlsDecrypt { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_gatewayAccountSettings_settings"/> and sets the default values.
        /// </summary>
        public ZeroTrustGateway_gatewayAccountSettings_settings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_gatewayAccountSettings_settings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_gatewayAccountSettings_settings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_gatewayAccountSettings_settings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activity_log", n => { ActivityLog = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_activityLogSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_activityLogSettings.CreateFromDiscriminatorValue); } },
                { "antivirus", n => { Antivirus = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_antiVirusSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_antiVirusSettings.CreateFromDiscriminatorValue); } },
                { "block_page", n => { BlockPage = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings.CreateFromDiscriminatorValue); } },
                { "body_scanning", n => { BodyScanning = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_bodyScanningSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_bodyScanningSettings.CreateFromDiscriminatorValue); } },
                { "browser_isolation", n => { BrowserIsolation = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_browserIsolationSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_browserIsolationSettings.CreateFromDiscriminatorValue); } },
                { "certificate", n => { Certificate = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_certificateSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_certificateSettings.CreateFromDiscriminatorValue); } },
                { "custom_certificate", n => { CustomCertificate = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_customCertificateSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_customCertificateSettings.CreateFromDiscriminatorValue); } },
                { "extended_email_matching", n => { ExtendedEmailMatching = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_extendedEmailMatching>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_extendedEmailMatching.CreateFromDiscriminatorValue); } },
                { "fips", n => { Fips = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_fipsSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_fipsSettings.CreateFromDiscriminatorValue); } },
                { "host_selector", n => { HostSelector = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_hostSelectorSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_hostSelectorSettings.CreateFromDiscriminatorValue); } },
                { "inspection", n => { Inspection = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_inspectionSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_inspectionSettings.CreateFromDiscriminatorValue); } },
                { "protocol_detection", n => { ProtocolDetection = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_protocolDetection>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_protocolDetection.CreateFromDiscriminatorValue); } },
                { "sandbox", n => { Sandbox = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_sandbox>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_sandbox.CreateFromDiscriminatorValue); } },
                { "tls_decrypt", n => { TlsDecrypt = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_tlsSettings>(global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_tlsSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_activityLogSettings>("activity_log", ActivityLog);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_antiVirusSettings>("antivirus", Antivirus);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_blockPageSettings>("block_page", BlockPage);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_bodyScanningSettings>("body_scanning", BodyScanning);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_browserIsolationSettings>("browser_isolation", BrowserIsolation);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_certificateSettings>("certificate", Certificate);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_customCertificateSettings>("custom_certificate", CustomCertificate);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_extendedEmailMatching>("extended_email_matching", ExtendedEmailMatching);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_fipsSettings>("fips", Fips);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_hostSelectorSettings>("host_selector", HostSelector);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_inspectionSettings>("inspection", Inspection);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_protocolDetection>("protocol_detection", ProtocolDetection);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_sandbox>("sandbox", Sandbox);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.ZeroTrustGateway_tlsSettings>("tls_decrypt", TlsDecrypt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
