// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ApiShield_operation_feature_thresholds_thresholds : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The total number of auth-ids seen across this calculation.</summary>
        public int? AuthIdTokens { get; set; }
        /// <summary>The number of data points used for the threshold suggestion calculation.</summary>
        public int? DataPoints { get; set; }
        /// <summary>The last_updated property</summary>
        public DateTimeOffset? LastUpdated { get; set; }
        /// <summary>The p50 quantile of requests (in period_seconds).</summary>
        public int? P50 { get; set; }
        /// <summary>The p90 quantile of requests (in period_seconds).</summary>
        public int? P90 { get; set; }
        /// <summary>The p99 quantile of requests (in period_seconds).</summary>
        public int? P99 { get; set; }
        /// <summary>The period over which this threshold is suggested.</summary>
        public int? PeriodSeconds { get; set; }
        /// <summary>The estimated number of requests covered by these calculations.</summary>
        public int? Requests { get; set; }
        /// <summary>The suggested threshold in requests done by the same auth_id or period_seconds.</summary>
        public int? SuggestedThreshold { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ApiShield_operation_feature_thresholds_thresholds"/> and sets the default values.
        /// </summary>
        public ApiShield_operation_feature_thresholds_thresholds()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.ApiShield_operation_feature_thresholds_thresholds"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.ApiShield_operation_feature_thresholds_thresholds CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.ApiShield_operation_feature_thresholds_thresholds();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auth_id_tokens", n => { AuthIdTokens = n.GetIntValue(); } },
                { "data_points", n => { DataPoints = n.GetIntValue(); } },
                { "last_updated", n => { LastUpdated = n.GetDateTimeOffsetValue(); } },
                { "p50", n => { P50 = n.GetIntValue(); } },
                { "p90", n => { P90 = n.GetIntValue(); } },
                { "p99", n => { P99 = n.GetIntValue(); } },
                { "period_seconds", n => { PeriodSeconds = n.GetIntValue(); } },
                { "requests", n => { Requests = n.GetIntValue(); } },
                { "suggested_threshold", n => { SuggestedThreshold = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("auth_id_tokens", AuthIdTokens);
            writer.WriteIntValue("data_points", DataPoints);
            writer.WriteDateTimeOffsetValue("last_updated", LastUpdated);
            writer.WriteIntValue("p50", P50);
            writer.WriteIntValue("p90", P90);
            writer.WriteIntValue("p99", P99);
            writer.WriteIntValue("period_seconds", PeriodSeconds);
            writer.WriteIntValue("requests", Requests);
            writer.WriteIntValue("suggested_threshold", SuggestedThreshold);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
