// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Radar_get_certificate_authority_details_200_result_certificateAuthority : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The inclusion status of a Certificate Authority (CA) in the trust store.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_appleStatus? AppleStatus { get; set; }
        /// <summary>The authorityKeyIdentifier value extracted from the certificate PEM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorityKeyIdentifier { get; set; }
#nullable restore
#else
        public string AuthorityKeyIdentifier { get; set; }
#endif
        /// <summary>Specifies the type of certificate in the trust chain.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_certificateRecordType? CertificateRecordType { get; set; }
        /// <summary>The inclusion status of a Certificate Authority (CA) in the trust store.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_chromeStatus? ChromeStatus { get; set; }
        /// <summary>The two-letter ISO country code where the CA organization is based.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The full country name corresponding to the country code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryName { get; set; }
#nullable restore
#else
        public string CountryName { get; set; }
#endif
        /// <summary>The inclusion status of a Certificate Authority (CA) in the trust store.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_microsoftStatus? MicrosoftStatus { get; set; }
        /// <summary>The inclusion status of a Certificate Authority (CA) in the trust store.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_mozillaStatus? MozillaStatus { get; set; }
        /// <summary>The full name of the certificate authority (CA).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The organization that owns and operates the CA.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Owner { get; set; }
#nullable restore
#else
        public string Owner { get; set; }
#endif
        /// <summary>The name of the parent/root certificate authority that issued this intermediate certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentName { get; set; }
#nullable restore
#else
        public string ParentName { get; set; }
#endif
        /// <summary>The SHA-256 fingerprint of the parent certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentSha256Fingerprint { get; set; }
#nullable restore
#else
        public string ParentSha256Fingerprint { get; set; }
#endif
        /// <summary>CAs from the same owner.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_related>? Related { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_related> Related { get; set; }
#endif
        /// <summary>The current revocation status of a Certificate Authority (CA) certificate.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_revocationStatus? RevocationStatus { get; set; }
        /// <summary>The SHA-256 fingerprint of the intermediate certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sha256Fingerprint { get; set; }
#nullable restore
#else
        public string Sha256Fingerprint { get; set; }
#endif
        /// <summary>The subjectKeyIdentifier value extracted from the certificate PEM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubjectKeyIdentifier { get; set; }
#nullable restore
#else
        public string SubjectKeyIdentifier { get; set; }
#endif
        /// <summary>The start date of the certificate’s validity period (ISO format).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ValidFrom { get; set; }
#nullable restore
#else
        public string ValidFrom { get; set; }
#endif
        /// <summary>The end date of the certificate’s validity period (ISO format).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ValidTo { get; set; }
#nullable restore
#else
        public string ValidTo { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority"/> and sets the default values.
        /// </summary>
        public Radar_get_certificate_authority_details_200_result_certificateAuthority()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "appleStatus", n => { AppleStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_appleStatus>(); } },
                { "authorityKeyIdentifier", n => { AuthorityKeyIdentifier = n.GetStringValue(); } },
                { "certificateRecordType", n => { CertificateRecordType = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_certificateRecordType>(); } },
                { "chromeStatus", n => { ChromeStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_chromeStatus>(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "countryName", n => { CountryName = n.GetStringValue(); } },
                { "microsoftStatus", n => { MicrosoftStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_microsoftStatus>(); } },
                { "mozillaStatus", n => { MozillaStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_mozillaStatus>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "owner", n => { Owner = n.GetStringValue(); } },
                { "parentName", n => { ParentName = n.GetStringValue(); } },
                { "parentSha256Fingerprint", n => { ParentSha256Fingerprint = n.GetStringValue(); } },
                { "related", n => { Related = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_related>(global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_related.CreateFromDiscriminatorValue)?.AsList(); } },
                { "revocationStatus", n => { RevocationStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_revocationStatus>(); } },
                { "sha256Fingerprint", n => { Sha256Fingerprint = n.GetStringValue(); } },
                { "subjectKeyIdentifier", n => { SubjectKeyIdentifier = n.GetStringValue(); } },
                { "validFrom", n => { ValidFrom = n.GetStringValue(); } },
                { "validTo", n => { ValidTo = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_appleStatus>("appleStatus", AppleStatus);
            writer.WriteStringValue("authorityKeyIdentifier", AuthorityKeyIdentifier);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_certificateRecordType>("certificateRecordType", CertificateRecordType);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_chromeStatus>("chromeStatus", ChromeStatus);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("countryName", CountryName);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_microsoftStatus>("microsoftStatus", MicrosoftStatus);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_mozillaStatus>("mozillaStatus", MozillaStatus);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("owner", Owner);
            writer.WriteStringValue("parentName", ParentName);
            writer.WriteStringValue("parentSha256Fingerprint", ParentSha256Fingerprint);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_related>("related", Related);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Radar_get_certificate_authority_details_200_result_certificateAuthority_revocationStatus>("revocationStatus", RevocationStatus);
            writer.WriteStringValue("sha256Fingerprint", Sha256Fingerprint);
            writer.WriteStringValue("subjectKeyIdentifier", SubjectKeyIdentifier);
            writer.WriteStringValue("validFrom", ValidFrom);
            writer.WriteStringValue("validTo", ValidTo);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
