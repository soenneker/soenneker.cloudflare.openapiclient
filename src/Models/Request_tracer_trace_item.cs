// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// List of steps acting on request/response
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Request_tracer_trace_item : IAdditionalDataHolder, IParsable
    {
        /// <summary>If step type is rule, then action performed by this rule</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Action { get; set; }
#nullable restore
#else
        public string Action { get; set; }
#endif
        /// <summary>If step type is rule, then action parameters of this rule as JSON</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item_action_parameters? ActionParameters { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item_action_parameters ActionParameters { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>If step type is rule or ruleset, the description of this entity</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>If step type is rule, then expression used to match for this rule</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Expression { get; set; }
#nullable restore
#else
        public string Expression { get; set; }
#endif
        /// <summary>If step type is ruleset, then kind of this ruleset</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kind { get; set; }
#nullable restore
#else
        public string Kind { get; set; }
#endif
        /// <summary>Whether tracing step affected tracing request/response</summary>
        public bool? Matched { get; set; }
        /// <summary>If step type is ruleset, then name of this ruleset</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Tracing step identifying name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StepName { get; set; }
#nullable restore
#else
        public string StepName { get; set; }
#endif
        /// <summary>The trace property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item>? Trace { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item> Trace { get; set; }
#endif
        /// <summary>Tracing step type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item"/> and sets the default values.
        /// </summary>
        public Request_tracer_trace_item()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetStringValue(); } },
                { "action_parameters", n => { ActionParameters = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item_action_parameters>(global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item_action_parameters.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "expression", n => { Expression = n.GetStringValue(); } },
                { "kind", n => { Kind = n.GetStringValue(); } },
                { "matched", n => { Matched = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "step_name", n => { StepName = n.GetStringValue(); } },
                { "trace", n => { Trace = n.GetCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item>(global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item.CreateFromDiscriminatorValue)?.AsList(); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("action", Action);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item_action_parameters>("action_parameters", ActionParameters);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("expression", Expression);
            writer.WriteStringValue("kind", Kind);
            writer.WriteBoolValue("matched", Matched);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("step_name", StepName);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Cloudflare.OpenApiClient.Models.Request_tracer_trace_item>("trace", Trace);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
