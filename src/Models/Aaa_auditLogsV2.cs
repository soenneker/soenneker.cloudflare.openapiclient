// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Aaa_auditLogsV2 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Contains account related information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_account? Account { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_account Account { get; set; }
#endif
        /// <summary>Provides information about the action performed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_action? Action { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_action Action { get; set; }
#endif
        /// <summary>Provides details about the actor who performed the action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_actor? Actor { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_actor Actor { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A unique identifier for the audit log entry.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasIdentifier? Id { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasIdentifier Id { get; set; }
#endif
        /// <summary>Provides raw information about the request and response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_raw? Raw { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_raw Raw { get; set; }
#endif
        /// <summary>Provides details about the affected resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_resource? Resource { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_resource Resource { get; set; }
#endif
        /// <summary>Provides details about the zone affected by the action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_zone? Zone { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_zone Zone { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2"/> and sets the default values.
        /// </summary>
        public Aaa_auditLogsV2()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_account>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_account.CreateFromDiscriminatorValue); } },
                { "action", n => { Action = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_action>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_action.CreateFromDiscriminatorValue); } },
                { "actor", n => { Actor = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_actor>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_actor.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasIdentifier>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasIdentifier.CreateFromDiscriminatorValue); } },
                { "raw", n => { Raw = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_raw>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_raw.CreateFromDiscriminatorValue); } },
                { "resource", n => { Resource = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_resource>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_resource.CreateFromDiscriminatorValue); } },
                { "zone", n => { Zone = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_zone>(global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_zone.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_account>("account", Account);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_action>("action", Action);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_actor>("actor", Actor);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_schemasIdentifier>("id", Id);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_raw>("raw", Raw);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_resource>("resource", Resource);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Aaa_auditLogsV2_zone>("zone", Zone);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
