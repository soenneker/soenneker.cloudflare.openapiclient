// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    /// <summary>
    /// Configuration for assets within a Worker.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Workers_multipartScript_metadata_assets_config : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The contents of a _headers file (used to attach custom headers on asset responses).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Headers { get; set; }
#nullable restore
#else
        public string Headers { get; set; }
#endif
        /// <summary>Determines the redirects and rewrites of requests for HTML content.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_html_handling? HtmlHandling { get; set; }
        /// <summary>Determines the response when a request does not match a static asset, and there is no Worker script.</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_not_found_handling? NotFoundHandling { get; set; }
        /// <summary>The contents of a _redirects file (used to apply redirects or proxy paths ahead of asset serving).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Redirects { get; set; }
#nullable restore
#else
        public string Redirects { get; set; }
#endif
        /// <summary>The run_worker_first property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first? RunWorkerFirst { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first RunWorkerFirst { get; set; }
#endif
        /// <summary>When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.</summary>
        [Obsolete("")]
        public bool? ServeDirectly { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config"/> and sets the default values.
        /// </summary>
        public Workers_multipartScript_metadata_assets_config()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "_headers", n => { Headers = n.GetStringValue(); } },
                { "html_handling", n => { HtmlHandling = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_html_handling>(); } },
                { "not_found_handling", n => { NotFoundHandling = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_not_found_handling>(); } },
                { "_redirects", n => { Redirects = n.GetStringValue(); } },
                { "run_worker_first", n => { RunWorkerFirst = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first>(global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first.CreateFromDiscriminatorValue); } },
                { "serve_directly", n => { ServeDirectly = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("_headers", Headers);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_html_handling>("html_handling", HtmlHandling);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config_not_found_handling>("not_found_handling", NotFoundHandling);
            writer.WriteStringValue("_redirects", Redirects);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first>("run_worker_first", RunWorkerFirst);
            writer.WriteBoolValue("serve_directly", ServeDirectly);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Workers_multipartScript_metadata_assets_config_run_worker_first : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.Cloudflare.OpenApiClient.Models.Workers_multipartScript_metadata_assets_config.Workers_multipartScript_metadata_assets_config_run_worker_first();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
