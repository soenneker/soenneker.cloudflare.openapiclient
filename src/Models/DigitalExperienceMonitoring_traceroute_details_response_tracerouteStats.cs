// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The availabilityPct property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time? AvailabilityPct { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time AvailabilityPct { get; set; }
#endif
        /// <summary>The hopsCount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time? HopsCount { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time HopsCount { get; set; }
#endif
        /// <summary>The packetLossPct property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time? PacketLossPct { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time PacketLossPct { get; set; }
#endif
        /// <summary>The roundTripTimeMs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time? RoundTripTimeMs { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time RoundTripTimeMs { get; set; }
#endif
        /// <summary>Count of unique devices that have run this test in the given time period</summary>
        public int? UniqueDevicesTotal { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats"/> and sets the default values.
        /// </summary>
        public DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_traceroute_details_response_tracerouteStats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "availabilityPct", n => { AvailabilityPct = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time.CreateFromDiscriminatorValue); } },
                { "hopsCount", n => { HopsCount = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time.CreateFromDiscriminatorValue); } },
                { "packetLossPct", n => { PacketLossPct = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time.CreateFromDiscriminatorValue); } },
                { "roundTripTimeMs", n => { RoundTripTimeMs = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time>(global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time.CreateFromDiscriminatorValue); } },
                { "uniqueDevicesTotal", n => { UniqueDevicesTotal = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time>("availabilityPct", AvailabilityPct);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time>("hopsCount", HopsCount);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_pct_over_time>("packetLossPct", PacketLossPct);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.DigitalExperienceMonitoring_test_stat_over_time>("roundTripTimeMs", RoundTripTimeMs);
            writer.WriteIntValue("uniqueDevicesTotal", UniqueDevicesTotal);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
