// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Cloudflare.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomIndicatorFeeds_indicator_feed_metadata : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date and time when the data entry was created</summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>The description of the example test</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_description? Description { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_description Description { get; set; }
#endif
        /// <summary>The unique identifier for the indicator feed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_id? Id { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_id Id { get; set; }
#endif
        /// <summary>Whether the indicator feed can be attributed to a provider</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_attributable? IsAttributable { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_attributable IsAttributable { get; set; }
#endif
        /// <summary>Whether the indicator feed can be downloaded</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_downloadable? IsDownloadable { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_downloadable IsDownloadable { get; set; }
#endif
        /// <summary>Whether the indicator feed is exposed to customers</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_public? IsPublic { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_public IsPublic { get; set; }
#endif
        /// <summary>Status of the latest snapshot uploaded</summary>
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata_latest_upload_status? LatestUploadStatus { get; set; }
        /// <summary>The date and time when the data entry was last modified</summary>
        public DateTimeOffset? ModifiedOn { get; set; }
        /// <summary>The name of the indicator feed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_name? Name { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_name Name { get; set; }
#endif
        /// <summary>The unique identifier for the provider</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_id? ProviderId { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_id ProviderId { get; set; }
#endif
        /// <summary>The provider of the indicator feed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_name? ProviderName { get; set; }
#nullable restore
#else
        public global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_name ProviderName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata"/> and sets the default values.
        /// </summary>
        public CustomIndicatorFeeds_indicator_feed_metadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_on", n => { CreatedOn = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_description>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_description.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_id.CreateFromDiscriminatorValue); } },
                { "is_attributable", n => { IsAttributable = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_attributable>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_attributable.CreateFromDiscriminatorValue); } },
                { "is_downloadable", n => { IsDownloadable = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_downloadable>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_downloadable.CreateFromDiscriminatorValue); } },
                { "is_public", n => { IsPublic = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_public>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_public.CreateFromDiscriminatorValue); } },
                { "latest_upload_status", n => { LatestUploadStatus = n.GetEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata_latest_upload_status>(); } },
                { "modified_on", n => { ModifiedOn = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_name>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_name.CreateFromDiscriminatorValue); } },
                { "provider_id", n => { ProviderId = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_id>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_id.CreateFromDiscriminatorValue); } },
                { "provider_name", n => { ProviderName = n.GetObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_name>(global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_name.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_on", CreatedOn);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_description>("description", Description);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_id>("id", Id);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_attributable>("is_attributable", IsAttributable);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_downloadable>("is_downloadable", IsDownloadable);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_is_public>("is_public", IsPublic);
            writer.WriteEnumValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_indicator_feed_metadata_latest_upload_status>("latest_upload_status", LatestUploadStatus);
            writer.WriteDateTimeOffsetValue("modified_on", ModifiedOn);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_name>("name", Name);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_id>("provider_id", ProviderId);
            writer.WriteObjectValue<global::Soenneker.Cloudflare.OpenApiClient.Models.CustomIndicatorFeeds_provider_name>("provider_name", ProviderName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
